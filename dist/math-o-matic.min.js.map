{"version":3,"sources":["webpack://MathOMatic/webpack/universalModuleDefinition","webpack://MathOMatic/webpack/bootstrap","webpack://MathOMatic/./src/exprs/Expr.ts","webpack://MathOMatic/./src/exprs/types.ts","webpack://MathOMatic/./src/exprs/Fun.ts","webpack://MathOMatic/./src/exprs/Schema.ts","webpack://MathOMatic/./src/exprs/Variable.ts","webpack://MathOMatic/./src/exprs/$Variable.ts","webpack://MathOMatic/./src/exprs/Parameter.ts","webpack://MathOMatic/./src/exprs/Funcall.ts","webpack://MathOMatic/./src/exprs/ObjectFun.ts","webpack://MathOMatic/./src/ExecutionContext.ts","webpack://MathOMatic/./src/UniversalCounter.ts","webpack://MathOMatic/./src/exprs/Nameable.ts","webpack://MathOMatic/./src/exprs/Tee.ts","webpack://MathOMatic/./src/Program.ts","webpack://MathOMatic/./src/PegInterface.ts","webpack://MathOMatic/./src/exprs/Reduction.ts","webpack://MathOMatic/./src/exprs/With.ts","webpack://MathOMatic/./src/ProofExplorer.ts","webpack://MathOMatic/./src/Counter.ts","webpack://MathOMatic/./src/Scope.ts","webpack://MathOMatic/./src/StackTrace.ts","webpack://MathOMatic/./build_tmp/parser.js","webpack://MathOMatic/./build_tmp/evalParser.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","EqualsPriority","Expr","doc","tex","type","trace","_id","next","error","andFuncalls","expandMetaCache","expandMetaInternal","obj","context","equals","getEqualsPriority","equalsInternal","hypotheses","length","isProvedInternal","hypnumMap","$Map","ctr","has","_type","num","expr","getProofInternal","toIndentedString","message","Error","prec","Array","console","log","my","normalizePrecedence","precedence","your","replace","code","match","g1","regex","RegExp","join","capitalize","charCodeAt","commandName","toLowerCase","toUpperCase","substring","escapeTeX","id","args","ret","shouldConsolidate","_match","PREC_FUNEXPR","PREC_COMMA","PREC_COLONEQQ","Type","TeeType","left","right","SimpleObjectType","FunctionalObjectType","FunctionalMetaType","from","to","super","indent","ObjectType","resolve","toTeXString","isFunctional","map","f","e","Fun","annotations","sealed","rettype","params","parsed","parseTeX","variable","isProved","ONE","placeholders","types","push","selector","usedMacrosList","thisCall","fun","objCall","concat","Map","set","substitute","start","peek","$lines","def$s","forEach","$","lines","getProof","$num","Schema","schemaType","isProvedCache","some","expandMeta","_context","repeat","proved","toTeXStringWithId","Variable","canUse","ZERO","FOUR","tmp","toString","makeTeXName","$Variable","FIVE","Parameter","Funcall","isNameable","resolvedType","paramTypes","argTypes","arg","callee","isExpandable","isCallable","used","expanded","calleeExpanded","expandOnce","THREE","T","q","thisIsExpandable","objIsExpandable","every","_","schema","schemalines","funcallToTeXString","ObjectFun","makeTeX","ExecutionContext","usingList","includes","Tee","lef","TWO","leftlines","rightlines","flat","parser","evalParser","Program","scopeMap","filename","loader","loadingModules","scope","loadModuleInternal","loadingModuleIndex","indexOf","cycle","slice","fileUri","feed","pop","parse","line","scope2","importMap","hasType","addType","hasVariable","addVariable","addFun","hasSchema","addSchema","tee","reduction","schemacall","metavar","ktx","typeObjToString","ftype","typeObjToNestedArr","varObjToString","PI","parentScope","extend","location","getType","getVariable","objectexpr","isParam","tvo","tv","hasOwnVariable","with","funcall","hypnum","Number","has$","get$","getSchema","$v","def$","hasOwn$","add$","scopeRight","oldContext","using","subject","g","antecedents","as","Reduction","derefs","guess","antecedentTypes","requiredAntecedents","antecedentEqualsResults","fill","antecedentsExpanded","preFormatConsequent","rightEqualsResult","consequent","antecedentLinesList","antecedentNums","ref","of","subjectlines","subjectnum","reduced","pattern","instance","recurse","ptr","test","With","var","ProofExplorer","DIAMOND","getHtmlLine","h1","h2","options","padding","bbb","rrb","htmlLeft","a","ncols","exprToHtml","expand","tree","innertree","Math","max","html","tree2html","newleft","v","Counter","Scope","parent","typedefMap","defMap","schemaMap","child","h","values","hasOwnType","filter","hasOwnSchema","StackTrace","stack","element","column","peg$SyntaxError","expected","found","captureStackTrace","peg$subclass","ctor","constructor","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","describeExpected","j","descriptions","sort","describeFound","SyntaxError","peg$parse","input","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c1","imports","peg$c4","peg$c5","peg$literalExpectation","peg$c7","peg$c8","peg$c9","peg$c10","peg$c13","peg$c14","peg$c20","peg$c22","peg$c23","peg$c24","peg$classExpectation","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","head","peg$c33","peg$c34","peg$c36","peg$c37","peg$c38","peg$c39","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c53","peg$c54","peg$c55","peg$c58","peg$c62","peg$c64","peg$c65","peg$c66","tail","peg$c68","peg$c71","peg$c72","peg$c73","peg$c74","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","as_","peg$c85","peg$c86","peg$c87","peg$c90","peg$c91","peg$c92","peg$c93","peg$c97","peg$c102","peg$c104","peg$c107","peg$c108","peg$c109","varname","varexpr","peg$c113","peg$c115","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","peg$c129","peg$c130","peg$c132","b","peg$c134","peg$c136","peg$c137","peg$c138","peg$c140","peg$c142","peg$c144","peg$c145","peg$c146","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$resultsCache","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s2","s3","s4","s5","cached","nextPos","result","peg$parse_","peg$parseimport","peg$parseline","peg$parsetypedef","peg$parsedefv","peg$parsedefun","peg$parsedefschema","s1","substr","peg$parse__","peg$parseident","peg$parsesem","s6","s7","s9","peg$parsedocumentation","peg$parseftype","s8","s11","peg$parsetex","peg$parsetype","peg$parseobjectexpr","peg$c17","peg$parsedefparam","peg$parsedefschemaparam","s10","s12","charAt","s14","s15","s16","s18","peg$c42","s13","s17","defdollars","peg$parseannotation","peg$c56","peg$parsedefdollar","peg$parseexpr_internal_3","peg$parsereduction","s19","s20","peg$parseexpr_internal_2","peg$parseschemacall","peg$parsevar","peg$c84","peg$parsefuncall","peg$parsefunexpr","peg$parseschemaexpr","foo","peg$parseexpr_internal_1","peg$c98","peg$parsetee","peg$c105","peg$parsewith","s22","peg$parsedollar_ident","peg$parsestype","peg$parseat_var","peg$parseat_ident","peg$parsedollar_var","peg$parseplain_var","peg$parsekeyword","peg$parsecomment","peg$parsenewline","evaluable","peg$parseevaluable","peg$parseevaluable_internal"],"mappings":"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","file":"math-o-matic.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MathOMatic\"] = factory();\n\telse\n\t\troot[\"MathOMatic\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import Counter from \"../Counter\";\nimport ExecutionContext from \"../ExecutionContext\";\nimport { ProofType } from \"../ProofType\";\nimport StackTrace from \"../StackTrace\";\nimport UniversalCounter from \"../UniversalCounter\";\nimport Fun from \"./Fun\";\nimport { Type } from \"./types\";\nimport Variable from \"./Variable\";\n\n/**\n * 숫자가 큰 것이 우선순위가 높다.\n */\nexport enum EqualsPriority {\n\t/** Variable (primitive) */\n\tZERO,\n\t/** Fun */\n\tONE,\n\t/** Tee */\n\tTWO,\n\t/** Funcall */\n\tTHREE,\n\t/** Variable (macro) */\n\tFOUR,\n\t/** $Variable, Reduction */\n\tFIVE\n}\n\nexport type Precedence = boolean | number | [number, number];\n\nexport default abstract class Expr {\n\t\n\tpublic readonly _id: number;\n\n\tpublic readonly doc: string;\n\tpublic readonly tex: string;\n\tpublic readonly trace: StackTrace;\n\tpublic precedence: Precedence;\n\n\tpublic readonly type: Type;\n\tprivate expandMetaCache: Expr;\n\n\tpublic static readonly PREC_FUNEXPR = 1000;\n\tpublic static readonly PREC_COMMA = 1000;\n\tpublic static readonly PREC_COLONEQQ = 100000;\n\n\tconstructor (doc: string, tex: string, type: Type, trace: StackTrace) {\n\t\tthis._id = UniversalCounter.next();\n\t\tthis.doc = doc;\n\t\tthis.tex = tex;\n\t\tthis.trace = trace;\n\n\t\tif (!type) throw Expr.error('Assertion failed', trace);\n\n\t\tthis.type = type;\n\t}\n\n\tpublic abstract substitute(map: Map<Variable, Expr>): Expr;\n\n\t/**\n\t * \n\t * @param andFuncalls 이름 없는 Funcall도 푼다.\n\t */\n\tpublic expandMeta(andFuncalls: boolean): Expr {\n\t\tif (this.expandMetaCache) return this.expandMetaCache;\n\t\treturn this.expandMetaCache = this.expandMetaInternal(andFuncalls);\n\t}\n\n\tprotected abstract expandMetaInternal(andFuncalls: boolean): Expr;\n\n\t/**\n\t * \n\t * @return 같지 않으면 `false`. 같으면 같음을 보이는 데 사용한 매크로들의 목록.\n\t */\n\tpublic equals(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\t// console.log(`${this}\\n\\n${obj}`);\n\t\t// var ret = (() => {\n\t\t\n\t\tif (this === obj) return [];\n\t\tif (!this.type.equals(obj.type)) return false;\n\n\t\tif (obj.getEqualsPriority(context) > this.getEqualsPriority(context))\n\t\t\treturn obj.equalsInternal(this, context);\n\t\t\n\t\treturn this.equalsInternal(obj, context);\n\n\t\t// })();\n\t\t// console.log(`${this}\\n\\n${obj}\\n\\nresult:`, ret);\n\t\t// return ret;\n\t}\n\n\t/**\n\t * \n\t * @return 같지 않으면 `false`. 같으면 같음을 보이는 데 사용한 매크로들의 목록.\n\t */\n\tprotected abstract equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false;\n\n\tprotected abstract getEqualsPriority(context: ExecutionContext): EqualsPriority;\n\n\tpublic isProved(hypotheses?: Expr[]): boolean {\n\t\thypotheses = hypotheses || [];\n\n\t\tfor (var i = 0; i < hypotheses.length; i++) {\n\t\t\tif (hypotheses[i] == this) return true;\n\t\t}\n\n\t\treturn this.isProvedInternal(hypotheses);\n\t}\n\n\tprotected abstract isProvedInternal(hypotheses: Expr[]): boolean;\n\n\tpublic getProof(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter,\n\t\t\troot: boolean=false): ProofType[] {\n\t\t\n\t\tif (hypnumMap.has(this)) {\n\t\t\treturn [{\n\t\t\t\t_type: 'R',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tnum: hypnumMap.get(this),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tif ($Map.has(this)) {\n\t\t\treturn [{\n\t\t\t\t_type: 'R',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tnum: $Map.get(this),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\treturn this.getProofInternal(hypnumMap, $Map, ctr, root);\n\t}\n\n\tprotected abstract getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter,\n\t\t\troot?: boolean): ProofType[];\n\t\n\tpublic toString() {\n\t\treturn this.toIndentedString(0);\n\t}\n\n\tpublic abstract toIndentedString(indent: number, root?: boolean): string;\n\tpublic abstract toTeXString(prec?: Precedence, root?: boolean): string;\n\n\tpublic error(message: string) {\n\t\treturn Expr.error(message, this.trace);\n\t}\n\n\tpublic static error(message: string, trace: StackTrace) {\n\t\tif (trace) {\n\t\t\treturn trace.error(message);\n\t\t} else {\n\t\t\treturn new Error(message);\n\t\t}\n\t}\n\n\t/*\n\t* false corresponds to 0.\n\t* true corresponds to w * 2.\n\t*/\n\tpublic static normalizePrecedence(prec: Precedence) {\n\t\tif (prec === false) return [0, 0];\n\t\tif (prec === true) return [2, 0];\n\t\tif (typeof prec == 'number') return [0, prec];\n\n\t\tif (!(prec instanceof Array && prec.length == 2)) {\n\t\t\tconsole.log(prec);\n\t\t\tthrow Error('wut');\n\t\t}\n\n\t\treturn prec;\n\t}\n\n\tpublic shouldConsolidate(prec: Precedence): boolean {\n\t\tvar my = Expr.normalizePrecedence(this.precedence || false),\n\t\t\tyour = Expr.normalizePrecedence(prec || false);\n\n\t\tif (my[0] == 0 && my[1] == 0) return false;\n\n\t\treturn !(my[0] < your[0] || my[0] == your[0] && my[1] < your[1]);\n\t}\n\n\tpublic static escapeTeX(s: string): string {\n\t\treturn s.replace(/&|%|\\$|#|_|{|}|~|\\^|\\\\/g, m => ({\n\t\t\t'&': '\\\\&', '%': '\\\\%', '$': '\\\\$',\n\t\t\t'#': '\\\\#', '_': '\\\\_', '{': '\\\\{',\n\t\t\t'}': '\\\\}',\n\t\t\t'~': '\\\\textasciitilde',\n\t\t\t'^': '\\\\textasciicircum',\n\t\t\t'\\\\': '\\\\textbackslash'\n\t\t})[m]);\n\t}\n\n\tpublic static parseTeX(tex: string) {\n\t\tvar precedence: Precedence = false;\n\n\t\tvar code = tex.replace(/^!<prec=([0-9]+)>/, (match, g1) => {\n\t\t\tprecedence = g1 * 1;\n\t\t\treturn '';\n\t\t});\n\n\t\treturn {precedence, code};\n\t}\n\n\tpublic static makeTeXName(name: string): string {\n\t\tvar alphabet = [\n\t\t\t\"alpha\", \"beta\", \"gamma\", \"delta\",\n\t\t\t\"epsilon\", \"zeta\", \"eta\", \"theta\",\n\t\t\t\"iota\", \"kappa\", \"lambda\", \"mu\",\n\t\t\t\"nu\", \"xi\", \"omicron\", \"pi\",\n\t\t\t\"rho\", \"sigma\", \"tau\", \"upsilon\",\n\t\t\t\"phi\", \"chi\", \"psi\", \"omega\"\n\t\t];\n\n\t\tvar regex = new RegExp(`^(?:([a-z])|(${alphabet.join('|')}))([0-9]*)$`, 'i');\n\t\tvar match = name.match(regex);\n\n\t\tif (match) {\n\t\t\tvar letter = (() => {\n\t\t\t\tif (match[1]) return match[1];\n\t\t\t\t\n\t\t\t\tvar capitalize = match[2].charCodeAt(0) <= 'Z'.charCodeAt(0);\n\t\t\t\tvar commandName = match[2].toLowerCase();\n\n\t\t\t\tif (capitalize) {\n\t\t\t\t\tcommandName = commandName[0].toUpperCase() + commandName.substring(1);\n\t\t\t\t}\n\n\t\t\t\treturn '\\\\' + commandName;\n\t\t\t})();\n\n\t\t\tvar subscript = (() => {\n\t\t\t\tif (!match[3]) return '';\n\t\t\t\tif (match[3].length == 1) return '_' + match[3];\n\t\t\t\treturn `_{${match[3]}}`;\n\t\t\t})();\n\n\t\t\treturn letter + subscript;\n\t\t}\n\n\t\tif (name.length == 1) {\n\t\t\treturn Expr.escapeTeX(name);\n\t\t}\n\n\t\treturn `\\\\mathrm{${Expr.escapeTeX(name)}}`;\n\t}\n\n\tpublic makeTeX(id, args, prec) {\n\t\targs = args || [];\n\t\tprec = prec || false;\n\t\t\n\t\tvar ret = this.tex;\n\n\t\tif (this.shouldConsolidate(prec)) {\n\t\t\tret = '\\\\left(' + ret + '\\\\right)';\n\t\t}\n\n\t\treturn ret.replace(/#([0-9]+)/g, (match, g1) => {\n\t\t\treturn args[g1 * 1 - 1] || `\\\\texttt{\\\\textcolor{red}{\\\\#${g1}}}`;\n\t\t}).replace(/<<(.+?)>>/, (_match, g1) => {\n\t\t\treturn `\\\\href{#${id}}{${g1}}`;\n\t\t});\n\t}\n}","import StackTrace from \"../StackTrace\";\nimport UniversalCounter from \"../UniversalCounter\";\nimport Nameable from \"./Nameable\";\n\nexport abstract class Type {\n\n\tpublic readonly _id: number;\n\tpublic readonly trace: StackTrace;\n\tpublic readonly doc: string;\n\n\tconstructor (doc: string, trace: StackTrace) {\n\t\tthis._id = UniversalCounter.next();\n\t\tthis.doc = doc;\n\t\tthis.trace = trace;\n\t}\n\n\tpublic abstract resolve(): Type;\n\n\tpublic toString() {\n\t\treturn this.toIndentedString(0);\n\t}\n\n\tpublic abstract toIndentedString(indent: number): string;\n\n\tpublic abstract isFunctional(): boolean;\n\n\tpublic equals(t: Type): boolean {\n\t\tif (this === t) return true;\n\n\t\tif (!(t instanceof Type)) return false;\n\n\t\tif ((this instanceof TeeType) != (t instanceof TeeType)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this instanceof TeeType && t instanceof TeeType) {\n\t\t\tif (this.left.length != t.left.length) return false;\n\n\t\t\tfor (var i = 0; i < this.left.length; i++) {\n\t\t\t\tif (!this.left[i].equals(t.left[i])) return false;\n\t\t\t}\n\n\t\t\treturn this.right.equals(t.right);\n\t\t}\n\n\t\tif (this instanceof SimpleObjectType && this.expr) {\n\t\t\treturn this.expr.equals(t);\n\t\t}\n\n\t\tif (t instanceof SimpleObjectType && t.expr) {\n\t\t\treturn this.equals(t.expr);\n\t\t}\n\n\t\tif (this instanceof SimpleObjectType || t instanceof SimpleObjectType) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((this instanceof FunctionalObjectType || this instanceof FunctionalMetaType)\n\t\t\t\t&& (t instanceof FunctionalObjectType || t instanceof FunctionalMetaType)) {\n\t\t\tif (this.from.length != t.from.length) return false;\n\n\t\t\tfor (var i = 0; i < this.from.length; i++) {\n\t\t\t\tif (!this.from[i].equals(t.from[i])) return false;\n\t\t\t}\n\n\t\t\treturn this.to.equals(t.to);\n\t\t}\n\n\t\tthrow Error('Unknown type format');\n\t}\n}\n\ninterface TeeTypeArgumentType {\n\tleft: Type[];\n\tright: Type;\n}\n\nexport class TeeType extends Type {\n\n\tpublic readonly left: Type[];\n\tpublic readonly right: Type;\n\n\tconstructor ({left, right}: TeeTypeArgumentType, trace: StackTrace) {\n\t\tsuper(null, trace);\n\n\t\tif (!left || !right) {\n\t\t\tthrow Error('duh');\n\t\t}\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t}\n\n\tpublic toIndentedString(indent: number): string {\n\t\treturn `[${this.left.join(', ')} |- ${this.right}]`;\n\t}\n\n\tpublic resolve(): Type {\n\t\treturn this;\n\t}\n\n\tpublic isFunctional(): boolean {\n\t\treturn false;\n\t}\n}\n\ninterface FunctionalMetaTypeArgumentType {\n\tfrom: ObjectType[];\n\tto: Type;\n}\n\nexport class FunctionalMetaType extends Type {\n\t\n\tpublic readonly from: ObjectType[];\n\tpublic readonly to: Type;\n\n\tconstructor ({from, to}: FunctionalMetaTypeArgumentType, trace: StackTrace) {\n\t\tsuper(null, trace);\n\n\t\tif (!from || !to) {\n\t\t\tthrow Error('duh');\n\t\t}\n\n\t\tthis.from = from;\n\t\tthis.to = to;\n\t}\n\n\tpublic toIndentedString(indent: number): string {\n\t\treturn `[${this.from.join(', ')} -> ${this.to}]`;\n\t}\n\n\tpublic resolve(): FunctionalMetaType {\n\t\treturn this;\n\t}\n\n\tpublic isFunctional(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport abstract class ObjectType extends Type {\n\n\tconstructor (doc: string, trace: StackTrace) {\n\t\tsuper(doc, trace);\n\t}\n\n\tpublic abstract resolve(): ObjectType;\n\n\tpublic abstract toTeXString(root?: boolean): string;\n}\n\ninterface SimpleObjectTypeArgumentType {\n\tdoc: string;\n\tname: string;\n\texpr: ObjectType;\n}\n\nexport class SimpleObjectType extends ObjectType implements Nameable {\n\n\tpublic readonly name: string;\n\tpublic readonly expr: ObjectType;\n\n\tconstructor ({doc, name, expr}: SimpleObjectTypeArgumentType, trace: StackTrace) {\n\t\tsuper(doc, trace);\n\n\t\tif (!name) throw Error('duh');\n\n\t\tthis.name = name;\n\t\tthis.expr = expr;\n\t}\n\n\tpublic resolve(): ObjectType {\n\t\treturn this.expr ? this.expr.resolve() : this;\n\t}\n\n\tpublic toIndentedString(indent: number): string {\n\t\treturn this.name;\n\t}\n\n\tpublic toTeXString(root?: boolean): string {\n\t\tvar name = `\\\\href{#type-${this.name}}{\\\\mathsf{${this.name}}}`;\n\n\t\tif (root && this.expr) {\n\t\t\treturn name + `\\\\coloneqq${this.expr.toTeXString()}`;\n\t\t}\n\n\t\treturn name;\n\t}\n\n\tpublic isFunctional(): boolean {\n\t\tif (this.expr) return this.expr.isFunctional();\n\n\t\treturn false;\n\t}\n}\n\ninterface FunctionalObjectTypeArgumentType {\n\tfrom: ObjectType[];\n\tto: ObjectType;\n}\n\nexport class FunctionalObjectType extends ObjectType {\n\n\tpublic readonly from: ObjectType[];\n\tpublic readonly to: ObjectType;\n\n\tconstructor ({from, to}: FunctionalObjectTypeArgumentType, trace: StackTrace) {\n\t\tsuper(null, trace);\n\n\t\tthis.from = from;\n\t\tthis.to = to;\n\t}\n\n\tpublic resolve(): FunctionalObjectType {\n\t\treturn new FunctionalObjectType({\n\t\t\tfrom: this.from.map(f => f.resolve()),\n\t\t\tto: this.to.resolve()\n\t\t}, this.trace);\n\t}\n\n\tpublic toIndentedString(indent: number): string {\n\t\treturn `[${this.from.join(', ')} -> ${this.to}]`;\n\t}\n\n\tpublic toTeXString(root?: boolean): string {\n\t\treturn `\\\\left[${this.from.map(e => e.toTeXString()).join('\\\\times ')}`\n\t\t\t+ ` \\\\to ${this.to.toTeXString()}\\\\right]`;\n\t}\n\n\tpublic isFunctional(): boolean {\n\t\treturn true;\n\t}\n}","import Nameable from './Nameable';\nimport Expr, { EqualsPriority } from './Expr';\n\nexport default abstract class Fun extends Expr implements Nameable {\n\n\tpublic readonly annotations: string[];\n\tpublic readonly sealed: boolean;\n\tpublic readonly name: string;\n\tpublic readonly params: Parameter[];\n\tpublic readonly expr: Expr;\n\n\tconstructor ({doc, tex, annotations, sealed, rettype, name, params, expr}: FunArgumentType, trace: StackTrace) {\n\t\tif (!name && !expr)\n\t\t\tthrow Expr.error('Anonymous fun cannot be primitive', trace);\n\n\t\tif (rettype && expr) {\n\t\t\tif (!rettype.equals(expr.type)) {\n\t\t\t\tthrow Expr.error(`Expression type ${expr.type} failed to match the return type ${rettype} of fun ${name}`, trace);\n\t\t\t}\n\t\t}\n\n\t\tif (!rettype && !expr) {\n\t\t\tthrow Expr.error('Cannot guess the return type of a primitive fun', trace);\n\t\t}\n\t\t\n\t\tif (sealed && !expr) {\n\t\t\tthrow Expr.error('Cannot seal a primitive fun', trace);\n\t\t}\n\t\t\n\t\tvar precedence = false;\n\n\t\tif (tex) {\n\t\t\tvar parsed = Expr.parseTeX(tex);\n\t\t\tprecedence = parsed.precedence;\n\t\t\ttex = parsed.code;\n\t\t} else {\n\t\t\ttex = null;\n\t\t}\n\t\t\n\t\tsuper(\n\t\t\tdoc, tex,\n\t\t\tnew ((rettype || expr.type) instanceof ObjectType ? FunctionalObjectType : FunctionalMetaType)({\n\t\t\t\tfrom: params.map(variable => variable.type),\n\t\t\t\tto: rettype || expr.type as any\n\t\t\t}, trace),\n\t\t\ttrace\n\t\t);\n\n\t\tthis.annotations = annotations;\n\t\tthis.sealed = sealed;\n\t\tthis.precedence = precedence;\n\t\tthis.name = name;\n\t\tthis.params = params;\n\t\tthis.expr = expr;\n\t}\n\n\t/**\n\t * 매개변수의 개수.\n\t */\n\tget length(): number {\n\t\treturn this.params.length;\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.expr && this.expr.isProved(hypotheses);\n\t}\n\n\tprotected getEqualsPriority(): EqualsPriority {\n\t\treturn EqualsPriority.ONE;\n\t}\n\t\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\tif (!(this.expr && !this.sealed)\n\t\t\t\t&& !(obj instanceof Fun && obj.expr && !obj.sealed)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar placeholders = [];\n\t\tvar types = (this.type.resolve() as FunctionalObjectType | FunctionalMetaType).from;\n\n\t\tfor (var i = 0; i < types.length; i++) {\n\t\t\tplaceholders.push(new Parameter({\n\t\t\t\ttype: types[i],\n\t\t\t\tname: '$' + i,\n\t\t\t\tselector: null\n\t\t\t}, this.trace));\n\t\t}\n\n\t\tvar usedMacrosList = [];\n\n\t\tvar thisCall = this.expr && !this.sealed\n\t\t\t? (this.name && usedMacrosList.push(this), this.call(placeholders))\n\t\t\t: new Funcall({\n\t\t\t\tfun: this,\n\t\t\t\targs: placeholders\n\t\t\t}, this.trace);\n\n\t\tvar objCall = obj instanceof Fun && obj.expr && !obj.sealed\n\t\t\t? (obj.name && usedMacrosList.push(obj), obj.call(placeholders))\n\t\t\t: new Funcall({\n\t\t\t\tfun: obj,\n\t\t\t\targs: placeholders\n\t\t\t}, this.trace);\n\t\t\n\t\tvar ret = thisCall.equals(objCall, context);\n\t\treturn ret && ret.concat(usedMacrosList);\n\t}\n\n\tpublic abstract isCallable(context: ExecutionContext): boolean;\n\n\tpublic call(args: Expr[]): Expr {\n\t\tif (!this.expr) {\n\t\t\tthrow Error('Cannot call a primitive fun');\n\t\t}\n\n\t\tif (this.params.length != args.length) {\n\t\t\tthrow Error('Arguments length mismatch');\n\t\t}\n\n\t\tfor (var i = 0; i < this.params.length; i++) {\n\t\t\tif (!this.params[i].type.equals(args[i].type)) {\n\t\t\t\tthrow Error('Illegal type');\n\t\t\t}\n\t\t}\n\n\t\tvar map: Map<Variable, Expr> = new Map();\n\n\t\tfor (var i = 0; i < this.params.length; i++) {\n\t\t\tmap.set(this.params[i], args[i]);\n\t\t}\n\n\t\treturn this.expr.substitute(map);\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter,\n\t\t\troot: boolean=false): ProofType[] {\n\t\t\n\t\tif (this instanceof Schema && this.name && !root) {\n\t\t\treturn [{\n\t\t\t\t_type: 'RS',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tif (!this.expr) {\n\t\t\treturn [{\n\t\t\t\t_type: 'NP',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\t$Map = new Map($Map);\n\n\t\tvar start = ctr.peek() + 1;\n\n\t\tvar $lines: ProofType[] = [];\n\t\t\n\t\tif (this instanceof Schema) {\n\t\t\tthis.def$s.forEach($ => {\n\t\t\t\tvar lines = $.expr.getProof(hypnumMap, $Map, ctr);\n\t\t\t\t$lines = $lines.concat(lines);\n\n\t\t\t\tvar $num = lines[lines.length - 1].ctr;\n\t\t\t\t$Map.set($, $num);\n\t\t\t});\n\t\t}\n\n\t\treturn [{\n\t\t\t_type: 'V',\n\t\t\t$lines,\n\t\t\tlines: this.expr.getProof(hypnumMap, $Map, ctr),\n\t\t\tparams: this.params,\n\t\t\tctr: [start, ctr.peek()]\n\t\t}];\n\t}\n}\n\nimport Funcall from './Funcall';\nimport Variable from './Variable';\nimport StackTrace from '../StackTrace';\nimport ExecutionContext from '../ExecutionContext';\nimport Counter from '../Counter';\nimport { ProofType } from '../ProofType';\nimport Schema from './Schema';\nimport Parameter from './Parameter';\nimport { ObjectType, FunctionalObjectType, FunctionalMetaType, Type } from './types';\n\ninterface FunArgumentType {\n\tdoc: string;\n\ttex: string;\n\tannotations: string[];\n\tsealed: boolean;\n\trettype: Type;\n\tname: string;\n\tparams: Parameter[];\n\texpr: Expr;\n}","import Fun from \"./Fun\";\n\nexport type SchemaType = 'axiom' | 'theorem' | 'schema';\n\nexport default class Schema extends Fun {\n\n\tpublic readonly schemaType: SchemaType;\n\tpublic readonly using: ObjectFun[];\n\tpublic readonly def$s: $Variable[];\n\tpublic readonly context: ExecutionContext;\n\tprivate isProvedCache: boolean;\n\n\tconstructor ({doc, tex, annotations, schemaType, name, params, context, def$s, expr}: SchemaArgumentType, trace: StackTrace) {\n\t\tif (!expr) {\n\t\t\tthrow Expr.error('wut', trace);\n\t\t}\n\n\t\tif (schemaType != 'schema' && !name) {\n\t\t\tthrow Expr.error(`wut`, trace);\n\t\t}\n\n\t\tsuper({doc, tex, annotations, sealed: false, rettype: null, name, params, expr}, trace);\n\t\t\n\t\tthis.schemaType = schemaType;\n\t\tthis.def$s = def$s || [];\n\t\tthis.context = context;\n\n\t\tif (schemaType == 'theorem') {\n\t\t\tif (!this.isProved()) {\n\t\t\t\tthrow Expr.error(`Schema ${name} is marked as a theorem but it is not proved`, trace);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\tif (this.isProvedCache) return true;\n\n\t\tif (hypotheses.length == 0 && typeof this.isProvedCache == 'boolean') {\n\t\t\treturn this.isProvedCache;\n\t\t}\n\n\t\tvar ret = this.schemaType == 'axiom' || this.expr.isProved(hypotheses);\n\t\tif (!hypotheses.length) this.isProvedCache = ret;\n\t\treturn ret;\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\tif (!this.expr) return this;\n\n\t\t// 이름이 있는 것은 스코프 밖에서 보이지 않으므로 치환될 것을\n\t\t// 갖지 않는다는 생각이 들어 있다.\n\t\tif (this.name) return this;\n\n\t\t// 위의 this.name 조건을 지우면 특수한 경우에 이게 발생할지도 모른다.\n\t\tif (this.params.some(e => map.has(e)))\n\t\t\tthrow Error('Parameter collision');\n\n\t\treturn new Schema({\n\t\t\tdoc: null,\n\t\t\ttex: null,\n\t\t\tannotations: this.annotations,\n\t\t\tschemaType: 'schema',\n\t\t\tname: null,\n\t\t\tparams: this.params,\n\t\t\tcontext: this.context,\n\t\t\tdef$s: this.def$s,\n\t\t\texpr: this.expr.substitute(map)\n\t\t}, this.trace);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\tif (!this.expr) return this;\n\t\tif (this.type instanceof ObjectType && this.name) return this;\n\n\t\treturn new Schema({\n\t\t\tdoc: null,\n\t\t\ttex: null,\n\t\t\tannotations: this.annotations,\n\t\t\tschemaType: 'schema',\n\t\t\tname: null,\n\t\t\tparams: this.params,\n\t\t\tcontext: this.context,\n\t\t\tdef$s: this.def$s,\n\t\t\texpr: this.expr.expandMeta(andFuncalls)\n\t\t}, this.trace);\n\t}\n\n\tpublic isCallable(_context: ExecutionContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\treturn [\n\t\t\t`∫ ${this.name || ''}(${this.params.map(p => p.toIndentedString(indent)).join(', ')}) => {`,\n\t\t\t'\\t' + this.expr.expandMeta(true).toIndentedString(indent + 1),\n\t\t\t'}'\n\t\t].join('\\n' + '\\t'.repeat(indent));\n\t}\n\t\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tif (!this.name) {\n\t\t\tthis.precedence = Expr.PREC_FUNEXPR;\n\t\t\treturn [\n\t\t\t\t(this.shouldConsolidate(prec) ? '\\\\left(' : ''),\n\n\t\t\t\t(\n\t\t\t\t\tthis.params.length == 1\n\t\t\t\t\t? this.params[0].toTeXString(false)\n\t\t\t\t\t: `\\\\left(${this.params.map(e => e.toTeXString(Expr.PREC_COMMA)).join(', ')}\\\\right)`\n\t\t\t\t),\n\t\t\t\t'\\\\mapsto ',\n\t\t\t\tthis.expr.expandMeta(true).toTeXString(false),\n\n\t\t\t\t(this.shouldConsolidate(prec) ? '\\\\right)' : '')\n\t\t\t].join('');\n\t\t}\n\t\t\n\t\tvar id = 'def-' + this.name,\n\t\t\tproved = this.isProved() ? 'p' : 'np';\n\t\n\t\tif (!root)\n\t\t\treturn `\\\\href{#${id}}{\\\\htmlData{proved=${proved}}{\\\\mathsf{${Expr.escapeTeX(this.name)}}}}`;\n\t\n\t\treturn `\\\\href{#${id}}{\\\\htmlData{proved=${proved}}{\\\\mathsf{${Expr.escapeTeX(this.name)}}}}\\\\mathord{\\\\left(${this.params.map(e => e.toTeXStringWithId(Expr.PREC_COMMA) + (e.selector ? `: \\\\texttt{@${e.selector}}` : '')).join(', ')}\\\\right)}:\\\\\\\\\\\\quad`\n\t\t\t\t+ this.expr.expandMeta(true).toTeXString(true);\n\t}\n}\n\nimport $Variable from \"./$Variable\";\nimport Expr, { Precedence } from \"./Expr\";\nimport Variable from \"./Variable\";\nimport ObjectFun from \"./ObjectFun\";\nimport StackTrace from \"../StackTrace\";\nimport ExecutionContext from \"../ExecutionContext\";\nimport Parameter from \"./Parameter\";\nimport { ObjectType } from \"./types\";\n\ninterface SchemaArgumentType {\n\tdoc: string;\n\ttex: string;\n\tannotations: string[];\n\tschemaType: SchemaType;\n\tname: string;\n\tparams: Parameter[];\n\tcontext: ExecutionContext;\n\tdef$s: $Variable[];\n\texpr: Expr;\n}","import Counter from '../Counter';\nimport ExecutionContext from '../ExecutionContext';\nimport { ProofType } from '../ProofType';\nimport StackTrace from '../StackTrace';\nimport Fun from './Fun';\nimport Expr, { EqualsPriority, Precedence } from './Expr';\nimport Nameable from './Nameable';\n\ninterface VariableArgumentType {\n\tdoc?: string;\n\ttex?: string;\n\tsealed: boolean;\n\ttype: ObjectType;\n\tname: string;\n\texpr: Expr;\n}\n\nexport default class Variable extends Expr implements Nameable {\n\n\tpublic readonly sealed: boolean;\n\tpublic readonly type: ObjectType;\n\tpublic readonly name: string;\n\tpublic readonly expr: Expr | null;\n\n\tconstructor ({doc, tex, sealed, type, name, expr}: VariableArgumentType, trace: StackTrace) {\n\t\tsuper(doc, tex, type, trace);\n\t\t\n\t\tif (typeof name != 'string')\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t\n\t\tif (sealed && !expr) {\n\t\t\tthrow Expr.error('Cannot seal a primitive fun', trace);\n\t\t}\n\n\t\tif (expr && !type.equals(expr.type)) {\n\t\t\tthrow Expr.error(`Expression type ${expr.type} failed to match the type ${type} of variable ${name}`, trace);\n\t\t}\n\n\t\tthis.sealed = sealed;\n\t\tthis.name = name;\n\t\tthis.expr = expr;\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn false;\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\tif (map.has(this)) return map.get(this);\n\n\t\t// 매크로 변수는 스코프 밖에서 보이지 않으므로 치환될 것을 갖지 않는다는\n\t\t// 생각이 들어 있다.\n\t\treturn this;\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\treturn this;\n\t}\n\n\tprotected getEqualsPriority(context: ExecutionContext): EqualsPriority {\n\t\treturn this.expr && (!this.sealed || context.canUse(this))\n\t\t\t? EqualsPriority.FOUR\n\t\t\t: EqualsPriority.ZERO;\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\tif (!this.expr) return false;\n\n\t\tif (!this.sealed || context.canUse(this)) {\n\t\t\tvar tmp = this.expr.equals(obj, context);\n\t\t\tif (!tmp) return tmp;\n\t\t\treturn tmp.push(this), tmp;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter): ProofType[] {\n\t\t\n\t\treturn [{\n\t\t\t_type: 'NP',\n\t\t\tctr: ctr.next(),\n\t\t\texpr: this\n\t\t}];\n\t}\n\n\t// pr f\n\tpublic toSimpleString() {\n\t\treturn this.type.toString() + ' ' + this.name;\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\treturn `${root ? this.type + ' ' : ''}${this.name}<${this._id}>`;\n\t}\n\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tvar id = this instanceof Parameter ? `id-${this._id}` : `def-${this.name}`;\n\n\t\tvar tex = this.tex || Expr.makeTeXName(this.name);\n\t\t\n\t\tvar expr = root && this.expr\n\t\t\t? `\\\\coloneqq ${this.expr.toTeXString(Expr.PREC_COLONEQQ)}`\n\t\t\t: '';\n\t\t\n\t\treturn `\\\\href{#${id}}{${tex}}${expr}`;\n\t}\n}\n\nimport Parameter from './Parameter';\nimport { ObjectType } from './types';\n","import Counter from \"../Counter\";\nimport ExecutionContext from \"../ExecutionContext\";\nimport { ProofType } from \"../ProofType\";\nimport StackTrace from \"../StackTrace\";\nimport Fun from \"./Fun\";\nimport Expr, { EqualsPriority, Precedence } from \"./Expr\";\nimport Nameable from \"./Nameable\";\nimport Variable from \"./Variable\";\n\ninterface $VariableArgumentType {\n\tname: string;\n\texpr: Expr;\n}\n\nexport default class $Variable extends Expr implements Nameable {\n\n\tpublic readonly name: string;\n\tpublic readonly expr: Expr;\n\n\tconstructor ({name, expr}: $VariableArgumentType, trace: StackTrace) {\n\t\tsuper(null, null, expr.type, trace);\n\n\t\tif (!name || !expr) {\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t}\n\n\t\tthis.name = name;\n\t\tthis.expr = expr;\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.expr.isProved(hypotheses);\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\treturn this.expr.substitute(map);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\treturn this.expr.expandMeta(andFuncalls);\n\t}\n\n\tprotected getEqualsPriority(): EqualsPriority {\n\t\treturn EqualsPriority.FIVE;\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\treturn this.expr.equals(obj, context);\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter): ProofType[] {\n\t\t\n\t\tif (!$Map.has(this)) {\n\t\t\tthrow Error(`${this.name} is not defined`);\n\t\t}\n\n\t\treturn [{\n\t\t\t_type: 'R',\n\t\t\tctr: ctr.next(),\n\t\t\tnum: $Map.get(this),\n\t\t\texpr: this.expr\n\t\t}];\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\treturn this.name;\n\t}\n\t\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\treturn `\\\\mathtt{${Expr.escapeTeX(this.name)}}`;\n\t}\n}","import StackTrace from \"../StackTrace\";\nimport { Precedence } from \"./Expr\";\nimport { ObjectType } from \"./types\";\nimport Variable from \"./Variable\";\n\ninterface ParameterArgumentType {\n\tdoc?: string;\n\ttex?: string;\n\ttype: ObjectType;\n\tname: string;\n\tselector: string;\n}\n\nexport default class Parameter extends Variable {\n\n\tpublic readonly selector: string;\n\n\tconstructor ({doc, tex, type, name, selector}: ParameterArgumentType, trace: StackTrace) {\n\t\tsuper({doc, tex, sealed: false, type, name, expr: null}, trace);\n\n\t\tthis.selector = selector;\n\t}\n\n\tpublic toTeXStringWithId(prec?: Precedence, root?: boolean): string {\n\t\tvar id =`id-${this._id}`;\n\n\t\treturn [\n\t\t\t`\\\\htmlId{${id}}{`,\n\t\t\tthis.toTeXString(prec, root),\n\t\t\t`}`\n\t\t].join('');\n\t}\n}","import Expr, { EqualsPriority, Precedence } from './Expr';\n\ninterface FuncallArgumentType {\n\tfun: Expr;\n\targs: Expr[];\n}\n\nexport default class Funcall extends Expr {\n\t\n\tpublic readonly fun: Expr;\n\tpublic readonly args: Expr[];\n\n\tconstructor ({fun, args}: FuncallArgumentType, trace: StackTrace) {\n\t\tif (!fun.type.isFunctional()) {\n\t\t\tvar name = isNameable(fun) ? fun.name : '<anonymous>';\n\t\t\tthrow Expr.error(`${name} is not callable`, trace);\n\t\t}\n\n\t\tif (!(args instanceof Array) || args.map(e => e instanceof Expr).some(e => !e))\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t\t \n\t\tvar resolvedType = fun.type.resolve() as FunctionalObjectType | FunctionalMetaType,\n\t\t\tparamTypes = resolvedType.from,\n\t\t\targTypes = args.map(e => e.type);\n\n\t\tif (paramTypes.length != argTypes.length)\n\t\t\tthrow Expr.error(`Invalid number of arguments (expected ${paramTypes.length}): ${argTypes.length}`, trace);\n\n\t\tfor (var i = 0; i < paramTypes.length; i++) {\n\t\t\tif (!paramTypes[i].equals(argTypes[i])) {\n\t\t\t\tthrow Expr.error(`Argument #${i + 1} has illegal argument type (expected ${paramTypes[i]}): ${argTypes[i]}`, trace);\n\t\t\t}\n\t\t}\n\n\t\tsuper(null, null, resolvedType.to, trace);\n\t\t\n\t\tthis.fun = fun;\n\t\tthis.args = args;\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.fun.isProved(hypotheses);\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\treturn new Funcall({\n\t\t\tfun: this.fun.substitute(map),\n\t\t\targs: this.args.map(arg => arg.substitute(map))\n\t\t}, this.trace);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\tvar fun = this.fun.expandMeta(andFuncalls),\n\t\t\targs = this.args.map(arg => arg.expandMeta(andFuncalls));\n\t\t\n\t\tif (!(fun instanceof Fun) || !fun.expr || fun.name && !(fun instanceof Schema))\n\t\t\treturn new Funcall({fun, args}, this.trace);\n\n\t\treturn fun.call(args).expandMeta(andFuncalls);\n\t}\n\n\tpublic isExpandable(context: ExecutionContext): boolean {\n\t\tvar callee: Expr = this.fun;\n\n\t\twhile (callee instanceof $Variable) {\n\t\t\tcallee = callee.expr;\n\t\t}\n\n\t\tif (callee instanceof Variable && callee.expr) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (callee instanceof Funcall) {\n\t\t\treturn callee.isExpandable(context);\n\t\t}\n\n\t\tif (!(callee instanceof Fun)) return false;\n\n\t\treturn callee.isCallable(context);\n\t}\n\t\n\tpublic expandOnce(context: ExecutionContext): {expanded: Expr, used: (Fun | Variable)[]} {\n\t\tif (!this.isExpandable(context)) {\n\t\t\tthrow Error('Cannot expand');\n\t\t}\n\n\t\tvar used: (Fun | Variable)[] = [];\n\n\t\tvar callee: Expr = this.fun;\n\n\t\twhile (callee instanceof $Variable) {\n\t\t\tcallee = callee.expr;\n\t\t}\n\n\t\tif (callee instanceof Variable && callee.expr) {\n\t\t\tused.push(callee);\n\n\t\t\treturn {\n\t\t\t\texpanded: new Funcall({\n\t\t\t\t\tfun: callee.expr,\n\t\t\t\t\targs: this.args\n\t\t\t\t}, this.trace),\n\t\t\t\tused\n\t\t\t};\n\t\t}\n\n\t\tif (callee instanceof Funcall) {\n\t\t\tvar calleeExpanded = callee.expandOnce(context);\n\t\t\tused.push(...calleeExpanded.used);\n\t\t\treturn {\n\t\t\t\texpanded: new Funcall({\n\t\t\t\t\tfun: calleeExpanded.expanded,\n\t\t\t\t\targs: this.args\n\t\t\t\t}, this.trace),\n\t\t\t\tused\n\t\t\t};\n\t\t}\n\n\t\tif (!(callee instanceof Fun)) {\n\t\t\tthrow Error('Something\\'s wrong');\n\t\t}\n\n\t\tif (callee.name) used.push(callee);\n\n\t\treturn {\n\t\t\texpanded: callee.call(this.args),\n\t\t\tused\n\t\t};\n\t}\n\n\tprotected getEqualsPriority(): EqualsPriority {\n\t\treturn EqualsPriority.THREE;\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\tif (!(obj instanceof Funcall)) {\n\t\t\tif (!this.isExpandable(context)) return false;\n\t\t\t\n\t\t\tvar {expanded, used} = this.expandOnce(context);\n\t\t\tvar ret = expanded.equals(obj, context);\n\t\t\treturn ret && ret.concat(used);\n\t\t}\n\n\t\tvar usedMacrosList: (Fun | Variable)[] = [],\n\t\t\tT = (q: (Fun | Variable)[] | false) => { if (q) usedMacrosList.push(...q); return q; };\n\n\t\tif (this.fun == obj.fun || T(this.fun.equals(obj.fun, context))) {\n\t\t\tfor (var i = 0; i < this.args.length; i++) {\n\t\t\t\tif (!T(this.args[i].equals(obj.args[i], context))) return false;\n\t\t\t}\n\n\t\t\treturn usedMacrosList;\n\t\t}\n\n\t\tif (this.fun instanceof Funcall && this.fun.isExpandable(context)) {\n\t\t\tvar {expanded, used} = this.expandOnce(context);\n\t\t\tvar ret = expanded.equals(obj, context);\n\t\t\treturn ret && ret.concat(used);\n\t\t}\n\n\t\tif (obj.fun instanceof Funcall && obj.fun.isExpandable(context)) {\n\t\t\tvar {expanded, used} = obj.expandOnce(context);\n\t\t\tvar ret = this.equals(expanded, context);\n\t\t\treturn ret && ret.concat(used);\n\t\t}\n\n\t\tvar thisIsExpandable = this.isExpandable(context),\n\t\t\tobjIsExpandable = obj.isExpandable(context);\n\t\t\n\t\tif (this.fun == obj.fun || !thisIsExpandable && !objIsExpandable) {\n\t\t\tif (this.fun != obj.fun) return false;\n\n\t\t\tif (!thisIsExpandable && !objIsExpandable) {\n\t\t\t\tfor (var i = 0; i < this.args.length; i++) {\n\t\t\t\t\tif (!T(this.args[i].equals(obj.args[i], context))) return false;\n\t\t\t\t}\n\n\t\t\t\treturn usedMacrosList;\n\t\t\t}\n\n\t\t\tif (this.args.every((_, i) => {\n\t\t\t\treturn T(this.args[i].equals(obj.args[i], context));\n\t\t\t})) {\n\t\t\t\treturn usedMacrosList;\n\t\t\t}\n\t\t}\n\n\t\tif (thisIsExpandable) {\n\t\t\tvar {expanded, used} = this.expandOnce(context);\n\t\t\tvar ret = expanded.equals(obj, context);\n\t\t\treturn ret && ret.concat(used);\n\t\t}\n\n\t\tvar {expanded, used} = obj.expandOnce(context);\n\t\tvar ret = this.equals(expanded, context);\n\t\treturn ret && ret.concat(used);\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter): ProofType[] {\n\n\t\tif (hypnumMap.has(this.fun)) {\n\t\t\treturn [{\n\t\t\t\t_type: 'RC',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tschema: hypnumMap.get(this.fun),\n\t\t\t\targs: this.args,\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tif ($Map.has(this.fun)) {\n\t\t\treturn [{\n\t\t\t\t_type: 'RC',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tschema: $Map.get(this.fun),\n\t\t\t\targs: this.args,\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tif (this.fun instanceof Schema && this.fun.name) {\n\t\t\treturn [{\n\t\t\t\t_type: 'RCX',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tif (!(this.fun instanceof Schema)) {\n\t\t\treturn [{\n\t\t\t\t_type: 'NP',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\texpr: this\n\t\t\t}];\n\t\t}\n\n\t\tvar schemalines = this.fun.getProof(hypnumMap, $Map, ctr);\n\n\t\treturn [\n\t\t\t...schemalines,\n\t\t\t{\n\t\t\t\t_type: 'RC',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tschema: schemalines[schemalines.length - 1].ctr,\n\t\t\t\targs: this.args,\n\t\t\t\texpr: this\n\t\t\t}\n\t\t];\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\tvar args: any = this.args.map(arg => {\n\t\t\tif (arg instanceof Variable) return `${arg.name}<${arg._id}>`;\n\t\t\treturn arg.toIndentedString(indent + 1);\n\t\t});\n\t\n\t\tif (args.join('').length <= 50) {\n\t\t\targs = this.args.map(arg => {\n\t\t\t\tif (arg instanceof Variable) return `${arg.name}<${arg._id}>`;\n\t\t\t\treturn arg.toIndentedString(indent);\n\t\t\t});\n\t\n\t\t\targs = args.join(', ');\n\t\t\t\n\t\t\tif (this.fun instanceof Schema) {\n\t\t\t\treturn `${this.fun.name || `(${this.fun})`}(${args})`;\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t!(this.fun instanceof Fun) || !this.fun.name\n\t\t\t\t\t\t? '(' + this.fun.toIndentedString(indent) + ')'\n\t\t\t\t\t\t: this.fun.name,\n\t\t\t\t\t`(${args})`\n\t\t\t\t].join('');\n\t\t\t}\n\t\t} else {\n\t\t\targs = args.join(',\\n' + '\\t'.repeat(indent + 1));\n\t\t\t\n\t\t\tif (this.fun instanceof Schema) {\n\t\t\t\treturn [\n\t\t\t\t\tthis.fun.name || `(${this.fun.toIndentedString(indent)})`,\n\t\t\t\t\t'(',\n\t\t\t\t\t'\\t' + args,\n\t\t\t\t\t')'\n\t\t\t\t].join('\\n' + '\\t'.repeat(indent));\n\t\t\t} else {\n\t\t\t\treturn [\n\t\t\t\t\t(\n\t\t\t\t\t\t!(this.fun instanceof Fun) || !('name' in this.fun && this.fun.name)\n\t\t\t\t\t\t\t? '(' + this.fun.toIndentedString(indent) + ')'\n\t\t\t\t\t\t\t: this.fun.name\n\t\t\t\t\t) + '(',\n\t\t\t\t\t'\\t' + args,\n\t\t\t\t\t')'\n\t\t\t\t].join('\\n' + '\\t'.repeat(indent));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tif (this.fun instanceof Schema) {\n\t\t\treturn (\n\t\t\t\tthis.fun.name\n\t\t\t\t\t? `\\\\href{#def-${this.fun.name}}{\\\\htmlData{proved=${this.fun.isProved() ? 'p' : 'np'}}{\\\\textsf{${Expr.escapeTeX(this.fun.name)}}}}`\n\t\t\t\t\t: this.fun.toTeXString(false)\n\t\t\t) + `\\\\mathord{\\\\left(${this.args.map(arg => {\n\t\t\t\treturn arg.toTeXString(Expr.PREC_COMMA);\n\t\t\t}).join(', ')}\\\\right)}`;\n\t\t}\n\n\t\tif (this.fun instanceof ObjectFun)\n\t\t\treturn this.fun.funcallToTeXString(this.args, prec);\n\t\t\n\t\tvar args = this.args.map(arg => {\n\t\t\treturn arg.toTeXString(Expr.PREC_COMMA);\n\t\t});\n\n\t\treturn (\n\t\t\t!(isNameable(this.fun) && this.fun.name) || this.fun instanceof Variable\n\t\t\t\t? this.fun.toTeXString(false)\n\t\t\t\t: Expr.makeTeXName(this.fun.name)\n\t\t) + `\\\\mathord{\\\\left(${args.join(', ')}\\\\right)}`;\n\t}\n}\n\nimport Counter from '../Counter';\nimport ExecutionContext from '../ExecutionContext';\nimport { ProofType } from '../ProofType';\nimport StackTrace from '../StackTrace';\nimport $Variable from './$Variable';\nimport Fun from './Fun';\nimport { isNameable } from './Nameable';\nimport ObjectFun from './ObjectFun';\nimport Schema from './Schema';\nimport Variable from './Variable';\nimport { FunctionalMetaType, FunctionalObjectType } from './types';\n","import Fun from \"./Fun\";\n\nexport default class ObjectFun extends Fun {\n\t\n\tconstructor ({doc, tex, annotations, sealed, rettype, name, params, expr}: ObjectFunArgumentType, trace: StackTrace) {\n\t\tsuper({doc, tex, annotations, sealed, rettype, name, params, expr}, trace);\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\tif (!this.expr) return this;\n\n\t\t// 이름이 있는 것은 스코프 밖에서 보이지 않으므로 치환될 것을\n\t\t// 갖지 않는다는 생각이 들어 있다.\n\t\tif (this.name) return this;\n\n\t\t// 위의 this.name 조건을 지우면 특수한 경우에 이게 발생할지도 모른다.\n\t\tif (this.params.some(e => map.has(e)))\n\t\t\tthrow Error('Parameter collision');\n\n\t\treturn new ObjectFun({\n\t\t\tdoc: null,\n\t\t\ttex: null,\n\t\t\tannotations: this.annotations,\n\t\t\tsealed: this.sealed,\n\t\t\trettype: null,\n\t\t\tname: null,\n\t\t\tparams: this.params,\n\t\t\texpr: this.expr.substitute(map)\n\t\t}, this.trace);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\tif (!this.expr) return this;\n\t\tif (this.type instanceof ObjectType && this.name) return this;\n\n\t\treturn new ObjectFun({\n\t\t\tdoc: null,\n\t\t\ttex: null,\n\t\t\tannotations: this.annotations,\n\t\t\tsealed: this.sealed,\n\t\t\trettype: null,\n\t\t\tname: null,\n\t\t\tparams: this.params,\n\t\t\texpr: this.expr.expandMeta(andFuncalls)\n\t\t}, this.trace);\n\t}\n\n\tpublic isCallable(context: ExecutionContext): boolean {\n\t\treturn this.expr && (!this.sealed || context.canUse(this));\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\tif (this.name) return this.name;\n\t\t\n\t\treturn [\n\t\t\t`ƒ ${this.name || ''}(${this.params.map(p => p.toIndentedString(indent)).join(', ')}) => {`,\n\t\t\t'\\t' + this.expr.toIndentedString(indent + 1),\n\t\t\t'}'\n\t\t].join('\\n' + '\\t'.repeat(indent));\n\t}\n\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tif (!this.name) {\n\t\t\tthis.precedence = Expr.PREC_FUNEXPR;\n\t\t\treturn [\n\t\t\t\t(this.shouldConsolidate(prec) ? '\\\\left(' : ''),\n\n\t\t\t\t(\n\t\t\t\t\tthis.params.length == 1\n\t\t\t\t\t? this.params[0].toTeXString(false)\n\t\t\t\t\t: `\\\\left(${this.params.map(e => e.toTeXString(Expr.PREC_COMMA)).join(', ')}\\\\right)`\n\t\t\t\t),\n\t\t\t\t'\\\\mapsto ',\n\t\t\t\tthis.expr.expandMeta(true).toTeXString(false),\n\n\t\t\t\t(this.shouldConsolidate(prec) ? '\\\\right)' : '')\n\t\t\t].join('');\n\t\t}\n\n\t\tif (!root)\n\t\t\treturn `\\\\href{#def-${this.name}}{${Expr.makeTeXName(this.name)}}`;\n\t\n\t\tif (!this.expr)\n\t\t\treturn this.funcallToTeXString(this.params, prec);\n\t\n\t\treturn this.funcallToTeXString(this.params, Expr.PREC_COLONEQQ)\n\t\t\t\t+ `\\\\coloneqq ${this.expr.toTeXString(Expr.PREC_COLONEQQ)}`;\n\t}\n\n\tpublic funcallToTeXString(args, prec) {\n\t\targs = args.map(arg => {\n\t\t\treturn arg.toTeXString(this.tex ? this.precedence : Expr.PREC_COMMA);\n\t\t});\n\t\n\t\tif (this.tex) {\n\t\t\treturn this.makeTeX('def-' + this.name, args, prec);\n\t\t}\n\t\n\t\treturn (\n\t\t\t!this.name\n\t\t\t\t? this.toTeXString(false)\n\t\t\t\t: `\\\\href{#def-${this.name}}{${Expr.makeTeXName(this.name)}}`\n\t\t) + `\\\\mathord{\\\\left(${args.join(', ')}\\\\right)}`;\n\t}\n}\n\nimport ExecutionContext from \"../ExecutionContext\";\nimport StackTrace from \"../StackTrace\";\nimport Expr, { Precedence } from \"./Expr\";\nimport Variable from \"./Variable\";\nimport Parameter from \"./Parameter\";\nimport { Type, ObjectType } from \"./types\";\n\ninterface ObjectFunArgumentType {\n\tdoc: string;\n\ttex: string;\n\tannotations: string[];\n\tsealed: boolean;\n\trettype: Type;\n\tname: string;\n\tparams: Parameter[];\n\texpr: Expr;\n}","import ObjectFun from \"./exprs/ObjectFun\";\nimport Variable from \"./exprs/Variable\";\n\nexport default class ExecutionContext {\n\n\tpublic readonly usingList: (Variable | ObjectFun)[];\n\n\tconstructor (usingList?: (Variable | ObjectFun)[]) {\n\t\tthis.usingList = usingList || [];\n\t}\n\n\tpublic canUse(fun: Variable | ObjectFun) {\n\t\treturn this.usingList.includes(fun);\n\t}\n}","var n: number = 0;\n\nexport default {\n\tpeek(): number {\n\t\treturn n;\n\t},\n\tnext(): number {\n\t\treturn ++n;\n\t}\n};","export default interface Nameable {\n\tname: string;\n}\n\nexport function isNameable(obj: object): obj is Nameable {\n\treturn 'name' in obj;\n}","import Counter from '../Counter';\nimport ExecutionContext from '../ExecutionContext';\nimport { ProofType } from '../ProofType';\nimport StackTrace from '../StackTrace';\nimport $Variable from './$Variable';\nimport Fun from './Fun';\nimport Expr, { EqualsPriority, Precedence } from './Expr';\nimport { ObjectType, Type, TeeType } from './types';\nimport Variable from './Variable';\n\ninterface TeeArgumentType {\n\tleft: Expr[];\n\tdef$s: $Variable[];\n\tright: Expr;\n}\n\nexport default class Tee extends Expr {\n\n\tpublic readonly left: Expr[];\n\tpublic readonly def$s: $Variable[];\n\tpublic readonly right: Expr;\n\n\tconstructor ({left, def$s, right}: TeeArgumentType, trace: StackTrace) {\n\t\tif (!(left instanceof Array\n\t\t\t\t&& left.every(l => {\n\t\t\t\t\treturn l.type instanceof ObjectType\n\t\t\t\t\t\t|| l.type instanceof Type;\n\t\t\t\t}))) {\n\t\t\tconsole.log(left);\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t}\n\n\t\tif (def$s && !(def$s instanceof Array && def$s.every($ => $ instanceof $Variable)))\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\n\t\tif (!(right.type instanceof ObjectType || right.type instanceof Type)) {\n\t\t\tconsole.log(right);\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t}\n\n\t\tsuper(null, null, new TeeType({\n\t\t\tleft: left.map(e => e.type),\n\t\t\tright: right.type\n\t\t}, trace), trace);\n\n\t\tthis.left = left;\n\t\tthis.def$s = def$s || [];\n\t\tthis.right = right;\n\t\tthis.precedence = Expr.PREC_COMMA;\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.right.isProved(hypotheses.concat(this.left));\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\tvar left = this.left.map(e => e.substitute(map));\n\t\tvar right = this.right.substitute(map);\n\n\t\treturn new Tee({\n\t\t\tleft,\n\t\t\tdef$s: null,\n\t\t\tright\n\t\t}, this.trace);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\tvar left = this.left.map(lef => lef.expandMeta(andFuncalls));\n\t\tvar right = this.right.expandMeta(andFuncalls);\n\n\t\treturn new Tee({left, def$s: null, right}, this.trace);\n\t}\n\n\tprotected getEqualsPriority(): EqualsPriority {\n\t\treturn EqualsPriority.TWO;\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\tif (!(obj instanceof Tee)) {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\tif (this.left.length != obj.left.length) {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\tfor (var i = 0; i < this.left.length; i++) {\n\t\t\tif (!this.left[i].equals(obj.left[i], context)) return false;\n\t\t}\n\n\t\treturn this.right.equals(obj.right, context);\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter): ProofType[] {\n\t\t\n\t\thypnumMap = new Map(hypnumMap);\n\n\t\tvar start = ctr.peek() + 1;\n\n\t\tvar leftlines: ProofType[] = this.left.map(l => {\n\t\t\thypnumMap.set(l, ctr.next());\n\t\t\t\n\t\t\treturn {\n\t\t\t\t_type: 'H',\n\t\t\t\tctr: ctr.peek(),\n\t\t\t\texpr: l\n\t\t\t};\n\t\t});\n\n\t\t$Map = new Map($Map);\n\n\t\tvar $lines = this.def$s.map($ => {\n\t\t\tvar lines = $.expr.getProof(hypnumMap, $Map, ctr);\n\t\t\tvar $num = lines[lines.length - 1].ctr;\n\t\t\t$Map.set($, $num);\n\t\t\treturn lines;\n\t\t}).flat(1);\n\n\t\treturn [{\n\t\t\t_type: 'T',\n\t\t\tleftlines: leftlines as any,\n\t\t\trightlines: $lines.concat(this.right.getProof(hypnumMap, $Map, ctr)),\n\t\t\tctr: [start, ctr.peek()]\n\t\t}];\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\tif (!this.left.length) {\n\t\t\treturn '|- ' + this.right.toIndentedString(indent);\n\t\t}\n\t\n\t\treturn [\n\t\t\t'\\t' + this.left.map(e => e.toIndentedString(indent + 1)).join(',\\n' + '\\t'.repeat(indent + 1)),\n\t\t\t'|-',\n\t\t\t'\\t' + this.right.toIndentedString(indent + 1)\n\t\t].join('\\n' + '\\t'.repeat(indent));\n\t}\n\t\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tvar expanded = this.expandMeta(true) as Tee;\n\n\t\treturn [\n\t\t\t(this.shouldConsolidate(prec) ? '\\\\left(' : ''),\n\t\t\t`{${expanded.left.map(e => e.toTeXString(Expr.PREC_COMMA)).join(', ')} \\\\vdash ${expanded.right.toTeXString(Expr.PREC_COMMA)}}`,\n\t\t\t(this.shouldConsolidate(prec) ? '\\\\right)' : '')\n\t\t].join('');\n\t}\n}","import { SimpleObjectType } from './exprs/types';\nimport PegInterface from './PegInterface';\nimport { EvaluableObject, ImportOrLineObject } from './PegInterfaceDefinitions';\nimport ProofExplorer from './ProofExplorer';\nimport Scope from './Scope';\n\nlet parser: ParserType, evalParser: EvalParserType;\n\nif (process.env.__webpack__) {\n\tparser = require('../build_tmp/parser');\n\tevalParser = require('../build_tmp/evalParser');\n} else {\n\tlet fs = require('fs');\n\tlet path = require('path');\n\tlet pegjs = require('pegjs');\n\n\tlet grammar = fs.readFileSync(path.join(__dirname, 'grammar.pegjs'), 'utf-8');\n\tparser = pegjs.generate(grammar, {cache: true});\n\tevalParser = pegjs.generate(grammar, {cache: true, allowedStartRules: ['evaluable']});\n}\n\ninterface LoaderReturnType {\n\tfileUri?: string;\n\tcode: string;\n}\n\ntype LoaderType = (packageName: string) => (LoaderReturnType | Promise<LoaderReturnType>);\n\nexport type ParserType = {\n\tparse: (code: string) => ImportOrLineObject[];\n};\n\nexport type EvalParserType = {\n\tparse: (code: string) => EvaluableObject;\n}\n\nexport default class Program {\n\t\n\tpublic scope: Scope;\n\tpublic readonly scopeMap: Map<string, Scope> = new Map();\n\t\n\tpublic static parser: ParserType = parser;\n\tpublic static evalParser: EvalParserType = evalParser;\n\n\t/**\n\t * A temporary list used by {@link loadModuleInternal} method.\n\t * \n\t * This is the list of filenames of the files with a temporary mark during a\n\t * depth-first topological sort. Note that the file is considered to be\n\t * marked with a permanent mark if {@code this.scopeMap} has the filename.\n\t * \n\t * See https://en.wikipedia.org/wiki/Topological_sorting#Depth-first_search.\n\t */\n\tprivate loadingModules: string[];\n\n\tpublic async loadModule(filename: string, loader: LoaderType): Promise<Scope> {\n\t\tthis.loadingModules = [];\n\t\treturn this.scope = await this.loadModuleInternal(filename, loader);\n\t}\n\n\tprivate async loadModuleInternal(filename: string, loader: LoaderType): Promise<Scope> {\n\t\t// the file has a permanent mark\n\t\tif (this.scopeMap.has(filename)) {\n\t\t\treturn this.scopeMap.get(filename);\n\t\t}\n\n\t\tvar loadingModuleIndex = this.loadingModules.indexOf(filename);\n\n\t\t// the file has a temporary mark\n\t\tif (loadingModuleIndex >= 0) {\n\t\t\tif (loadingModuleIndex == this.loadingModules.length - 1) {\n\t\t\t\tthrow Error(`Cannot self import (${filename})`);\n\t\t\t}\n\n\t\t\tvar cycle = this.loadingModules.slice(loadingModuleIndex).concat(filename);\n\n\t\t\tthrow Error(`Circular import detected (${cycle.join(' -> ')}). Sadly, circular import is currently not supported.`);\n\t\t}\n\n\t\t// mark the file with a temporary mark\n\t\tthis.loadingModules.push(filename);\n\n\t\tvar {fileUri, code} = await loader(filename);\n\n\t\tvar scope = new Scope(fileUri, null);\n\n\t\tawait this.feed(code, scope, loader);\n\n\t\t// remove temporary mark\n\t\tif (this.loadingModules.pop() != filename) {\n\t\t\tthrow Error('Something\\'s wrong');\n\t\t}\n\n\t\t// mark the file with a permanent mark\n\t\tthis.scopeMap.set(filename, scope);\n\t\treturn scope;\n\t}\n\n\tpublic async feed(code: string, scope: Scope=this.scope, loader: LoaderType) {\n\t\tvar lines = parser.parse(code);\n\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tswitch (line._type) {\n\t\t\t\tcase 'import':\n\t\t\t\t\tvar scope2 = await this.loadModuleInternal(line.filename, loader);\n\t\t\t\t\tscope.importMap.set(line.filename, scope2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'typedef':\n\t\t\t\t\tvar type = PegInterface.type(line, scope) as SimpleObjectType;\n\n\t\t\t\t\tif (scope.hasType(type.name)) {\n\t\t\t\t\t\tthrow scope.error(`Type ${type.name} has already been declared`);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addType(type);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'defv':\n\t\t\t\t\tvar variable = PegInterface.variable(line, scope);\n\n\t\t\t\t\tif (scope.hasVariable(variable.name)) {\n\t\t\t\t\t\tthrow scope.error(`Definition ${variable.name} has already been declared`);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addVariable(variable);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'defun':\n\t\t\t\t\tvar fun = PegInterface.fun(line, scope);\n\n\t\t\t\t\tif (scope.hasVariable(fun.name)) {\n\t\t\t\t\t\tthrow scope.error(`Definition ${fun.name} has already been declared`);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addFun(fun);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'defschema':\n\t\t\t\t\tvar schema = PegInterface.schema(line, scope, null);\n\n\t\t\t\t\tif (scope.hasSchema(schema.name)) {\n\t\t\t\t\t\tthrow scope.error(`Schema ${schema.name} has already been declared`);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addSchema(schema);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(`Unknown line type ${(line as any)._type}`);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic evaluate(code: string) {\n\t\tvar line = evalParser.parse(code);\n\n\t\tvar scope = new Scope('<repl>', this.scope);\n\n\t\tswitch (line._type) {\n\t\t\tcase 'typedef':\n\t\t\t\treturn PegInterface.type(line, scope);\n\t\t\tcase 'defv':\n\t\t\t\treturn PegInterface.variable(line, scope);\n\t\t\tcase 'defun':\n\t\t\t\treturn PegInterface.fun(line, scope);\n\t\t\tcase 'defschema':\n\t\t\tcase 'schemaexpr':\n\t\t\t\treturn PegInterface.schema(line, scope, null);\n\t\t\tcase 'tee':\n\t\t\t\treturn PegInterface.tee(line, scope, null);\n\t\t\tcase 'reduction':\n\t\t\t\treturn PegInterface.reduction(line, scope, null);\n\t\t\tcase 'schemacall':\n\t\t\t\treturn PegInterface.schemacall(line, scope, null);\n\t\t\tcase 'var':\n\t\t\t\treturn PegInterface.metavar(line, scope);\n\t\t\tdefault:\n\t\t\t\tthrow Error(`Unknown line type ${(line as any)._type}`);\n\t\t}\n\t}\n\n\tpublic getProofExplorer(name: string, ktx) {\n\t\treturn ProofExplorer.get(this.scope, name, ktx);\n\t}\n}","/*\n * PEG.js의 출력과 적절한 클래스 사이를 잇는 인터페이스.\n * PEG.js의 출력은 여기에서만 처리해야 한다.\n */\n\nimport ExecutionContext from './ExecutionContext';\nimport $Variable from './exprs/$Variable';\nimport Fun from './exprs/Fun';\nimport Funcall from './exprs/Funcall';\nimport Expr from './exprs/Expr';\nimport ObjectFun from './exprs/ObjectFun';\nimport Parameter from './exprs/Parameter';\nimport Reduction from './exprs/Reduction';\nimport Schema, { SchemaType } from './exprs/Schema';\nimport Tee from './exprs/Tee';\nimport { ObjectType, SimpleObjectType } from './exprs/types';\nimport Variable from './exprs/Variable';\nimport With from './exprs/With';\nimport { Def$Object, DefschemaObject, DefunObject, DefvObject, ObjectExprObject, FuncallObject, FunexprObject, ExprObject, ReductionObject, SchemacallObject, SchemaexprObject, StypeObject, TeeObject, TypedefObject, TypeObject, VarObject, WithObject } from './PegInterfaceDefinitions';\nimport Scope, { NestedTypeInput } from './Scope';\n\nfunction typeObjToString(obj: TypeObject): string {\n\tif (obj._type != 'type')\n\t\tthrow Error('Assertion failed');\n\n\tif (!obj.ftype) return (obj as StypeObject).name;\n\treturn '[' + obj.from.map(typeObjToString).join(', ') + ' -> '\n\t\t\t+ typeObjToString(obj.to) + ']';\n}\n\n/*\n * Scope#getType이나 Scope#hasType 등의 입력 형태로 바꾼다.\n * st\t\t\t\t\t\t-> 'st'\n * [cls -> st]\t\t\t\t-> ['cls', 'st']\n * [(cls, cls) -> st]\t\t-> ['cls', 'cls', 'st']\n * [[cls -> st] -> st]\t\t-> [['cls', 'st'], 'st']\n */\nfunction typeObjToNestedArr(obj: TypeObject): NestedTypeInput {\n\tif (obj._type != 'type')\n\t\tthrow Error('Assertion failed');\n\n\tif (!obj.ftype) {\n\t\tobj = obj as StypeObject;\n\n\t\tif (!obj.name)\n\t\t\tthrow Error('Assertion failed');\n\n\t\treturn obj.name;\n\t} else {\n\t\tif (!obj.from || !obj.to)\n\t\t\tthrow Error('Assertion failed');\n\n\t\treturn obj.from.map(typeObjToNestedArr).concat(\n\t\t\t[typeObjToNestedArr(obj.to)]\n\t\t);\n\t}\n}\n\nfunction varObjToString(obj: VarObject): string {\n\tswitch (obj.type) {\n\t\tcase '@':\n\t\t\treturn `@${obj.name}`;\n\t\tcase '$':\n\t\t\treturn `${obj.name}`;\n\t\tcase 'normal':\n\t\t\treturn `${obj.name}`;\n\t\tdefault:\n\t\t\tthrow Error(`Unknown type ${obj.type}`);\n\t}\n}\n\nexport default class PI {\n\tpublic static type(obj: TypedefObject, parentScope: Scope): ObjectType {\n\t\tif (obj._type != 'typedef')\n\t\t\tthrow Error('Assertion failed');\n\n\t\tvar scope: Scope = parentScope.extend('type', obj.name, obj.location);\n\n\t\tvar expr: ObjectType = obj.expr ? scope.getType(typeObjToNestedArr(obj.expr)) : null;\n\n\t\tvar name: string = obj.name;\n\t\tvar doc: string = obj.doc;\n\n\t\tif (expr) {\n\t\t\treturn new SimpleObjectType({\n\t\t\t\tdoc,\n\t\t\t\tname,\n\t\t\t\texpr\n\t\t\t}, scope.trace);\n\t\t}\n\n\t\treturn new SimpleObjectType({\n\t\t\tdoc,\n\t\t\tname,\n\t\t\texpr: null\n\t\t}, scope.trace);\n\t}\n\n\tpublic static variable(obj: DefvObject | VarObject, parentScope: Scope): Variable | Fun {\n\t\tif (!['defv', 'var'].includes(obj._type)) {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\tvar scope = parentScope.extend('variable', obj.name, obj.location);\n\n\t\tif (obj._type == 'var') {\n\t\t\tif (obj.type != 'normal') {\n\t\t\t\tthrow scope.error(`Variable type ${obj.type} not allowed`);\n\t\t\t}\n\n\t\t\tif (!scope.hasVariable(obj.name))\n\t\t\t\tthrow scope.error(`Undefined identifier ${varObjToString(obj)}`);\n\t\t\treturn scope.getVariable(obj.name);\n\t\t}\n\n\t\tif (!scope.hasType(typeObjToNestedArr(obj.type)))\n\t\t\tthrow scope.error(`Type ${typeObjToString(obj.type)} is not defined`);\n\n\t\tvar type = scope.getType(typeObjToNestedArr(obj.type));\n\n\t\tvar expr = obj.expr ? PI.objectexpr(obj.expr, scope) : null;\n\n\t\tif (obj.isParam) {\n\t\t\treturn new Parameter({\n\t\t\t\tdoc: obj.doc,\n\t\t\t\ttex: obj.tex,\n\t\t\t\ttype,\n\t\t\t\tname: obj.name,\n\t\t\t\tselector: obj.selector || null\n\t\t\t}, scope.trace);\n\t\t}\n\n\t\treturn new Variable({\n\t\t\tdoc: obj.doc,\n\t\t\ttex: obj.tex,\n\t\t\tsealed: !!obj.sealed,\n\t\t\ttype,\n\t\t\tname: obj.name,\n\t\t\texpr: expr || null\n\t\t}, scope.trace);\n\t}\n\n\tpublic static fun(obj: DefunObject | FunexprObject, parentScope: Scope): ObjectFun {\n\t\tif (obj._type != 'defun' && obj._type != 'funexpr')\n\t\t\tthrow Error('Assertion failed');\n\t\t\n\t\tvar scope = parentScope.extend('fun', obj._type == 'defun' ? obj.name : '<anonymous>', obj.location);\n\n\t\tvar doc = null,\n\t\t\ttex = null,\n\t\t\tsealed = false,\n\t\t\trettype: ObjectType = null,\n\t\t\tname = null,\n\t\t\texpr = null;\n\n\t\tif (obj._type == 'defun') {\n\t\t\tdoc = obj.doc;\n\t\t\ttex = obj.tex;\n\t\t\tsealed = obj.sealed;\n\t\t\t\n\t\t\tif (!scope.hasType(typeObjToNestedArr(obj.rettype))) {\n\t\t\t\tthrow scope.error(`Type ${typeObjToString(obj.rettype)} is not defined`);\n\t\t\t}\n\n\t\t\trettype = scope.getType(typeObjToNestedArr(obj.rettype));\n\t\t\tname = obj.name;\n\t\t}\n\n\t\tvar params = obj.params.map(tvo => {\n\t\t\tvar tv = PI.variable(tvo, scope);\n\n\t\t\tif (scope.hasOwnVariable(tv.name))\n\t\t\t\tthrow scope.error(`Parameter ${tv.name} has already been declared`);\n\t\t\t\n\t\t\tif (!(tv instanceof Parameter)) {\n\t\t\t\tthrow Error('Something\\'s wrong');\n\t\t\t}\n\n\t\t\tscope.addVariable(tv);\n\t\t\treturn tv;\n\t\t});\n\n\t\tif (obj.expr) {\n\t\t\texpr = PI.objectexpr(obj.expr, scope);\n\t\t}\n\n\t\treturn new ObjectFun({annotations: [], sealed, rettype, name, params, expr, doc, tex}, scope.trace);\n\t}\n\n\tpublic static funcall(obj: FuncallObject, parentScope: Scope): Funcall {\n\t\tif (obj._type != 'funcall')\n\t\t\tthrow Error('Assertion failed');\n\n\t\tvar scope = parentScope.extend('funcall', 'name' in obj.schema ? obj.schema.name : null, obj.location);\n\n\t\tvar fun = PI.objectexpr(obj.schema, scope);\n\n\t\tvar args = obj.args.map(arg => {\n\t\t\treturn PI.objectexpr(arg, scope);\n\t\t});\n\n\t\treturn new Funcall({fun, args}, scope.trace);\n\t}\n\n\tpublic static expr(obj: ExprObject, parentScope: Scope, context: ExecutionContext): Expr {\n\t\tif (!['tee', 'reduction', 'schemacall', 'schemaexpr', 'var', 'with'].includes(obj._type)) {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\t// don't extend scope\n\t\tvar scope = parentScope;\n\n\t\tswitch (obj._type) {\n\t\t\tcase 'tee':\n\t\t\t\treturn PI.tee(obj, scope, context);\n\t\t\tcase 'reduction':\n\t\t\t\treturn PI.reduction(obj, scope, context);\n\t\t\tcase 'schemacall':\n\t\t\t\treturn PI.schemacall(obj, scope, context);\n\t\t\tcase 'schemaexpr':\n\t\t\t\treturn PI.schema(obj, scope, context);\n\t\t\tcase 'var':\n\t\t\t\treturn PI.metavar(obj, scope);\n\t\t\tcase 'with':\n\t\t\t\treturn PI.with(obj, scope, context);\n\t\t\tdefault:\n\t\t\t\tthrow Error('wut');\n\t\t}\n\t}\n\n\tpublic static objectexpr(obj: ObjectExprObject, parentScope: Scope): Expr {\n\t\tif (!['funcall', 'funexpr', 'var'].includes(obj._type)) {\n\t\t\tconsole.log(obj);\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\t// don't extend scope\n\t\tvar scope = parentScope;\n\n\t\tswitch (obj._type) {\n\t\t\tcase 'funcall':\n\t\t\t\treturn PI.funcall(obj, scope);\n\t\t\tcase 'funexpr':\n\t\t\t\treturn PI.fun(obj, scope);\n\t\t\tcase 'var':\n\t\t\t\treturn PI.variable(obj, scope);\n\t\t\tdefault:\n\t\t\t\tthrow Error('wut');\n\t\t}\n\t}\n\n\tpublic static metavar(obj: VarObject, parentScope: Scope): Expr {\n\t\tif (obj._type != 'var')\n\t\t\tthrow Error('Assertion failed');\n\n\t\t// don't extend scope\n\t\tvar scope = parentScope;\n\n\t\tswitch (obj.type) {\n\t\t\tcase '@':\n\t\t\t\tif (obj.name.match(/^h[0-9]+$/)) {\n\t\t\t\t\tvar hypnum = Number(obj.name.slice(1)) - 1;\n\t\t\t\t\tif (hypnum >= scope.hypotheses.length) {\n\t\t\t\t\t\tthrow scope.error(`Hypothesis #${hypnum + 1} not found`);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn scope.hypotheses[hypnum];\n\t\t\t\t}\n\n\t\t\t\tthrow scope.error(`Unknown selector query ${varObjToString(obj)}`);\n\t\t\tcase '$':\n\t\t\t\tif (!scope.has$(obj.name)) {\n\t\t\t\t\tthrow scope.error(`${varObjToString(obj)} is not defined`);\n\t\t\t\t}\n\n\t\t\t\treturn scope.get$(obj.name);\n\t\t\tcase 'normal':\n\t\t\t\tif (!scope.hasSchema(obj.name))\n\t\t\t\t\tthrow scope.error(`Schema ${varObjToString(obj)} is not defined`);\n\n\t\t\t\treturn scope.getSchema(obj.name);\n\t\t\tdefault:\n\t\t\t\tthrow scope.error(`Unknown type ${obj.type}`);\n\t\t}\n\t}\n\n\tpublic static with(obj: WithObject, parentScope: Scope, context: ExecutionContext): With {\n\t\tif (obj._type != 'with') {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\tvar scope = parentScope.extend('with', null, obj.location);\n\n\t\tvar tv = PI.variable(obj.with, scope);\n\n\t\tif (scope.hasOwnVariable(tv.name))\n\t\t\tthrow scope.error(`Parameter ${tv.name} has already been declared`);\n\t\t\n\t\tif (!(tv instanceof Variable)) {\n\t\t\tthrow Error('Something\\'s wrong');\n\t\t}\n\n\t\tscope.addVariable(tv);\n\n\t\tvar def$s = obj.def$s.map($ => {\n\t\t\tvar $v = PI.def$($, scope, context);\n\n\t\t\tif (scope.hasOwn$($v.name)) {\n\t\t\t\tthrow scope.error(`${$.name} has already been declared`);\n\t\t\t}\n\n\t\t\treturn scope.add$($v);\n\t\t});\n\n\t\tvar expr = PI.expr(obj.expr, scope, context);\n\n\t\treturn new With({\n\t\t\tvariable: tv,\n\t\t\tdef$s,\n\t\t\texpr\n\t\t}, scope.trace);\n\t}\n\n\tpublic static tee(obj: TeeObject, parentScope: Scope, context: ExecutionContext): Tee {\n\t\tif (obj._type != 'tee')\n\t\t\tthrow Error('Assertion failed');\n\n\t\tvar scope = parentScope.extend('tee', null, obj.location);\n\n\t\tvar left = obj.left.map(o => PI.expr(o, scope, context));\n\n\t\tvar scopeRight = scope.extend('tee.right', null, obj.right.location);\n\t\tleft.forEach(l => scopeRight.hypotheses.push(l));\n\n\t\tvar def$s = obj.def$s.map($ => {\n\t\t\tvar $v = PI.def$($, scopeRight, context);\n\n\t\t\tif (scopeRight.hasOwn$($v.name)) {\n\t\t\t\tthrow scopeRight.error(`${$.name} has already been declared`);\n\t\t\t}\n\n\t\t\treturn scopeRight.add$($v);\n\t\t});\n\n\t\tvar right = PI.expr(obj.right, scopeRight, context);\n\n\t\treturn new Tee({left, def$s, right}, scope.trace);\n\t}\n\n\tpublic static def$(obj: Def$Object, parentScope: Scope, context: ExecutionContext): $Variable {\n\t\tif (obj._type != 'def$')\n\t\t\tthrow Error('Assertion failed');\n\t\t\n\t\tvar scope = parentScope.extend('def$', obj.name, obj.location);\n\t\t\n\t\tvar expr = PI.expr(obj.expr, scope, context);\n\n\t\treturn new $Variable({name: obj.name, expr}, scope.trace);\n\t}\n\n\tpublic static schema(obj: DefschemaObject | SchemaexprObject, parentScope: Scope, oldContext: ExecutionContext): Schema {\n\t\tif (obj._type != 'defschema' && obj._type != 'schemaexpr')\n\t\t\tthrow Error('Assertion failed');\n\t\t\n\t\tvar name = obj._type == 'defschema' ? obj.name : null;\n\n\t\tvar scope = parentScope.extend('schema', name, obj.location);\n\n\t\tvar schemaType: SchemaType = 'schema',\n\t\t\tdoc: string = null,\n\t\t\tannotations: string[] = [],\n\t\t\tcontext = oldContext;\n\n\t\tif (obj._type == 'defschema') {\n\t\t\tschemaType = obj.schemaType;\n\t\t\tdoc = obj.doc;\n\t\t\tannotations = obj.annotations;\n\n\t\t\tif (oldContext) {\n\t\t\t\tconsole.log(oldContext);\n\t\t\t\tthrow Error('duh');\n\t\t\t}\n\n\t\t\tvar using: (Variable | ObjectFun)[] = obj.using.map(name => {\n\t\t\t\tif (!scope.hasVariable(name)) {\n\t\t\t\t\tthrow scope.error(`Variable ${name} is not defined`);\n\t\t\t\t}\n\n\t\t\t\tvar fun = scope.getVariable(name);\n\n\t\t\t\tif (!fun.expr) {\n\t\t\t\t\tthrow scope.error(`${name} is not a macro`);\n\t\t\t\t}\n\n\t\t\t\treturn fun;\n\t\t\t});\n\n\t\t\tcontext = new ExecutionContext(using);\n\t\t}\n\n\t\tvar params = obj.params.map(tvo => {\n\t\t\tvar tv = PI.variable(tvo, scope);\n\n\t\t\tif (scope.hasOwnVariable(tv.name))\n\t\t\t\tthrow scope.error(`Parameter ${tv.name} has already been declared`);\n\t\t\t\n\t\t\tif (!(tv instanceof Parameter)) {\n\t\t\t\tthrow Error('Something\\'s wrong');\n\t\t\t}\n\n\t\t\tscope.addVariable(tv);\n\t\t\treturn tv;\n\t\t});\n\n\t\tvar def$s = obj.def$s.map($ => {\n\t\t\tvar $v = PI.def$($, scope, context);\n\n\t\t\tif (scope.hasOwn$($v.name)) {\n\t\t\t\tthrow scope.error(`${$.name} has already been declared`);\n\t\t\t}\n\n\t\t\treturn scope.add$($v);\n\t\t});\n\n\t\tvar expr = PI.expr(obj.expr, scope, context);\n\n\t\treturn new Schema({doc, tex: null, annotations, schemaType, name, params, context, def$s, expr}, scope.trace);\n\t}\n\n\tpublic static schemacall(obj: SchemacallObject, parentScope: Scope, context: ExecutionContext): Funcall {\n\t\tif (obj._type != 'schemacall')\n\t\t\tthrow Error('Assertion failed');\n\n\t\tvar scope = parentScope.extend('schemacall', 'name' in obj.schema ? obj.schema.name : null, obj.location);\n\n\t\tvar fun = PI.expr(obj.schema, scope, context);\n\n\t\tvar args = obj.args.map(obj => {\n\t\t\treturn PI.objectexpr(obj, scope);\n\t\t});\n\n\t\treturn new Funcall({\n\t\t\tfun,\n\t\t\targs\n\t\t}, scope.trace);\n\t}\n\n\tpublic static reduction(obj: ReductionObject, parentScope: Scope, context: ExecutionContext): Reduction {\n\t\tif (obj._type != 'reduction')\n\t\t\tthrow Error('Assertion failed');\n\t\t\n\t\tif (!context) {\n\t\t\tthrow Error('duh');\n\t\t}\n\n\t\tvar scope = parentScope.extend('reduction', 'name' in obj.subject ? obj.subject.name : null, obj.location);\n\n\t\tvar subject = PI.expr(obj.subject, scope, context);\n\n\t\tvar args = !obj.args\n\t\t\t? null\n\t\t\t: obj.args.map(g => {\n\t\t\t\treturn g && PI.objectexpr(g, scope);\n\t\t\t});\n\n\t\tvar antecedents = obj.antecedents.map(obj => {\n\t\t\treturn PI.expr(obj, scope, context);\n\t\t});\n\n\t\tvar as = obj.as && PI.expr(obj.as, scope, context);\n\n\t\treturn new Reduction({\n\t\t\tsubject,\n\t\t\targs,\n\t\t\tantecedents,\n\t\t\tas\n\t\t}, context, scope.trace);\n\t}\n}","import Counter from \"../Counter\";\nimport ExecutionContext from \"../ExecutionContext\";\nimport { ProofType } from \"../ProofType\";\nimport StackTrace from \"../StackTrace\";\nimport Fun from \"./Fun\";\nimport Funcall from \"./Funcall\";\nimport Expr, { EqualsPriority, Precedence } from \"./Expr\";\nimport { isNameable } from \"./Nameable\";\nimport Parameter from \"./Parameter\";\nimport Schema from \"./Schema\";\nimport Tee from \"./Tee\";\nimport { FunctionalObjectType, FunctionalMetaType, TeeType } from \"./types\";\nimport Variable from \"./Variable\";\n\ninterface ReductionArgumentType {\n\tantecedents: Expr[];\n\tsubject: Expr;\n\targs: (Expr | null)[];\n\tas: Expr;\n}\n\nexport default class Reduction extends Expr {\n\t\n\tpublic readonly antecedents: Expr[];\n\tpublic readonly requiredAntecedents: Expr[];\n\tpublic readonly subject: Expr;\n\tpublic readonly args: (Expr | null)[];\n\tpublic readonly preFormatConsequent: Expr;\n\tpublic readonly consequent: Expr;\n\tprivate readonly antecedentEqualsResults: (Fun | Variable)[][];\n\tprivate readonly rightEqualsResult: (Fun | Variable)[];\n\n\tconstructor ({antecedents, subject, args, as}: ReductionArgumentType, context: ExecutionContext, trace: StackTrace) {\n\t\tif (args) {\n\t\t\tlet resolvedType = subject.type.resolve() as FunctionalObjectType | FunctionalMetaType,\n\t\t\t\tparamTypes = resolvedType.from,\n\t\t\t\targTypes = args.map(e => e && e.type);\n\n\t\t\tif (paramTypes.length != argTypes.length)\n\t\t\t\tthrow Expr.error(`Invalid number of arguments (expected ${paramTypes.length}): ${argTypes.length}`, trace);\n\n\t\t\tfor (var i = 0; i < paramTypes.length; i++) {\n\t\t\t\tif (argTypes[i] && !paramTypes[i].equals(argTypes[i])) {\n\t\t\t\t\tthrow Expr.error(`Argument #${i + 1} has illegal argument type (expected ${paramTypes[i]}): ${argTypes[i]}`, trace);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (subject instanceof Fun) {\n\t\t\tsubject.params.forEach((p, i) => {\n\t\t\t\tif (!(args && args[i]) && !p.selector) {\n\t\t\t\t\tthrow Expr.error(`Argument #${i + 1} could not be guessed`, trace);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tvar derefs = subject.params.map((p, i) => {\n\t\t\t\tif (args && args[i]) return args[i];\n\n\t\t\t\tvar tee = (subject as Fun).expr.expandMeta(false);\n\n\t\t\t\tif (!(tee instanceof Tee)) throw Error('wut');\n\t\n\t\t\t\treturn Reduction.guess(\n\t\t\t\t\tp.selector,\n\t\t\t\t\ttee.left, antecedents,\n\t\t\t\t\ttee.right, as,\n\t\t\t\t\tcontext, trace\n\t\t\t\t);\n\t\t\t});\n\t\n\t\t\tsubject = new Funcall({\n\t\t\t\tfun: subject,\n\t\t\t\targs: derefs,\n\t\t\t}, trace);\n\t\t} else if (args) {\n\t\t\tthrow Expr.error('Something\\'s wrong', trace);\n\t\t}\n\t\n\t\tif (!(subject.type instanceof TeeType))\n\t\t\tthrow Expr.error('Subject is not reducible', trace);\n\t\n\t\tif (!(antecedents instanceof Array)\n\t\t\t\t|| antecedents.map(e => e instanceof Expr).some(e => !e))\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\n\t\tvar paramTypes = subject.type.left,\n\t\t\tantecedentTypes = antecedents.map(e => e.type);\n\n\t\tif (paramTypes.length != antecedentTypes.length)\n\t\t\tthrow Expr.error(`Invalid number of arguments (expected ${paramTypes.length}): ${antecedentTypes.length}`, trace);\n\n\t\tfor (let i = 0; i < paramTypes.length; i++) {\n\t\t\tif (!paramTypes[i].equals(antecedentTypes[i]))\n\t\t\t\tthrow Expr.error(`Illegal argument type (expected ${paramTypes[i]}): ${antecedentTypes[i]}`, trace);\n\t\t}\n\n\t\tsuper(null, null, subject.type.right, trace);\n\n\t\tthis.subject = subject;\n\t\tthis.antecedents = antecedents;\n\n\t\tvar tee = subject.expandMeta(true);\n\n\t\tif (!(tee instanceof Tee)) {\n\t\t\tthrow Expr.error('Assertion failed', trace);\n\t\t}\n\n\t\tthis.requiredAntecedents = tee.left;\n\t\tthis.antecedentEqualsResults = Array(tee.left.length).fill(0).map(() => []);\n\n\t\tvar antecedentsExpanded = antecedents.map(arg => {\n\t\t\treturn arg.expandMeta(true);\n\t\t});\n\n\t\tfor (let i = 0; i < tee.left.length; i++) {\n\t\t\tvar tmp = tee.left[i].equals(antecedentsExpanded[i], context);\n\t\t\tif (!tmp) {\n\t\t\t\tthrow Expr.error(`LHS #${i + 1} failed to match:\n\n--- EXPECTED ---\n${tee.left[i].expandMeta(true)}\n----------------\n\n--- RECEIVED ---\n${antecedents[i].expandMeta(true)}\n----------------`, trace);\n\t\t\t}\n\n\t\t\tthis.antecedentEqualsResults[i] = tmp;\n\t\t}\n\n\t\tthis.preFormatConsequent = tee.right;\n\n\t\tif (as) {\n\t\t\tvar tmp = tee.right.equals(as, context);\n\t\t\tif (!tmp) {\n\t\t\t\tthrow Expr.error(`RHS failed to match:\n\n--- EXPECTED ---\n${tee.right.expandMeta(true)}\n----------------\n\n--- RECEIVED (from [as ...]) ---\n${as.expandMeta(true)}\n----------------`, trace);\n\t\t\t}\n\n\t\t\tthis.rightEqualsResult = tmp;\n\t\t\tthis.consequent = as;\n\t\t} else {\n\t\t\tthis.consequent = tee.right;\n\t\t}\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.subject.isProved(hypotheses)\n\t\t\t&& this.antecedents.every(l => l.isProved(hypotheses));\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\treturn this.consequent.substitute(map);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\treturn this.consequent.expandMeta(andFuncalls);\n\t}\n\n\tprotected getEqualsPriority(): EqualsPriority {\n\t\treturn EqualsPriority.FIVE;\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\treturn this.consequent.equals(obj, context);\n\t}\n\n\tprotected getProofInternal(\n\t\t\thypnumMap: Map<Expr, number>,\n\t\t\t$Map: Map<Expr, number | [number, number]>,\n\t\t\tctr: Counter): ProofType[] {\n\t\t\n\t\tvar antecedentLinesList: ProofType[][] = [];\n\t\tvar antecedentNums: (number | [number, number])[] = this.antecedents.map((l, i) => {\n\t\t\tif (!this.antecedentEqualsResults[i].length) {\n\t\t\t\tif (hypnumMap.has(l)) return hypnumMap.get(l);\n\t\t\t\tif ($Map.has(l)) return $Map.get(l);\n\t\t\t}\n\n\t\t\tvar ref = hypnumMap.has(l)\n\t\t\t\t? hypnumMap.get(l)\n\t\t\t\t: $Map.has(l)\n\t\t\t\t\t? $Map.get(l)\n\t\t\t\t\t: null;\n\t\t\tvar lines = ref ? [] : l.getProof(hypnumMap, $Map, ctr);\n\n\t\t\tif (this.antecedentEqualsResults[i].length) {\n\t\t\t\tlines.push({\n\t\t\t\t\t_type: 'bydef',\n\t\t\t\t\tctr: ctr.next(),\n\t\t\t\t\tref: ref || lines[lines.length - 1].ctr,\n\t\t\t\t\texpr: this.requiredAntecedents[i],\n\t\t\t\t\tof: this.antecedentEqualsResults[i]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tantecedentLinesList.push(lines);\n\t\t\treturn this.antecedentEqualsResults[i].length\n\t\t\t\t? ctr.peek()\n\t\t\t\t: lines[lines.length - 1].ctr;\n\t\t});\n\t\t\n\t\tvar args: Expr[] = null;\n\t\tvar subjectlines: ProofType[] = [];\n\t\tvar subjectnum = hypnumMap.get(this.subject)\n\t\t\t|| $Map.get(this.subject)\n\t\t\t|| (\n\t\t\t\tthis.subject instanceof Funcall && $Map.has(this.subject.fun)\n\t\t\t\t\t? (args = this.subject.args, $Map.get(this.subject.fun))\n\t\t\t\t\t: false\n\t\t\t)\n\t\t\t|| (\n\t\t\t\t(s => {\n\t\t\t\t\treturn s instanceof Fun && s.name\n\t\t\t\t\t\t|| s instanceof Funcall && isNameable(s.fun) && s.fun.name;\n\t\t\t\t})(this.subject)\n\t\t\t\t\t? this.subject\n\t\t\t\t\t: (subjectlines = this.subject.getProof(hypnumMap, $Map, ctr))[subjectlines.length-1].ctr\n\t\t\t);\n\n\t\tvar ret: ProofType[] = [\n\t\t\t...antecedentLinesList.flat(),\n\t\t\t...subjectlines\n\t\t];\n\n\t\tif (this.rightEqualsResult && this.rightEqualsResult.length) {\n\t\t\tret.push(\n\t\t\t\t{\n\t\t\t\t\t_type: 'E',\n\t\t\t\t\tctr: ctr.next(),\n\t\t\t\t\tsubject: subjectnum,\n\t\t\t\t\targs,\n\t\t\t\t\tantecedents: antecedentNums,\n\t\t\t\t\treduced: this.preFormatConsequent\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_type: 'bydef',\n\t\t\t\t\tref: ctr.peek(),\n\t\t\t\t\tctr: ctr.next(),\n\t\t\t\t\texpr: this.consequent,\n\t\t\t\t\tof: this.rightEqualsResult\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tret.push({\n\t\t\t\t_type: 'E',\n\t\t\t\tctr: ctr.next(),\n\t\t\t\tsubject: subjectnum,\n\t\t\t\targs,\n\t\t\t\tantecedents: antecedentNums,\n\t\t\t\treduced: this.consequent\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n\n\tpublic static guess(\n\t\t\tselector: string,\n\t\t\trequiredAntecedents: Expr[], antecedents: Expr[],\n\t\t\tright: Expr, as: Expr,\n\t\t\tcontext: ExecutionContext, trace: StackTrace): Expr {\n\t\t\n\t\tif (selector.length == 0) throw Expr.error('wut', trace);\n\n\t\tvar pattern: Expr, instance: Expr;\n\n\t\tif (selector[0] == 'r') {\n\t\t\tif (!as) {\n\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at 0): expected output is not given`, trace);\n\t\t\t}\n\n\t\t\tpattern = right;\n\t\t\tinstance = as;\n\t\t} else {\n\t\t\tvar n = Number(selector[0]);\n\n\t\t\tif (!(1 <= n && n <= antecedents.length))\n\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at 0): antecedent index out of range`, trace);\n\n\t\t\tpattern = requiredAntecedents[n - 1];\n\t\t\tinstance = antecedents[n - 1];\n\t\t}\n\n\t\treturn (function recurse(\n\t\t\t\tptr: number,\n\t\t\t\tpattern: Expr, instance: Expr,\n\t\t\t\tparams: Parameter[]): Expr {\n\t\t\t\n\t\t\tinstance = instance.expandMeta(true);\n\t\t\t\n\t\t\tif (selector.length <= ptr) return instance;\n\n\t\t\tif (/^[0-9]$/.test(selector[ptr])) {\n\t\t\t\tvar n = Number(selector[ptr]);\n\n\t\t\t\tif (pattern instanceof Tee && instance instanceof Tee) {\n\t\t\t\t\tif (pattern.left.length != instance.left.length) {\n\t\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): antecedent length mismatch`, trace);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!(1 <= n && n <= instance.left.length)) {\n\t\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): antecedent index out of range`, trace);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn recurse(ptr + 1, pattern.left[n - 1], instance.left[n - 1], params);\n\t\t\t\t}\n\n\t\t\t\twhile (true) {\n\t\t\t\t\twhile (instance instanceof Variable && instance.expr) {\n\t\t\t\t\t\tinstance = instance.expr;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!(pattern instanceof Funcall && instance instanceof Funcall)) {\n\t\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr})`, trace);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pattern.fun.equals(instance.fun, context)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!instance.isExpandable(context)) {\n\t\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): ${instance}`, trace);\n\t\t\t\t\t}\n\n\t\t\t\t\tinstance = instance.expandOnce(context).expanded;\n\t\t\t\t}\n\n\t\t\t\tif (!(1 <= n && n <= instance.args.length))\n\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr})`, trace);\n\n\t\t\t\treturn recurse(ptr + 1, pattern.args[n - 1], instance.args[n - 1], params);\n\t\t\t} else if (selector[ptr] == 'r') {\n\t\t\t\tif (!(pattern instanceof Tee && instance instanceof Tee)) {\n\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr})`, trace);\n\t\t\t\t}\n\n\t\t\t\treturn recurse(ptr + 1, pattern.right, instance.right, params);\n\t\t\t} else if (selector[ptr] == 'c') {\n\t\t\t\tif (!(\n\t\t\t\t\tpattern instanceof Fun && !pattern.name\n\t\t\t\t\t&& instance instanceof Fun && !instance.name\n\t\t\t\t)) {\n\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr})`, trace);\n\t\t\t\t}\n\n\t\t\t\tif (pattern.length != instance.length) {\n\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): parameter length mismatch`, trace);\n\t\t\t\t}\n\n\t\t\t\tvar placeholders = [];\n\n\t\t\t\tfor (var i = 0; i < pattern.length; i++) {\n\t\t\t\t\tif (!pattern.params[i].type.equals(instance.params[i].type)) {\n\t\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): parameter type mismatch`, trace);\n\t\t\t\t\t}\n\n\t\t\t\t\tplaceholders.push(new Parameter({\n\t\t\t\t\t\ttex: instance.params[i].tex,\n\t\t\t\t\t\ttype: pattern.params[i].type,\n\t\t\t\t\t\tname: instance.params[i].name,\n\t\t\t\t\t\tselector: null\n\t\t\t\t\t}, trace));\n\t\t\t\t}\n\n\t\t\t\treturn recurse(ptr + 1, pattern.call(placeholders), instance.call(placeholders), placeholders.concat(params));\n\t\t\t} else if (selector[ptr] == 'f') {\n\t\t\t\tif (ptr != selector.length - 1) {\n\t\t\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): invalid selector`, trace);\n\t\t\t\t}\n\n\t\t\t\t// (($0, $1) => f($0, $1)) -> f\n\t\t\t\tif (instance instanceof Funcall\n\t\t\t\t\t\t&& instance.args.length == params.length\n\t\t\t\t\t\t&& instance.args.every((arg, i) => arg == params[i])) {\n\t\t\t\t\treturn instance.fun;\n\t\t\t\t}\n\n\t\t\t\treturn new Schema({\n\t\t\t\t\tdoc: null,\n\t\t\t\t\ttex: null,\n\t\t\t\t\tannotations: [],\n\t\t\t\t\tschemaType: 'schema',\n\t\t\t\t\tname: null,\n\t\t\t\t\tparams,\n\t\t\t\t\tcontext: new ExecutionContext(),\n\t\t\t\t\tdef$s: [],\n\t\t\t\t\texpr: instance\n\t\t\t\t}, trace);\n\t\t\t}\n\n\t\t\tthrow Expr.error(`Cannot dereference @${selector} (at ${ptr}): invalid selector`, trace);\n\t\t})(1, pattern, instance, []);\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\tvar antecedents = this.antecedents.map(arg => {\n\t\t\treturn arg.toIndentedString(indent + 1);\n\t\t});\n\t\n\t\tif (antecedents.join('').length <= 50) {\n\t\t\tantecedents = this.antecedents.map(arg => {\n\t\t\t\treturn arg.toIndentedString(indent);\n\t\t\t});\n\t\n\t\t\treturn [\n\t\t\t\t`${this.subject.toIndentedString(indent)}[`,\n\t\t\t\tantecedents.join(', '),\n\t\t\t\t']'\n\t\t\t].join('');\n\t\t}\n\n\t\treturn [\n\t\t\t`${this.subject.toIndentedString(indent)}[`,\n\t\t\t'\\t' + antecedents.join(',\\n' + '\\t'.repeat(indent + 1)),\n\t\t\t']'\n\t\t].join('\\n' + '\\t'.repeat(indent));\n\t\t\n\t}\n\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\treturn `${this.subject.toTeXString(false)}[${this.antecedents.map(e => e.toTeXString(Expr.PREC_COMMA)).join(', ')}]`;\n\t}\n}","import Counter from \"../Counter\";\nimport ExecutionContext from \"../ExecutionContext\";\nimport { ProofType } from \"../ProofType\";\nimport StackTrace from \"../StackTrace\";\nimport $Variable from \"./$Variable\";\nimport Fun from \"./Fun\";\nimport Expr, { EqualsPriority, Precedence } from \"./Expr\";\nimport Variable from \"./Variable\";\n\ninterface WithArgumentType {\n\tvariable: Variable;\n\tdef$s: $Variable[];\n\texpr: Expr;\n}\n\nexport default class With extends Expr {\n\n\tpublic readonly variable: Variable;\n\tpublic readonly def$s: $Variable[];\n\tpublic readonly expr: Expr;\n\n\tconstructor({variable, def$s, expr}: WithArgumentType, trace: StackTrace) {\n\t\tsuper(null, null, expr.type, trace);\n\n\t\tthis.variable = variable;\n\t\tthis.def$s = def$s;\n\t\tthis.expr = expr;\n\t}\n\n\tpublic substitute(map: Map<Variable, Expr>): Expr {\n\t\tif (map.has(this.variable))\n\t\t\tthrow Error('Parameter collision');\n\t\t\n\t\tmap = new Map(map);\n\n\t\treturn this.expandMeta(false).substitute(map);\n\t}\n\n\tprotected expandMetaInternal(andFuncalls: boolean): Expr {\n\t\tvar map = new Map<Variable, Expr>();\n\t\tmap.set(this.variable, this.variable.expr);\n\n\t\treturn this.expr.substitute(map).expandMeta(andFuncalls);\n\t}\n\n\tprotected getEqualsPriority(context: ExecutionContext): EqualsPriority {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tprotected equalsInternal(obj: Expr, context: ExecutionContext): (Fun | Variable)[] | false {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tprotected isProvedInternal(hypotheses: Expr[]): boolean {\n\t\treturn this.expr.isProved(hypotheses);\n\t}\n\n\tprotected getProofInternal(hypnumMap: Map<Expr, number>, $Map: Map<Expr, number | [number, number]>, ctr: Counter, root?: boolean): ProofType[] {\n\n\t\t$Map = new Map($Map);\n\n\t\tvar def: ProofType = {\n\t\t\t_type: 'def',\n\t\t\tctr: ctr.next(),\n\t\t\tvar: this.variable\n\t\t};\n\n\t\tvar $lines = this.def$s.map($ => {\n\t\t\tvar lines = $.expr.getProof(hypnumMap, $Map, ctr);\n\t\t\tvar $num = lines[lines.length - 1].ctr;\n\t\t\t$Map.set($, $num);\n\t\t\treturn lines;\n\t\t}).flat(1);\n\n\t\treturn [\n\t\t\tdef,\n\t\t\t...$lines,\n\t\t\t...this.expr.getProof(hypnumMap, $Map, ctr)\n\t\t];\n\t}\n\n\tpublic toIndentedString(indent: number, root?: boolean): string {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\tpublic toTeXString(prec?: Precedence, root?: boolean): string {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n}","import Counter from \"./Counter\";\nimport Expr from \"./exprs/Expr\";\nimport Schema from \"./exprs/Schema\";\nimport Variable from \"./exprs/Variable\";\nimport { ProofType } from \"./ProofType\";\nimport Scope from \"./Scope\";\n\nexport default class ProofExplorer {\n\tpublic static get(scope: Scope, name: string, ktx): string {\n\t\tvar DIAMOND = '&#x25C7;',\n\t\t\tDOWN = '&#x25BC;';\n\t\t// var UP = '&#x25B2;';\n\t\t\n\t\tif (!scope.hasSchema(name)) {\n\t\t\tthrow Error('wut');\n\t\t}\n\t\n\t\tvar expr = scope.getSchema(name);\n\n\t\tif (!(expr instanceof Schema)) {\n\t\t\tthrow Error('wut');\n\t\t}\n\n\t\tfunction getHtmlLine(ctr: string | number, left: any[], h1: string, h2: string | string[], options?) {\n\t\t\tvar padding = left.length;\n\n\t\t\tvar {bbb=false, rrb=false} = options || {};\n\t\n\t\t\tvar htmlLeft = left.map((e, i, a) => `<td class=\"${rrb && i == a.length - 1 ? 'rrb' : 'brb'}\">${e.map(f => ktx(f.toTeXStringWithId(true))).join(', ')}</td>`).join('');\n\n\t\t\tfor (var i = 0; i < left.length; i++)\n\t\t\t\twhile(left[i].length) left[i].pop();\n\t\n\t\t\treturn `<tr><th>${ctr}</th>${htmlLeft}<td ${bbb ? 'class=\"bbb\" ' : ''}colspan=\"${ncols-padding}\">${h1}</td>${h2 instanceof Array ? h2.map(e => `<td>${e}</td>`).join('') : `<td colspan=\"2\">${h2}</td>`}</tr>`;\n\t\t}\n\n\t\tfunction exprToHtml(expr: number | [number, number] | Expr, expand?: boolean): string {\n\t\t\tif (typeof expr == 'number') return `<b>${expr}</b>`;\n\t\t\tif (expr instanceof Array) return `<b>${expr[0]}&ndash;${expr[1]}</b>`;\n\t\t\tif (expand) return ktx(expr.expandMeta(true).toTeXString(true, true));\n\t\t\t\n\t\t\treturn ktx(expr.toTeXString(true, true));\n\t\t}\n\n\t\tvar tree = expr.getProof(new Map(), new Map(), new Counter(), true);\n\n\t\tvar innertree: ProofType[] = (tree[0] as any).$lines.concat((tree[0] as any).lines);\n\n\t\tvar ncols = (function recurse(tree: ProofType[]): number {\n\t\t\treturn Math.max(...tree.map(t => {\n\t\t\t\tswitch (t._type) {\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\t\trecurse(t.$lines),\n\t\t\t\t\t\t\trecurse(t.lines)\n\t\t\t\t\t\t) + 1;\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\t\trecurse(t.leftlines),\n\t\t\t\t\t\t\trecurse(t.rightlines)\n\t\t\t\t\t\t) + 1;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}));\n\t\t})(innertree);\n\n\t\tvar html = '<table class=\"explorer\">';\n\t\thtml += `<tr><th>#</th><th colspan=\"${ncols}\">expr</th><th colspan=\"2\">rule</th></tr>`;\n\t\t\n\t\thtml += (function tree2html(lines: ProofType[], left: Variable[][]) {\n\t\t\treturn lines.map(line => {\n\t\t\t\tswitch (line._type) {\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\t// getHtmlLine 함수가 이 배열을 조작하기 때문에\n\t\t\t\t\t\t// shallow copy 해야 한다.\n\t\t\t\t\t\tvar params = line.params.slice();\n\t\t\t\t\t\treturn tree2html(line.$lines, left.concat([params]))\n\t\t\t\t\t\t\t+ tree2html(line.lines, left.concat([params]));\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tvar newleft = left.concat([[]]);\n\n\t\t\t\t\t\tvar ret = '';\n\n\t\t\t\t\t\tif (line.leftlines.length == 0) {\n\t\t\t\t\t\t\tvar emptyleft = Array(left.length + 1).fill([]);\n\n\t\t\t\t\t\t\tret += getHtmlLine(\n\t\t\t\t\t\t\t\t'', emptyleft, '', '', {bbb: true, rrb: true}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tret += line.leftlines.map((line, i, a) => {\n\t\t\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\t\t\tnewleft,\n\t\t\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t\t\t'assumption',\n\t\t\t\t\t\t\t\t\t{bbb: i == a.length - 1, rrb: true}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}).join('');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tret += tree2html(\n\t\t\t\t\t\t\tline.rightlines,\n\t\t\t\t\t\t\tnewleft\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t'???'\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tthrow Error('no');\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t[DIAMOND, exprToHtml(line.num)]\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'RS':\n\t\t\t\t\tcase 'RCX':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t[DIAMOND, exprToHtml(line.expr)]\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'RC':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t[DIAMOND, `${exprToHtml(line.schema)} (${line.args.map(a => exprToHtml(a)).join(', ')})`]\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.reduced, true),\n\t\t\t\t\t\t\t[DOWN, `${exprToHtml(line.subject)}${line.args ? ' (' + line.args.map(a => exprToHtml(a)).join(', ') + ')' : ''} [${line.antecedents.map(a => exprToHtml(a)).join(', ')}]`]\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'NP':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr, true),\n\t\t\t\t\t\t\t'<b class=\"red\">not proved</b>'\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'def':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.var),\n\t\t\t\t\t\t\t'definition'\n\t\t\t\t\t\t);\n\t\t\t\t\tcase 'bydef':\n\t\t\t\t\t\treturn getHtmlLine(\n\t\t\t\t\t\t\tline.ctr,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\texprToHtml(line.expr),\n\t\t\t\t\t\t\t`by definition of ${line.of.map(v => {\n\t\t\t\t\t\t\t\treturn exprToHtml(v);\n\t\t\t\t\t\t\t}).join(', ')} [${exprToHtml(line.ref)}]`\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow Error(`Unknown type ${(line as any)._type}`);\n\t\t\t\t}\n\t\t\t}).join('');\n\t\t})(innertree, []);\n\t\t\n\t\thtml += '</table>';\n\t\n\t\treturn html;\n\t}\n}","export default class Counter {\n\n\tprivate n: number;\n\n\tconstructor (start: number=0) {\n\t\tthis.n = start;\n\t}\n\n\tpublic peek(): number {\n\t\treturn this.n;\n\t}\n\n\tpublic next(): number {\n\t\treturn ++this.n;\n\t}\n}","import $Variable from './exprs/$Variable';\nimport Fun from './exprs/Fun';\nimport Expr from './exprs/Expr';\nimport ObjectFun from './exprs/ObjectFun';\nimport Schema from './exprs/Schema';\nimport { FunctionalObjectType, ObjectType, SimpleObjectType } from './exprs/types';\nimport Variable from './exprs/Variable';\nimport { LocationObject } from './PegInterfaceDefinitions';\nimport StackTrace from './StackTrace';\n\nexport type NestedTypeInput = string | NestedTypeInput[];\n\n/**\n * 변수 영역(scope).\n * 구문 분석 과정에서 name resolution을 할 때에만 사용해야 한다.\n */\nexport default class Scope {\n\tpublic readonly importMap: Map<string, Scope> = new Map();\n\n\tpublic readonly typedefMap: Map<string, ObjectType> = new Map();\n\tpublic readonly defMap: Map<string, Variable | ObjectFun> = new Map();\n\tpublic readonly schemaMap: Map<string, Schema> = new Map();\n\tpublic readonly $Map: Map<string, $Variable> = new Map();\n\tpublic readonly hypotheses: Expr[] = [];\n\n\tpublic readonly parent: Scope;\n\tpublic readonly root: Scope;\n\n\tpublic readonly trace: StackTrace;\n\n\t/** 파일 경로. 예를 들어 `/propositional.math`이다. 파일과 일대일대응이어야 한다. */\n\tpublic readonly fileUri: string;\n\n\tconstructor (fileUri: string, parent: Scope, trace?: StackTrace) {\n\t\tthis.fileUri = fileUri;\n\n\t\tthis.parent = parent;\n\t\tthis.root = parent ? parent.root : this;\n\n\t\tif (trace && !(trace instanceof StackTrace)) {\n\t\t\tthrow Error('Assertion failed');\n\t\t}\n\n\t\tthis.trace = trace || new StackTrace(fileUri);\n\t}\n\n\tpublic extend(type: string, name: string, location: LocationObject): Scope {\n\t\tvar child = new Scope(this.fileUri, this, this.trace.extend({type, name, location}));\n\t\tthis.hypotheses.forEach(h => child.hypotheses.push(h));\n\t\treturn child;\n\t}\n\n\tpublic error(message: string): Error {\n\t\treturn this.trace.error(message);\n\t}\n\n\t/*\n\t * Possible input values:\n\t * 'st'\t\t\t\t\t\t-> st\n\t * ['cls', 'st']\t\t\t-> [cls -> st]\n\t * ['cls', 'cls', 'st']\t\t-> [(cls, cls) -> st]\n\t * [['cls', 'st'], 'st']\t-> [[cls -> st] -> st]\n\t */\n\tpublic hasOwnType(name: NestedTypeInput): boolean {\n\t\tif (typeof name == 'string') {\n\t\t\treturn this.typedefMap.has(name)\n\t\t\t\t|| [...this.importMap.values()].some(s => s.hasOwnType(name));\n\t\t}\n\n\t\tif (!(name instanceof Array))\n\t\t\tthrow this.error('Argument is malformed');\n\n\t\tif (name.length < 2)\n\t\t\tthrow this.error('Illegal array length');\n\n\t\treturn name.map(e => {\n\t\t\treturn this.hasOwnType(e);\n\t\t}).every(e => e);\n\t}\n\n\t/*\n\t * Possible input values:\n\t * 'st'\t\t\t\t\t\t-> st\n\t * ['cls', 'st']\t\t\t-> [cls -> st]\n\t * ['cls', 'cls', 'st']\t\t-> [(cls, cls) -> st]\n\t * [['cls', 'st'], 'st']\t-> [[cls -> st] -> st]\n\t */\n\tpublic hasType(name: NestedTypeInput): boolean {\n\t\tif (typeof name == 'string') {\n\t\t\treturn this.hasOwnType(name)\n\t\t\t\t|| (!!this.parent && this.parent.hasType(name));\n\t\t}\n\n\t\tif (!(name instanceof Array))\n\t\t\tthrow this.error('Argument is malformed');\n\n\t\tif (name.length < 2)\n\t\t\tthrow this.error('Illegal array length');\n\n\t\treturn name.map(e => {\n\t\t\treturn this.hasType(e);\n\t\t}).every(e => e);\n\t}\n\n\tpublic addType(type: SimpleObjectType): SimpleObjectType {\n\t\tif (!(type instanceof SimpleObjectType))\n\t\t\tthrow this.error('Illegal argument type');\n\n\t\tif (!type.name)\n\t\t\tthrow this.error('Something\\'s wrong');\n\n\t\tif (this.hasOwnType(type.name))\n\t\t\tthrow this.error(`Type ${type.name} has already been declared`);\n\n\t\tthis.typedefMap.set(type.name, type);\n\t\treturn type;\n\t}\n\n\t/*\n\t * Possible input values:\n\t * 'st'\t\t\t\t\t\t-> st\n\t * ['cls', 'st']\t\t\t-> [cls -> st]\n\t * ['cls', 'cls', 'st']\t\t-> [(cls, cls) -> st]\n\t * [['cls', 'st'], 'st']\t-> [[cls -> st] -> st]\n\t */\n\tpublic getType(name: NestedTypeInput): ObjectType {\n\t\tif (typeof name == 'string') {\n\t\t\tif (!this.hasType(name))\n\t\t\t\tthrow this.error(`Type ${name} is not defined`);\n\n\t\t\treturn this.typedefMap.has(name)\n\t\t\t\t? this.typedefMap.get(name)\n\t\t\t\t: (!!this.parent && this.parent.getType(name))\n\t\t\t\t\t|| [...this.importMap.values()].filter(s => {\n\t\t\t\t\t\treturn s.hasType(name)\n\t\t\t\t\t})[0].getType(name);\n\t\t}\n\n\t\tif (!(name instanceof Array))\n\t\t\tthrow this.error('Argument is malformed');\n\n\t\tif (name.length < 2)\n\t\t\tthrow this.error('Illegal array length');\n\n\t\tvar from = name.slice(0, name.length - 1).map(e => {\n\t\t\treturn this.getType(e);\n\t\t});\n\n\t\tvar to = this.getType(name[name.length - 1]);\n\n\t\treturn new FunctionalObjectType({\n\t\t\tfrom,\n\t\t\tto\n\t\t}, this.trace);\n\t}\n\n\tpublic hasOwnVariable(name: string): boolean {\n\t\treturn this.defMap.has(name)\n\t\t\t|| [...this.importMap.values()].some(s => s.hasOwnVariable(name));\n\t}\n\n\tpublic hasVariable(name: string): boolean {\n\t\treturn this.hasOwnVariable(name)\n\t\t\t|| (!!this.parent && this.parent.hasVariable(name));\n\t}\n\n\tpublic addVariable(variable: Variable | Fun): Variable | Fun {\n\t\tif (!(variable instanceof Variable))\n\t\t\tthrow this.error('Illegal argument type');\n\n\t\tif (this.hasOwnVariable(variable.name))\n\t\t\tthrow this.error(`Definition ${variable.name} has already been declared`);\n\n\t\tthis.defMap.set(variable.name, variable);\n\t\treturn variable;\n\t}\n\n\tpublic addFun(fun: ObjectFun): ObjectFun {\n\t\tif (!(fun instanceof ObjectFun))\n\t\t\tthrow this.error('Illegal argument type');\n\n\t\tif (!fun.name)\n\t\t\tthrow this.error('Cannot add anonymous fun to scope');\n\n\t\tif (this.hasOwnVariable(fun.name))\n\t\t\tthrow this.error(`Definition ${fun.name} has already been declared`);\n\n\t\tthis.defMap.set(fun.name, fun);\n\t\treturn fun;\n\t}\n\n\tpublic getVariable(name: string): Variable | ObjectFun {\n\t\tif (!this.hasVariable(name))\n\t\t\tthrow this.error(`Definition ${name} is not defined`);\n\n\t\treturn this.defMap.has(name)\n\t\t\t? this.defMap.get(name)\n\t\t\t: (!!this.parent && this.parent.getVariable(name))\n\t\t\t\t|| [...this.importMap.values()].filter(s => {\n\t\t\t\t\treturn s.hasVariable(name)\n\t\t\t\t})[0].getVariable(name);\n\t}\n\n\tpublic hasOwnSchema(name: string): boolean {\n\t\treturn this.schemaMap.has(name) || this.defMap.has(name)\n\t\t\t|| [...this.importMap.values()].some(s => s.hasOwnSchema(name));\n\t}\n\n\tpublic hasSchema(name: string): boolean {\n\t\treturn this.hasOwnSchema(name)\n\t\t\t|| (!!this.parent && this.parent.hasSchema(name));\n\t}\n\n\tpublic addSchema(schema: Schema): Schema {\n\t\tif (!(schema instanceof Fun))\n\t\t\tthrow this.error('Illegal argument type');\n\n\t\tif (this.hasOwnSchema(schema.name))\n\t\t\tthrow this.error(`Schema ${schema.name} has already been declared`);\n\n\t\tthis.schemaMap.set(schema.name, schema);\n\t\treturn schema;\n\t}\n\n\tpublic getSchema(name: string): Variable | Fun {\n\t\tif (!this.hasSchema(name))\n\t\t\tthrow this.error(`Schema ${name} is not defined`);\n\n\t\treturn this.schemaMap.has(name)\n\t\t\t? this.schemaMap.get(name)\n\t\t\t: this.defMap.has(name)\n\t\t\t\t? this.defMap.get(name)\n\t\t\t\t: (!!this.parent && this.parent.getSchema(name))\n\t\t\t\t\t|| [...this.importMap.values()].filter(s => {\n\t\t\t\t\t\treturn s.hasSchema(name)\n\t\t\t\t\t})[0].getSchema(name);\n\t}\n\n\tpublic hasOwn$(name: string): boolean {\n\t\treturn this.$Map.has(name)\n\t\t\t|| [...this.importMap.values()].some(s => s.hasOwn$(name));\n\t}\n\n\tpublic has$(name: string): boolean {\n\t\treturn this.hasOwn$(name)\n\t\t\t|| (!!this.parent && this.parent.has$(name));\n\t}\n\n\tpublic add$($: $Variable): $Variable {\n\t\tif (!($ instanceof $Variable))\n\t\t\tthrow this.error('Illegal argument type');\n\n\t\tif (this.hasOwn$($.name))\n\t\t\tthrow this.error(`$ variable ${$.name} has already been declared`);\n\n\t\tthis.$Map.set($.name, $);\n\t\treturn $;\n\t}\n\n\tpublic get$(name: string): $Variable {\n\t\tif (!this.has$(name))\n\t\t\tthrow this.error(`$ variable ${name} is not defined`);\n\n\t\treturn this.$Map.has(name)\n\t\t\t? this.$Map.get(name)\n\t\t\t: (!!this.parent && this.parent.get$(name))\n\t\t\t\t|| [...this.importMap.values()].filter(s => {\n\t\t\t\t\treturn s.has$(name)\n\t\t\t\t})[0].get$(name);\n\t}\n}","import { LocationObject } from \"./PegInterfaceDefinitions\";\n\ninterface StackTraceElement {\n\ttype: string;\n\tname: string;\n\tlocation: LocationObject;\n}\n\nexport default class StackTrace {\n\n\tpublic readonly fileUri: string;\n\tpublic readonly stack: StackTraceElement[];\n\n\tconstructor (fileUri: string, stack?: StackTraceElement[]) {\n\t\tthis.fileUri = fileUri;\n\t\tthis.stack = stack || [];\n\t}\n\n\tpublic extend(element: StackTraceElement): StackTrace {\n\t\treturn new StackTrace(this.fileUri, [element].concat(this.stack));\n\t}\n\n\tpublic error(message: string) {\n\t\tvar fileUri = this.fileUri || '<unknown>';\n\n\t\treturn new Error(\n\t\t\tmessage\n\t\t\t+ '\\n\\tat '\n\t\t\t+ (\n\t\t\t\tthis.stack.length\n\t\t\t\t\t? this.stack.map(({type, name, location}) => {\n\t\t\t\t\t\treturn `${type} ${name || '<anonymous>'} (${fileUri}:${location.start.line}:${location.start.column})`;\n\t\t\t\t\t}).join('\\n\\tat ')\n\t\t\t\t\t: `<root> (${fileUri}:1:1)`\n\t\t\t)\n\t\t);\n\t}\n}","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(i) {return i},\n      peg$c1 = function(imports, a) {return a},\n      peg$c2 = function(imports, lines) {return imports.concat(lines)},\n      peg$c3 = function(e) {return e},\n      peg$c4 = \"import\",\n      peg$c5 = peg$literalExpectation(\"import\", false),\n      peg$c6 = function(filename) {\n      \t\treturn {\n      \t\t\t_type: 'import',\n      \t\t\tfilename,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c7 = \"type\",\n      peg$c8 = peg$literalExpectation(\"type\", false),\n      peg$c9 = \"=\",\n      peg$c10 = peg$literalExpectation(\"=\", false),\n      peg$c11 = function(doc, name, o) {return o},\n      peg$c12 = function(doc, name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'typedef',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\texpr,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c13 = \"sealed\",\n      peg$c14 = peg$literalExpectation(\"sealed\", false),\n      peg$c15 = function(doc, tex, sealed, type, name, expr) {return expr},\n      peg$c16 = function(doc, tex, sealed, type, name) {return null},\n      peg$c17 = function(doc, tex, sealed, type, name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: false,\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\tsealed: !!sealed,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c18 = function(tex, type, name) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: true,\n      \t\t\tdoc: null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c19 = \":\",\n      peg$c20 = peg$literalExpectation(\":\", false),\n      peg$c21 = \"@\",\n      peg$c22 = peg$literalExpectation(\"@\", false),\n      peg$c23 = /^[a-z0-9_]/,\n      peg$c24 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c25 = function(tex, type, name, g) {return g},\n      peg$c26 = function(tex, type, name, selector) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: true,\n      \t\t\tdoc: null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\tselector,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c27 = \"(\",\n      peg$c28 = peg$literalExpectation(\"(\", false),\n      peg$c29 = \",\",\n      peg$c30 = peg$literalExpectation(\",\", false),\n      peg$c31 = function(doc, tex, sealed, rettype, name, head, tv) {return tv},\n      peg$c32 = function(doc, tex, sealed, rettype, name, head, tail) {return [head].concat(tail)},\n      peg$c33 = \")\",\n      peg$c34 = peg$literalExpectation(\")\", false),\n      peg$c35 = function(doc, tex, sealed, rettype, name, p) {return p || []},\n      peg$c36 = \"{\",\n      peg$c37 = peg$literalExpectation(\"{\", false),\n      peg$c38 = \"}\",\n      peg$c39 = peg$literalExpectation(\"}\", false),\n      peg$c40 = function(doc, tex, sealed, rettype, name, params, expr) {return expr},\n      peg$c41 = function(doc, tex, sealed, rettype, name, params) {return null},\n      peg$c42 = function(doc, tex, sealed, rettype, name, params, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defun',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\tsealed: !!sealed,\n      \t\t\trettype,\n      \t\t\tname,\n      \t\t\tparams,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c43 = function(doc, a) {return a},\n      peg$c44 = \"axiom\",\n      peg$c45 = peg$literalExpectation(\"axiom\", false),\n      peg$c46 = \"theorem\",\n      peg$c47 = peg$literalExpectation(\"theorem\", false),\n      peg$c48 = \"schema\",\n      peg$c49 = peg$literalExpectation(\"schema\", false),\n      peg$c50 = function(doc, annotations, schemaType, name, head, tv) {return tv},\n      peg$c51 = function(doc, annotations, schemaType, name, head, tail) {return [head].concat(tail)},\n      peg$c52 = function(doc, annotations, schemaType, name, p) {return p || []},\n      peg$c53 = \"using\",\n      peg$c54 = peg$literalExpectation(\"using\", false),\n      peg$c55 = function(doc, annotations, schemaType, name, params, head, n) {return n},\n      peg$c56 = function(doc, annotations, schemaType, name, params, head, tail) {return [head].concat(tail)},\n      peg$c57 = function(doc, annotations, schemaType, name, params, x) {return x},\n      peg$c58 = function(doc, annotations, schemaType, name, params, using, d) {return d},\n      peg$c59 = function(doc, annotations, schemaType, name, params, using, defdollars, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defschema',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\tannotations,\n      \t\t\tschemaType,\n      \t\t\tname,\n      \t\t\tparams,\n      \t\t\tusing: using || [],\n      \t\t\tdef$s: defdollars,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c60 = function(a) {return [a]},\n      peg$c61 = \"[\",\n      peg$c62 = peg$literalExpectation(\"[\", false),\n      peg$c63 = \";\",\n      peg$c64 = peg$literalExpectation(\";\", false),\n      peg$c65 = function(head, e) {return e},\n      peg$c66 = function(head, tail) {return [head].concat(tail)},\n      peg$c67 = \"]\",\n      peg$c68 = peg$literalExpectation(\"]\", false),\n      peg$c69 = function(b) {return b || []},\n      peg$c70 = \">\",\n      peg$c71 = peg$literalExpectation(\">\", false),\n      peg$c72 = function(antecedents, e) {return e},\n      peg$c73 = \"?\",\n      peg$c74 = peg$literalExpectation(\"?\", false),\n      peg$c75 = function(antecedents, subject) {return null},\n      peg$c76 = function(antecedents, subject, head) {return null},\n      peg$c77 = function(antecedents, subject, head, e) {return e},\n      peg$c78 = function(antecedents, subject, head, tail) {return [head].concat(tail)},\n      peg$c79 = function(antecedents, subject, a) {return a || []},\n      peg$c80 = \"as\",\n      peg$c81 = peg$literalExpectation(\"as\", false),\n      peg$c82 = function(antecedents, subject, args, m) {return m},\n      peg$c83 = function(antecedents, subject, args, as_) {return {subject, args, as_: as_ || null};},\n      peg$c84 = function(antecedents, right) {\n      \t\tvar ret = {\n      \t\t\t_type: 'reduction',\n      \t\t\tsubject: right[0].subject,\n      \t\t\targs: right[0].args,\n      \t\t\tantecedents,\n      \t\t\tas: right[0].as_,\n      \t\t\tlocation: location()\n      \t\t};\n\n      \t\tfor (var i = 1; i < right.length; i++) {\n      \t\t\tret = {\n      \t\t\t\t_type: 'reduction',\n      \t\t\t\tsubject: right[i].subject,\n      \t\t\t\targs: right[i].args,\n      \t\t\t\tantecedents: [ret],\n      \t\t\t\tas: right[i].as_,\n      \t\t\t\tlocation: location()\n      \t\t\t}\n      \t\t}\n      \t\t\n      \t\treturn ret;\n      \t},\n      peg$c85 = function(schema, head, e) {return e},\n      peg$c86 = function(schema, head, tail) {return [head].concat(tail)},\n      peg$c87 = function(schema, a) {return a || []},\n      peg$c88 = function(schema, args) {\n      \t\treturn {\n      \t\t\t_type: 'schemacall',\n      \t\t\tschema,\n      \t\t\targs,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c89 = function(schema, args) {\n      \t\treturn {\n      \t\t\t_type: 'funcall',\n      \t\t\tschema,\n      \t\t\targs,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c90 = function(head, tv) {return tv},\n      peg$c91 = function(p) {return p || []},\n      peg$c92 = \"=>\",\n      peg$c93 = peg$literalExpectation(\"=>\", false),\n      peg$c94 = function(params, e) {return e},\n      peg$c95 = function(params, expr) {\n      \t\treturn {\n      \t\t\t_type: 'funexpr',\n      \t\t\tparams,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c96 = function(params, expr) {return {defdollars: [], expr}},\n      peg$c97 = function(params, d) {return d},\n      peg$c98 = function(params, defdollars, expr) {return {defdollars, expr}},\n      peg$c99 = function(params, foo) {\n      \t\treturn {\n      \t\t\t_type: 'schemaexpr',\n      \t\t\tparams,\n      \t\t\tdef$s: foo.defdollars,\n      \t\t\texpr: foo.expr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c100 = function(l) {return l || []},\n      peg$c101 = \"|-\",\n      peg$c102 = peg$literalExpectation(\"|-\", false),\n      peg$c103 = function(left, expr) {return {defdollars: [], expr}},\n      peg$c104 = function(left, d) {return d},\n      peg$c105 = function(left, defdollars, expr) {return {defdollars, expr}},\n      peg$c106 = function(left, foo) {\n      \t\treturn {\n      \t\t\t_type: 'tee',\n      \t\t\tdef$s: foo.defdollars,\n      \t\t\tleft,\n      \t\t\tright: foo.expr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c107 = \"with\",\n      peg$c108 = peg$literalExpectation(\"with\", false),\n      peg$c109 = function(tex, type, varname, varexpr, d) {return d},\n      peg$c110 = function(tex, type, varname, varexpr, defdollars, expr) {\n      \t\treturn {\n      \t\t\t_type: 'with',\n      \t\t\twith: {\n      \t\t\t\t_type: 'defv',\n      \t\t\t\tisParam: false,\n      \t\t\t\tdoc: null,\n      \t\t\t\ttex: tex ? tex[0] : null,\n      \t\t\t\tsealed: false,\n      \t\t\t\ttype,\n      \t\t\t\tname: varname,\n      \t\t\t\texpr: varexpr,\n      \t\t\t\tlocation: location()\n      \t\t\t},\n      \t\t\tdef$s: defdollars,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c111 = function(name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'def$',\n      \t\t\tname,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t};\n      \t},\n      peg$c112 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'type',\n      \t\t\tftype: false,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c113 = function(head, t) {return t},\n      peg$c114 = \"->\",\n      peg$c115 = peg$literalExpectation(\"->\", false),\n      peg$c116 = function(from, to) {\n      \t\treturn {\n      \t\t\t_type: 'type',\n      \t\t\tftype: true,\n      \t\t\tfrom,\n      \t\t\tto,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c117 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: '@',\n      \t\t\tname: name.slice(1),\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c118 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: '$',\n      \t\t\tname: name,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c119 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: 'normal',\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c120 = \"@discouraged\",\n      peg$c121 = peg$literalExpectation(\"@discouraged\", false),\n      peg$c122 = \"@deprecated\",\n      peg$c123 = peg$literalExpectation(\"@deprecated\", false),\n      peg$c124 = /^[a-zA-Z0-9_]/,\n      peg$c125 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c126 = \"$\",\n      peg$c127 = peg$literalExpectation(\"$\", false),\n      peg$c128 = \"\\\"\",\n      peg$c129 = peg$literalExpectation(\"\\\"\", false),\n      peg$c130 = peg$anyExpectation(),\n      peg$c131 = function(a) {return a},\n      peg$c132 = function(b) {\n      \t\treturn b.replace(/\\r\\n|\\r/g, '\\n');\n      \t},\n      peg$c133 = \"//\",\n      peg$c134 = peg$literalExpectation(\"//\", false),\n      peg$c135 = \"/*\",\n      peg$c136 = peg$literalExpectation(\"/*\", false),\n      peg$c137 = \"*/\",\n      peg$c138 = peg$literalExpectation(\"*/\", false),\n      peg$c139 = \"\\r\\n\",\n      peg$c140 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c141 = \"\\r\",\n      peg$c142 = peg$literalExpectation(\"\\r\", false),\n      peg$c143 = \"\\n\",\n      peg$c144 = peg$literalExpectation(\"\\n\", false),\n      peg$c145 = /^[ \\t\\n\\r]/,\n      peg$c146 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$resultsCache = {},\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 0,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseimport();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c0(s4);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseimport();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c0(s4);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseline();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c1(s2, s5);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parseline();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c1(s2, s5);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseline() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 1,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetypedef();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedefv();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedefun();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedefschema();\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseevaluable() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 42 + 2,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseevaluable_internal();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseevaluable_internal() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 3,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetypedef();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedefv();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedefun();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedefschema();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseexpr_internal_3();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseimport() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 4,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseident();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesem();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c6(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetypedef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    var key    = peg$currPos * 42 + 5,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c7) {\n        s2 = peg$c7;\n        peg$currPos += 4;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s7 = peg$c9;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseftype();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s6;\n                      s7 = peg$c11(s1, s4, s9);\n                      s6 = s7;\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesem();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c12(s1, s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefv() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    var key    = peg$currPos * 42 + 6,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parsetex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c13) {\n          s4 = peg$c13;\n          peg$currPos += 6;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseident();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 61) {\n                    s9 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parseobjectexpr();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse_();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parsesem();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c15(s1, s2, s3, s4, s6, s11);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = peg$currPos;\n                    s9 = peg$parsesem();\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c16(s1, s2, s3, s4, s6);\n                    }\n                    s8 = s9;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s1, s2, s3, s4, s6, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefparam() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 7,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsetex();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetype();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefschemaparam() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 8,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsetex();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetype();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s7 = peg$c19;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 64) {\n                    s9 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$currPos;\n                    s11 = [];\n                    if (peg$c23.test(input.charAt(peg$currPos))) {\n                      s12 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s12 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                    }\n                    if (s12 !== peg$FAILED) {\n                      while (s12 !== peg$FAILED) {\n                        s11.push(s12);\n                        if (peg$c23.test(input.charAt(peg$currPos))) {\n                          s12 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                        }\n                      }\n                    } else {\n                      s11 = peg$FAILED;\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s10 = input.substring(s10, peg$currPos);\n                    } else {\n                      s10 = s11;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s5;\n                      s6 = peg$c25(s1, s2, s4, s10);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c26(s1, s2, s4, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefun() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n\n    var key    = peg$currPos * 42 + 9,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parsetex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c13) {\n          s4 = peg$c13;\n          peg$currPos += 6;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseident();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s9 = peg$c27;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$currPos;\n                      s12 = peg$parsedefparam();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parse_();\n                        if (s13 !== peg$FAILED) {\n                          s14 = [];\n                          s15 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s16 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s16 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parse_();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parsedefparam();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$parse_();\n                                if (s19 !== peg$FAILED) {\n                                  peg$savedPos = s15;\n                                  s16 = peg$c31(s1, s2, s3, s4, s6, s12, s18);\n                                  s15 = s16;\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s15;\n                            s15 = peg$FAILED;\n                          }\n                          while (s15 !== peg$FAILED) {\n                            s14.push(s15);\n                            s15 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s16 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s16 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parse_();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parsedefparam();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$parse_();\n                                  if (s19 !== peg$FAILED) {\n                                    peg$savedPos = s15;\n                                    s16 = peg$c31(s1, s2, s3, s4, s6, s12, s18);\n                                    s15 = s16;\n                                  } else {\n                                    peg$currPos = s15;\n                                    s15 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          }\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s11;\n                            s12 = peg$c32(s1, s2, s3, s4, s6, s12, s14);\n                            s11 = s12;\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s11;\n                          s11 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s11;\n                        s11 = peg$FAILED;\n                      }\n                      if (s11 === peg$FAILED) {\n                        s11 = null;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s12 = peg$c33;\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                        }\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parse_();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c35(s1, s2, s3, s4, s6, s11);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                      s10 = peg$c36;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parseobjectexpr();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parse_();\n                          if (s13 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                              s14 = peg$c38;\n                              peg$currPos++;\n                            } else {\n                              s14 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                            }\n                            if (s14 !== peg$FAILED) {\n                              peg$savedPos = s9;\n                              s10 = peg$c40(s1, s2, s3, s4, s6, s8, s12);\n                              s9 = s10;\n                            } else {\n                              peg$currPos = s9;\n                              s9 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = peg$currPos;\n                      s10 = peg$parsesem();\n                      if (s10 !== peg$FAILED) {\n                        peg$savedPos = s9;\n                        s10 = peg$c41(s1, s2, s3, s4, s6, s8);\n                      }\n                      s9 = s10;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c42(s1, s2, s3, s4, s6, s8, s9);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefschema() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n\n    var key    = peg$currPos * 42 + 10,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseannotation();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse__();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c43(s1, s4);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseannotation();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c43(s1, s4);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c44) {\n          s3 = peg$c44;\n          peg$currPos += 5;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c46) {\n            s3 = peg$c46;\n            peg$currPos += 7;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c48) {\n              s3 = peg$c48;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseident();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s8 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$currPos;\n                    s11 = peg$parsedefschemaparam();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parse_();\n                      if (s12 !== peg$FAILED) {\n                        s13 = [];\n                        s14 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s15 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s15 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s15 !== peg$FAILED) {\n                          s16 = peg$parse_();\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parsedefschemaparam();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parse_();\n                              if (s18 !== peg$FAILED) {\n                                peg$savedPos = s14;\n                                s15 = peg$c50(s1, s2, s3, s5, s11, s17);\n                                s14 = s15;\n                              } else {\n                                peg$currPos = s14;\n                                s14 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s14;\n                              s14 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s14;\n                            s14 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s14;\n                          s14 = peg$FAILED;\n                        }\n                        while (s14 !== peg$FAILED) {\n                          s13.push(s14);\n                          s14 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s15 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s15 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s15 !== peg$FAILED) {\n                            s16 = peg$parse_();\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parsedefschemaparam();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parse_();\n                                if (s18 !== peg$FAILED) {\n                                  peg$savedPos = s14;\n                                  s15 = peg$c50(s1, s2, s3, s5, s11, s17);\n                                  s14 = s15;\n                                } else {\n                                  peg$currPos = s14;\n                                  s14 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s14;\n                                s14 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s14;\n                              s14 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s14;\n                            s14 = peg$FAILED;\n                          }\n                        }\n                        if (s13 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c51(s1, s2, s3, s5, s11, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                    if (s10 === peg$FAILED) {\n                      s10 = null;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s11 = peg$c33;\n                        peg$currPos++;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse_();\n                        if (s12 !== peg$FAILED) {\n                          peg$savedPos = s7;\n                          s8 = peg$c52(s1, s2, s3, s5, s10);\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.substr(peg$currPos, 5) === peg$c53) {\n                    s9 = peg$c53;\n                    peg$currPos += 5;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse__();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$currPos;\n                      s12 = peg$parseident();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parse_();\n                        if (s13 !== peg$FAILED) {\n                          s14 = [];\n                          s15 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s16 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s16 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parse_();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parseident();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$parse_();\n                                if (s19 !== peg$FAILED) {\n                                  peg$savedPos = s15;\n                                  s16 = peg$c55(s1, s2, s3, s5, s7, s12, s18);\n                                  s15 = s16;\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s15;\n                            s15 = peg$FAILED;\n                          }\n                          while (s15 !== peg$FAILED) {\n                            s14.push(s15);\n                            s15 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s16 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s16 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parse_();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parseident();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$parse_();\n                                  if (s19 !== peg$FAILED) {\n                                    peg$savedPos = s15;\n                                    s16 = peg$c55(s1, s2, s3, s5, s7, s12, s18);\n                                    s15 = s16;\n                                  } else {\n                                    peg$currPos = s15;\n                                    s15 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          }\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s11;\n                            s12 = peg$c56(s1, s2, s3, s5, s7, s12, s14);\n                            s11 = s12;\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s11;\n                          s11 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s11;\n                        s11 = peg$FAILED;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c57(s1, s2, s3, s5, s7, s11);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                      s9 = peg$c36;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = [];\n                        s12 = peg$currPos;\n                        s13 = peg$parsedefdollar();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parse_();\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s12;\n                            s13 = peg$c58(s1, s2, s3, s5, s7, s8, s13);\n                            s12 = s13;\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                        while (s12 !== peg$FAILED) {\n                          s11.push(s12);\n                          s12 = peg$currPos;\n                          s13 = peg$parsedefdollar();\n                          if (s13 !== peg$FAILED) {\n                            s14 = peg$parse_();\n                            if (s14 !== peg$FAILED) {\n                              peg$savedPos = s12;\n                              s13 = peg$c58(s1, s2, s3, s5, s7, s8, s13);\n                              s12 = s13;\n                            } else {\n                              peg$currPos = s12;\n                              s12 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseexpr_internal_3();\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                  s15 = peg$c38;\n                                  peg$currPos++;\n                                } else {\n                                  s15 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c59(s1, s2, s3, s5, s7, s8, s11, s13);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsereduction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20;\n\n    var key    = peg$currPos * 42 + 11,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseexpr_internal_2();\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s1;\n      s2 = peg$c60(s2);\n    }\n    s1 = s2;\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c61;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_3();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = [];\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s9 = peg$c63;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c64); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parseexpr_internal_3();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c65(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              while (s8 !== peg$FAILED) {\n                s7.push(s8);\n                s8 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s9 = peg$c63;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                }\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parseexpr_internal_3();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parse_();\n                      if (s12 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c65(s5, s11);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c66(s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c67;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c68); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c69(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s5 = peg$c70;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseschemacall();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parsevar();\n              if (s7 === peg$FAILED) {\n                s7 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s8 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parseexpr_internal_3();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s12 = peg$c33;\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                        }\n                        if (s12 !== peg$FAILED) {\n                          peg$savedPos = s7;\n                          s8 = peg$c72(s1, s10);\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = peg$parse_();\n              if (s9 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s10 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parse_();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$currPos;\n                    s13 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 63) {\n                      s14 = peg$c73;\n                      peg$currPos++;\n                    } else {\n                      s14 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                    }\n                    if (s14 !== peg$FAILED) {\n                      peg$savedPos = s13;\n                      s14 = peg$c75(s1, s7);\n                    }\n                    s13 = s14;\n                    if (s13 === peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                    }\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        s15 = [];\n                        s16 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s17 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s17 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s17 !== peg$FAILED) {\n                          s18 = peg$parse_();\n                          if (s18 !== peg$FAILED) {\n                            s19 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 63) {\n                              s20 = peg$c73;\n                              peg$currPos++;\n                            } else {\n                              s20 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                            }\n                            if (s20 !== peg$FAILED) {\n                              peg$savedPos = s19;\n                              s20 = peg$c76(s1, s7, s13);\n                            }\n                            s19 = s20;\n                            if (s19 === peg$FAILED) {\n                              s19 = peg$parseobjectexpr();\n                            }\n                            if (s19 !== peg$FAILED) {\n                              s20 = peg$parse_();\n                              if (s20 !== peg$FAILED) {\n                                peg$savedPos = s16;\n                                s17 = peg$c77(s1, s7, s13, s19);\n                                s16 = s17;\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s16;\n                            s16 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s16;\n                          s16 = peg$FAILED;\n                        }\n                        while (s16 !== peg$FAILED) {\n                          s15.push(s16);\n                          s16 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s17 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s17 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s17 !== peg$FAILED) {\n                            s18 = peg$parse_();\n                            if (s18 !== peg$FAILED) {\n                              s19 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 63) {\n                                s20 = peg$c73;\n                                peg$currPos++;\n                              } else {\n                                s20 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                              }\n                              if (s20 !== peg$FAILED) {\n                                peg$savedPos = s19;\n                                s20 = peg$c76(s1, s7, s13);\n                              }\n                              s19 = s20;\n                              if (s19 === peg$FAILED) {\n                                s19 = peg$parseobjectexpr();\n                              }\n                              if (s19 !== peg$FAILED) {\n                                s20 = peg$parse_();\n                                if (s20 !== peg$FAILED) {\n                                  peg$savedPos = s16;\n                                  s17 = peg$c77(s1, s7, s13, s19);\n                                  s16 = s17;\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s16;\n                            s16 = peg$FAILED;\n                          }\n                        }\n                        if (s15 !== peg$FAILED) {\n                          peg$savedPos = s12;\n                          s13 = peg$c78(s1, s7, s13, s15);\n                          s12 = s13;\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s12;\n                        s12 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s12;\n                      s12 = peg$FAILED;\n                    }\n                    if (s12 === peg$FAILED) {\n                      s12 = null;\n                    }\n                    if (s12 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s13 = peg$c33;\n                        peg$currPos++;\n                      } else {\n                        s13 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                      }\n                      if (s13 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c79(s1, s7, s12);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              if (s8 === peg$FAILED) {\n                s8 = null;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$currPos;\n                s10 = peg$parse__();\n                if (s10 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c80) {\n                    s11 = peg$c80;\n                    peg$currPos += 2;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c81); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse__();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseexpr_internal_2();\n                      if (s13 !== peg$FAILED) {\n                        peg$savedPos = s9;\n                        s10 = peg$c82(s1, s7, s8, s13);\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = null;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c83(s1, s7, s8, s9);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 62) {\n              s5 = peg$c70;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseschemacall();\n                if (s7 === peg$FAILED) {\n                  s7 = peg$parsevar();\n                  if (s7 === peg$FAILED) {\n                    s7 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s8 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parse_();\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parseexpr_internal_3();\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$parse_();\n                          if (s11 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s12 = peg$c33;\n                              peg$currPos++;\n                            } else {\n                              s12 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                            }\n                            if (s12 !== peg$FAILED) {\n                              peg$savedPos = s7;\n                              s8 = peg$c72(s1, s10);\n                              s7 = s8;\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s10 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$currPos;\n                        s13 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 63) {\n                          s14 = peg$c73;\n                          peg$currPos++;\n                        } else {\n                          s14 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                        }\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s13;\n                          s14 = peg$c75(s1, s7);\n                        }\n                        s13 = s14;\n                        if (s13 === peg$FAILED) {\n                          s13 = peg$parseobjectexpr();\n                        }\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parse_();\n                          if (s14 !== peg$FAILED) {\n                            s15 = [];\n                            s16 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s17 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s17 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parse_();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 63) {\n                                  s20 = peg$c73;\n                                  peg$currPos++;\n                                } else {\n                                  s20 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                }\n                                if (s20 !== peg$FAILED) {\n                                  peg$savedPos = s19;\n                                  s20 = peg$c76(s1, s7, s13);\n                                }\n                                s19 = s20;\n                                if (s19 === peg$FAILED) {\n                                  s19 = peg$parseobjectexpr();\n                                }\n                                if (s19 !== peg$FAILED) {\n                                  s20 = peg$parse_();\n                                  if (s20 !== peg$FAILED) {\n                                    peg$savedPos = s16;\n                                    s17 = peg$c77(s1, s7, s13, s19);\n                                    s16 = s17;\n                                  } else {\n                                    peg$currPos = s16;\n                                    s16 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                            while (s16 !== peg$FAILED) {\n                              s15.push(s16);\n                              s16 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 44) {\n                                s17 = peg$c29;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parse_();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$currPos;\n                                  if (input.charCodeAt(peg$currPos) === 63) {\n                                    s20 = peg$c73;\n                                    peg$currPos++;\n                                  } else {\n                                    s20 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                  }\n                                  if (s20 !== peg$FAILED) {\n                                    peg$savedPos = s19;\n                                    s20 = peg$c76(s1, s7, s13);\n                                  }\n                                  s19 = s20;\n                                  if (s19 === peg$FAILED) {\n                                    s19 = peg$parseobjectexpr();\n                                  }\n                                  if (s19 !== peg$FAILED) {\n                                    s20 = peg$parse_();\n                                    if (s20 !== peg$FAILED) {\n                                      peg$savedPos = s16;\n                                      s17 = peg$c77(s1, s7, s13, s19);\n                                      s16 = s17;\n                                    } else {\n                                      peg$currPos = s16;\n                                      s16 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s16;\n                                    s16 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            }\n                            if (s15 !== peg$FAILED) {\n                              peg$savedPos = s12;\n                              s13 = peg$c78(s1, s7, s13, s15);\n                              s12 = s13;\n                            } else {\n                              peg$currPos = s12;\n                              s12 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                        if (s12 === peg$FAILED) {\n                          s12 = null;\n                        }\n                        if (s12 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s13 = peg$c33;\n                            peg$currPos++;\n                          } else {\n                            s13 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                          }\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c79(s1, s7, s12);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parse__();\n                    if (s10 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c80) {\n                        s11 = peg$c80;\n                        peg$currPos += 2;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse__();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parseexpr_internal_2();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s9;\n                            s10 = peg$c82(s1, s7, s8, s13);\n                            s9 = s10;\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s3;\n                      s4 = peg$c83(s1, s7, s8, s9);\n                      s3 = s4;\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c84(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseschemacall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    var key    = peg$currPos * 42 + 12,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsevar();\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexpr_internal_3();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c33;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c3(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s4 = peg$c27;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            s7 = peg$parseobjectexpr();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = [];\n                s10 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s11 = peg$c29;\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    s13 = peg$parseobjectexpr();\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        peg$savedPos = s10;\n                        s11 = peg$c85(s1, s7, s13);\n                        s10 = s11;\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s11 = peg$c29;\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                      if (s13 !== peg$FAILED) {\n                        s14 = peg$parse_();\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c85(s1, s7, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c86(s1, s7, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s7 = peg$c33;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c87(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c88(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsefuncall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    var key    = peg$currPos * 42 + 13,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsevar();\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseobjectexpr();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c33;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c3(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s4 = peg$c27;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            s7 = peg$parseobjectexpr();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = [];\n                s10 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s11 = peg$c29;\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    s13 = peg$parseobjectexpr();\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        peg$savedPos = s10;\n                        s11 = peg$c85(s1, s7, s13);\n                        s10 = s11;\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s11 = peg$c29;\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                      if (s13 !== peg$FAILED) {\n                        s14 = peg$parse_();\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c85(s1, s7, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c86(s1, s7, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s7 = peg$c33;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c87(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c89(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsefunexpr() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 14,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c27;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parsedefparam();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = [];\n            s8 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c29;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                s11 = peg$parsedefparam();\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c90(s5, s11);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s9 = peg$c29;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parsedefparam();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c90(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c66(s5, s7);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c91(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c92) {\n        s2 = peg$c92;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseobjectexpr();\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseobjectexpr();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s9 = peg$c38;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s4;\n                      s5 = peg$c94(s1, s7);\n                      s4 = s5;\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c95(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseschemaexpr() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 15,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c27;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parsedefparam();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = [];\n            s8 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c29;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                s11 = peg$parsedefparam();\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c90(s5, s11);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s9 = peg$c29;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parsedefparam();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c90(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c66(s5, s7);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c91(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c92) {\n        s2 = peg$c92;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_1();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c96(s1, s5);\n          }\n          s4 = s5;\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$parsedefdollar();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c97(s1, s9);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$parsedefdollar();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c97(s1, s9);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseexpr_internal_3();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c38;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s4;\n                          s5 = peg$c98(s1, s7, s9);\n                          s4 = s5;\n                        } else {\n                          peg$currPos = s4;\n                          s4 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c99(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetee() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    var key    = peg$currPos * 42 + 16,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = peg$parseexpr_internal_1();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        s6 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s7 = peg$c29;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$parse_();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parseexpr_internal_1();\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                peg$savedPos = s6;\n                s7 = peg$c65(s3, s9);\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c29;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseexpr_internal_1();\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c65(s3, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c66(s3, s5);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s1;\n      s2 = peg$c100(s2);\n    }\n    s1 = s2;\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c101) {\n        s2 = peg$c101;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_2();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c103(s1, s5);\n          }\n          s4 = s5;\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$parsedefdollar();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c104(s1, s9);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$parsedefdollar();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c104(s1, s9);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseexpr_internal_3();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c38;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s4;\n                          s5 = peg$c105(s1, s7, s9);\n                          s4 = s5;\n                        } else {\n                          peg$currPos = s4;\n                          s4 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c106(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsewith() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22;\n\n    var key    = peg$currPos * 42 + 17,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c107) {\n      s1 = peg$c107;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c108); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = peg$parsetex();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parse__();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetype();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse__();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseident();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parse_();\n                    if (s9 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 61) {\n                        s10 = peg$c9;\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parse_();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseobjectexpr();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parse_();\n                            if (s13 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s14 = peg$c33;\n                                peg$currPos++;\n                              } else {\n                                s14 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parse_();\n                                if (s15 !== peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 123) {\n                                    s16 = peg$c36;\n                                    peg$currPos++;\n                                  } else {\n                                    s16 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                                  }\n                                  if (s16 !== peg$FAILED) {\n                                    s17 = peg$parse_();\n                                    if (s17 !== peg$FAILED) {\n                                      s18 = [];\n                                      s19 = peg$currPos;\n                                      s20 = peg$parsedefdollar();\n                                      if (s20 !== peg$FAILED) {\n                                        s21 = peg$parse_();\n                                        if (s21 !== peg$FAILED) {\n                                          peg$savedPos = s19;\n                                          s20 = peg$c109(s5, s6, s8, s12, s20);\n                                          s19 = s20;\n                                        } else {\n                                          peg$currPos = s19;\n                                          s19 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s19;\n                                        s19 = peg$FAILED;\n                                      }\n                                      while (s19 !== peg$FAILED) {\n                                        s18.push(s19);\n                                        s19 = peg$currPos;\n                                        s20 = peg$parsedefdollar();\n                                        if (s20 !== peg$FAILED) {\n                                          s21 = peg$parse_();\n                                          if (s21 !== peg$FAILED) {\n                                            peg$savedPos = s19;\n                                            s20 = peg$c109(s5, s6, s8, s12, s20);\n                                            s19 = s20;\n                                          } else {\n                                            peg$currPos = s19;\n                                            s19 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s19;\n                                          s19 = peg$FAILED;\n                                        }\n                                      }\n                                      if (s18 !== peg$FAILED) {\n                                        s19 = peg$parse_();\n                                        if (s19 !== peg$FAILED) {\n                                          s20 = peg$parseexpr_internal_3();\n                                          if (s20 !== peg$FAILED) {\n                                            s21 = peg$parse_();\n                                            if (s21 !== peg$FAILED) {\n                                              if (input.charCodeAt(peg$currPos) === 125) {\n                                                s22 = peg$c38;\n                                                peg$currPos++;\n                                              } else {\n                                                s22 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                                              }\n                                              if (s22 !== peg$FAILED) {\n                                                peg$savedPos = s0;\n                                                s1 = peg$c110(s5, s6, s8, s12, s18, s20);\n                                                s0 = s1;\n                                              } else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_3() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 18,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsereduction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseexpr_internal_2();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_2() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 19,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetee();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseexpr_internal_1();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_1() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 20,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseschemacall();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsevar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseschemaexpr();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsewith();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s1 = peg$c27;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseexpr_internal_3();\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parse_();\n                  if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s5 = peg$c33;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                    }\n                    if (s5 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c3(s3);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseobjectexpr() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 21,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsefuncall();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefunexpr();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsevar();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s1 = peg$c27;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseobjectexpr();\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s5 = peg$c33;\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c3(s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefdollar() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var key    = peg$currPos * 42 + 22,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsedollar_ident();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpr_internal_3();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesem();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c111(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetype() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 23,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsestype();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseftype();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsestype() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 24,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c112(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseftype() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    var key    = peg$currPos * 42 + 25,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c61;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parsetype();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$currPos;\n          s7 = peg$parse_();\n          if (s7 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s8 = peg$c29;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parse_();\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parsetype();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c113(s4, s10);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$currPos;\n            s7 = peg$parse_();\n            if (s7 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s8 = peg$c29;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parse_();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsetype();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s6;\n                    s7 = peg$c113(s4, s10);\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c66(s4, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c114) {\n              s5 = peg$c114;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsetype();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c67;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c116(s3, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsevar() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 26,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseat_var();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedollar_var();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseplain_var();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseat_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 27,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseat_ident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c117(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedollar_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 28,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsedollar_ident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c118(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseplain_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 29,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c119(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsekeyword() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 30,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 2) === peg$c80) {\n      s0 = peg$c80;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c44) {\n        s0 = peg$c44;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c4) {\n          s0 = peg$c4;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c48) {\n            s0 = peg$c48;\n            peg$currPos += 6;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c13) {\n              s0 = peg$c13;\n              peg$currPos += 6;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c46) {\n                s0 = peg$c46;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c7) {\n                  s0 = peg$c7;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c53) {\n                    s0 = peg$c53;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 4) === peg$c107) {\n                      s0 = peg$c107;\n                      peg$currPos += 4;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c108); }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseannotation() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 31,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 12) === peg$c120) {\n      s0 = peg$c120;\n      peg$currPos += 12;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c121); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 11) === peg$c122) {\n        s0 = peg$c122;\n        peg$currPos += 11;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c123); }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseident() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 32,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    s3 = peg$currPos;\n    s4 = peg$parsekeyword();\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s6 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseat_ident() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 33,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s2 = peg$c21;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedollar_ident() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 34,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c126;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedocumentation() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 35,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c128;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c129); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$currPos;\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s6 = peg$c128;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c129); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$c131(s6);\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s6 = peg$c128;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c129); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c131(s6);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c128;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c129); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c132(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetex() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 36,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c126;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$currPos;\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s6 = peg$c126;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c127); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$c131(s6);\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s6 = peg$c126;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c131(s6);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s3 = peg$c126;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c132(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 37,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c133) {\n      s1 = peg$c133;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parsenewline();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parsenewline();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c135) {\n        s1 = peg$c135;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c136); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c137) {\n          s5 = peg$c137;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c137) {\n            s5 = peg$c137;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c138); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c130); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c137) {\n            s3 = peg$c137;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c138); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 38,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 2) === peg$c139) {\n      s0 = peg$c139;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c140); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 13) {\n        s0 = peg$c141;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c142); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s0 = peg$c143;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c144); }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 39,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c145.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c146); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsecomment();\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c145.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c146); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsecomment();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 40,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c145.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c146); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsecomment();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c145.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c146); }\n        }\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsecomment();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsesem() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 41,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s0 = peg$c63;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { evaluable: peg$parseevaluable },\n      peg$startRuleFunction  = peg$parseevaluable,\n\n      peg$c0 = function(i) {return i},\n      peg$c1 = function(imports, a) {return a},\n      peg$c2 = function(imports, lines) {return imports.concat(lines)},\n      peg$c3 = function(e) {return e},\n      peg$c4 = \"import\",\n      peg$c5 = peg$literalExpectation(\"import\", false),\n      peg$c6 = function(filename) {\n      \t\treturn {\n      \t\t\t_type: 'import',\n      \t\t\tfilename,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c7 = \"type\",\n      peg$c8 = peg$literalExpectation(\"type\", false),\n      peg$c9 = \"=\",\n      peg$c10 = peg$literalExpectation(\"=\", false),\n      peg$c11 = function(doc, name, o) {return o},\n      peg$c12 = function(doc, name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'typedef',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\texpr,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c13 = \"sealed\",\n      peg$c14 = peg$literalExpectation(\"sealed\", false),\n      peg$c15 = function(doc, tex, sealed, type, name, expr) {return expr},\n      peg$c16 = function(doc, tex, sealed, type, name) {return null},\n      peg$c17 = function(doc, tex, sealed, type, name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: false,\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\tsealed: !!sealed,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c18 = function(tex, type, name) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: true,\n      \t\t\tdoc: null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c19 = \":\",\n      peg$c20 = peg$literalExpectation(\":\", false),\n      peg$c21 = \"@\",\n      peg$c22 = peg$literalExpectation(\"@\", false),\n      peg$c23 = /^[a-z0-9_]/,\n      peg$c24 = peg$classExpectation([[\"a\", \"z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c25 = function(tex, type, name, g) {return g},\n      peg$c26 = function(tex, type, name, selector) {\n      \t\treturn {\n      \t\t\t_type: 'defv',\n      \t\t\tisParam: true,\n      \t\t\tdoc: null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\ttype,\n      \t\t\tname,\n      \t\t\tselector,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c27 = \"(\",\n      peg$c28 = peg$literalExpectation(\"(\", false),\n      peg$c29 = \",\",\n      peg$c30 = peg$literalExpectation(\",\", false),\n      peg$c31 = function(doc, tex, sealed, rettype, name, head, tv) {return tv},\n      peg$c32 = function(doc, tex, sealed, rettype, name, head, tail) {return [head].concat(tail)},\n      peg$c33 = \")\",\n      peg$c34 = peg$literalExpectation(\")\", false),\n      peg$c35 = function(doc, tex, sealed, rettype, name, p) {return p || []},\n      peg$c36 = \"{\",\n      peg$c37 = peg$literalExpectation(\"{\", false),\n      peg$c38 = \"}\",\n      peg$c39 = peg$literalExpectation(\"}\", false),\n      peg$c40 = function(doc, tex, sealed, rettype, name, params, expr) {return expr},\n      peg$c41 = function(doc, tex, sealed, rettype, name, params) {return null},\n      peg$c42 = function(doc, tex, sealed, rettype, name, params, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defun',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\ttex: tex ? tex[0] : null,\n      \t\t\tsealed: !!sealed,\n      \t\t\trettype,\n      \t\t\tname,\n      \t\t\tparams,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c43 = function(doc, a) {return a},\n      peg$c44 = \"axiom\",\n      peg$c45 = peg$literalExpectation(\"axiom\", false),\n      peg$c46 = \"theorem\",\n      peg$c47 = peg$literalExpectation(\"theorem\", false),\n      peg$c48 = \"schema\",\n      peg$c49 = peg$literalExpectation(\"schema\", false),\n      peg$c50 = function(doc, annotations, schemaType, name, head, tv) {return tv},\n      peg$c51 = function(doc, annotations, schemaType, name, head, tail) {return [head].concat(tail)},\n      peg$c52 = function(doc, annotations, schemaType, name, p) {return p || []},\n      peg$c53 = \"using\",\n      peg$c54 = peg$literalExpectation(\"using\", false),\n      peg$c55 = function(doc, annotations, schemaType, name, params, head, n) {return n},\n      peg$c56 = function(doc, annotations, schemaType, name, params, head, tail) {return [head].concat(tail)},\n      peg$c57 = function(doc, annotations, schemaType, name, params, x) {return x},\n      peg$c58 = function(doc, annotations, schemaType, name, params, using, d) {return d},\n      peg$c59 = function(doc, annotations, schemaType, name, params, using, defdollars, expr) {\n      \t\treturn {\n      \t\t\t_type: 'defschema',\n      \t\t\tdoc: doc ? doc[0] : null,\n      \t\t\tannotations,\n      \t\t\tschemaType,\n      \t\t\tname,\n      \t\t\tparams,\n      \t\t\tusing: using || [],\n      \t\t\tdef$s: defdollars,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c60 = function(a) {return [a]},\n      peg$c61 = \"[\",\n      peg$c62 = peg$literalExpectation(\"[\", false),\n      peg$c63 = \";\",\n      peg$c64 = peg$literalExpectation(\";\", false),\n      peg$c65 = function(head, e) {return e},\n      peg$c66 = function(head, tail) {return [head].concat(tail)},\n      peg$c67 = \"]\",\n      peg$c68 = peg$literalExpectation(\"]\", false),\n      peg$c69 = function(b) {return b || []},\n      peg$c70 = \">\",\n      peg$c71 = peg$literalExpectation(\">\", false),\n      peg$c72 = function(antecedents, e) {return e},\n      peg$c73 = \"?\",\n      peg$c74 = peg$literalExpectation(\"?\", false),\n      peg$c75 = function(antecedents, subject) {return null},\n      peg$c76 = function(antecedents, subject, head) {return null},\n      peg$c77 = function(antecedents, subject, head, e) {return e},\n      peg$c78 = function(antecedents, subject, head, tail) {return [head].concat(tail)},\n      peg$c79 = function(antecedents, subject, a) {return a || []},\n      peg$c80 = \"as\",\n      peg$c81 = peg$literalExpectation(\"as\", false),\n      peg$c82 = function(antecedents, subject, args, m) {return m},\n      peg$c83 = function(antecedents, subject, args, as_) {return {subject, args, as_: as_ || null};},\n      peg$c84 = function(antecedents, right) {\n      \t\tvar ret = {\n      \t\t\t_type: 'reduction',\n      \t\t\tsubject: right[0].subject,\n      \t\t\targs: right[0].args,\n      \t\t\tantecedents,\n      \t\t\tas: right[0].as_,\n      \t\t\tlocation: location()\n      \t\t};\n\n      \t\tfor (var i = 1; i < right.length; i++) {\n      \t\t\tret = {\n      \t\t\t\t_type: 'reduction',\n      \t\t\t\tsubject: right[i].subject,\n      \t\t\t\targs: right[i].args,\n      \t\t\t\tantecedents: [ret],\n      \t\t\t\tas: right[i].as_,\n      \t\t\t\tlocation: location()\n      \t\t\t}\n      \t\t}\n      \t\t\n      \t\treturn ret;\n      \t},\n      peg$c85 = function(schema, head, e) {return e},\n      peg$c86 = function(schema, head, tail) {return [head].concat(tail)},\n      peg$c87 = function(schema, a) {return a || []},\n      peg$c88 = function(schema, args) {\n      \t\treturn {\n      \t\t\t_type: 'schemacall',\n      \t\t\tschema,\n      \t\t\targs,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c89 = function(schema, args) {\n      \t\treturn {\n      \t\t\t_type: 'funcall',\n      \t\t\tschema,\n      \t\t\targs,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c90 = function(head, tv) {return tv},\n      peg$c91 = function(p) {return p || []},\n      peg$c92 = \"=>\",\n      peg$c93 = peg$literalExpectation(\"=>\", false),\n      peg$c94 = function(params, e) {return e},\n      peg$c95 = function(params, expr) {\n      \t\treturn {\n      \t\t\t_type: 'funexpr',\n      \t\t\tparams,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c96 = function(params, expr) {return {defdollars: [], expr}},\n      peg$c97 = function(params, d) {return d},\n      peg$c98 = function(params, defdollars, expr) {return {defdollars, expr}},\n      peg$c99 = function(params, foo) {\n      \t\treturn {\n      \t\t\t_type: 'schemaexpr',\n      \t\t\tparams,\n      \t\t\tdef$s: foo.defdollars,\n      \t\t\texpr: foo.expr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c100 = function(l) {return l || []},\n      peg$c101 = \"|-\",\n      peg$c102 = peg$literalExpectation(\"|-\", false),\n      peg$c103 = function(left, expr) {return {defdollars: [], expr}},\n      peg$c104 = function(left, d) {return d},\n      peg$c105 = function(left, defdollars, expr) {return {defdollars, expr}},\n      peg$c106 = function(left, foo) {\n      \t\treturn {\n      \t\t\t_type: 'tee',\n      \t\t\tdef$s: foo.defdollars,\n      \t\t\tleft,\n      \t\t\tright: foo.expr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c107 = \"with\",\n      peg$c108 = peg$literalExpectation(\"with\", false),\n      peg$c109 = function(tex, type, varname, varexpr, d) {return d},\n      peg$c110 = function(tex, type, varname, varexpr, defdollars, expr) {\n      \t\treturn {\n      \t\t\t_type: 'with',\n      \t\t\twith: {\n      \t\t\t\t_type: 'defv',\n      \t\t\t\tisParam: false,\n      \t\t\t\tdoc: null,\n      \t\t\t\ttex: tex ? tex[0] : null,\n      \t\t\t\tsealed: false,\n      \t\t\t\ttype,\n      \t\t\t\tname: varname,\n      \t\t\t\texpr: varexpr,\n      \t\t\t\tlocation: location()\n      \t\t\t},\n      \t\t\tdef$s: defdollars,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c111 = function(name, expr) {\n      \t\treturn {\n      \t\t\t_type: 'def$',\n      \t\t\tname,\n      \t\t\texpr,\n      \t\t\tlocation: location()\n      \t\t};\n      \t},\n      peg$c112 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'type',\n      \t\t\tftype: false,\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c113 = function(head, t) {return t},\n      peg$c114 = \"->\",\n      peg$c115 = peg$literalExpectation(\"->\", false),\n      peg$c116 = function(from, to) {\n      \t\treturn {\n      \t\t\t_type: 'type',\n      \t\t\tftype: true,\n      \t\t\tfrom,\n      \t\t\tto,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c117 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: '@',\n      \t\t\tname: name.slice(1),\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c118 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: '$',\n      \t\t\tname: name,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c119 = function(name) {\n      \t\treturn {\n      \t\t\t_type: 'var',\n      \t\t\ttype: 'normal',\n      \t\t\tname,\n      \t\t\tlocation: location()\n      \t\t}\n      \t},\n      peg$c120 = \"@discouraged\",\n      peg$c121 = peg$literalExpectation(\"@discouraged\", false),\n      peg$c122 = \"@deprecated\",\n      peg$c123 = peg$literalExpectation(\"@deprecated\", false),\n      peg$c124 = /^[a-zA-Z0-9_]/,\n      peg$c125 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c126 = \"$\",\n      peg$c127 = peg$literalExpectation(\"$\", false),\n      peg$c128 = \"\\\"\",\n      peg$c129 = peg$literalExpectation(\"\\\"\", false),\n      peg$c130 = peg$anyExpectation(),\n      peg$c131 = function(a) {return a},\n      peg$c132 = function(b) {\n      \t\treturn b.replace(/\\r\\n|\\r/g, '\\n');\n      \t},\n      peg$c133 = \"//\",\n      peg$c134 = peg$literalExpectation(\"//\", false),\n      peg$c135 = \"/*\",\n      peg$c136 = peg$literalExpectation(\"/*\", false),\n      peg$c137 = \"*/\",\n      peg$c138 = peg$literalExpectation(\"*/\", false),\n      peg$c139 = \"\\r\\n\",\n      peg$c140 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c141 = \"\\r\",\n      peg$c142 = peg$literalExpectation(\"\\r\", false),\n      peg$c143 = \"\\n\",\n      peg$c144 = peg$literalExpectation(\"\\n\", false),\n      peg$c145 = /^[ \\t\\n\\r]/,\n      peg$c146 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$resultsCache = {},\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 0,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseimport();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c0(s4);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseimport();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c0(s4);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parseline();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c1(s2, s5);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parseline();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c1(s2, s5);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseline() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 1,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetypedef();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedefv();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedefun();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedefschema();\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseevaluable() {\n    var s0, s1, s2, s3;\n\n    var key    = peg$currPos * 42 + 2,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseevaluable_internal();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseevaluable_internal() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 3,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetypedef();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedefv();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedefun();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsedefschema();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseexpr_internal_3();\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseimport() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 4,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse__();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseident();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesem();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c6(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetypedef() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    var key    = peg$currPos * 42 + 5,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c7) {\n        s2 = peg$c7;\n        peg$currPos += 4;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s7 = peg$c9;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c10); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parseftype();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s6;\n                      s7 = peg$c11(s1, s4, s9);\n                      s6 = s7;\n                    } else {\n                      peg$currPos = s6;\n                      s6 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesem();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c12(s1, s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefv() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    var key    = peg$currPos * 42 + 6,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parsetex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c13) {\n          s4 = peg$c13;\n          peg$currPos += 6;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseident();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 61) {\n                    s9 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parseobjectexpr();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse_();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parsesem();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c15(s1, s2, s3, s4, s6, s11);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = peg$currPos;\n                    s9 = peg$parsesem();\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c16(s1, s2, s3, s4, s6);\n                    }\n                    s8 = s9;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s1, s2, s3, s4, s6, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefparam() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 7,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsetex();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetype();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefschemaparam() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 8,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsetex();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetype();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse__();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseident();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s7 = peg$c19;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parse_();\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 64) {\n                    s9 = peg$c21;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c22); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$currPos;\n                    s11 = [];\n                    if (peg$c23.test(input.charAt(peg$currPos))) {\n                      s12 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s12 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                    }\n                    if (s12 !== peg$FAILED) {\n                      while (s12 !== peg$FAILED) {\n                        s11.push(s12);\n                        if (peg$c23.test(input.charAt(peg$currPos))) {\n                          s12 = input.charAt(peg$currPos);\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                        }\n                      }\n                    } else {\n                      s11 = peg$FAILED;\n                    }\n                    if (s11 !== peg$FAILED) {\n                      s10 = input.substring(s10, peg$currPos);\n                    } else {\n                      s10 = s11;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s5;\n                      s6 = peg$c25(s1, s2, s4, s10);\n                      s5 = s6;\n                    } else {\n                      peg$currPos = s5;\n                      s5 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c26(s1, s2, s4, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefun() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n\n    var key    = peg$currPos * 42 + 9,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parsetex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse__();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c13) {\n          s4 = peg$c13;\n          peg$currPos += 6;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c14); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetype();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse__();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseident();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 40) {\n                    s9 = peg$c27;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$currPos;\n                      s12 = peg$parsedefparam();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parse_();\n                        if (s13 !== peg$FAILED) {\n                          s14 = [];\n                          s15 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s16 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s16 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parse_();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parsedefparam();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$parse_();\n                                if (s19 !== peg$FAILED) {\n                                  peg$savedPos = s15;\n                                  s16 = peg$c31(s1, s2, s3, s4, s6, s12, s18);\n                                  s15 = s16;\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s15;\n                            s15 = peg$FAILED;\n                          }\n                          while (s15 !== peg$FAILED) {\n                            s14.push(s15);\n                            s15 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s16 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s16 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parse_();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parsedefparam();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$parse_();\n                                  if (s19 !== peg$FAILED) {\n                                    peg$savedPos = s15;\n                                    s16 = peg$c31(s1, s2, s3, s4, s6, s12, s18);\n                                    s15 = s16;\n                                  } else {\n                                    peg$currPos = s15;\n                                    s15 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          }\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s11;\n                            s12 = peg$c32(s1, s2, s3, s4, s6, s12, s14);\n                            s11 = s12;\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s11;\n                          s11 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s11;\n                        s11 = peg$FAILED;\n                      }\n                      if (s11 === peg$FAILED) {\n                        s11 = null;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s12 = peg$c33;\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                        }\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parse_();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c35(s1, s2, s3, s4, s6, s11);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                      s10 = peg$c36;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parseobjectexpr();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parse_();\n                          if (s13 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                              s14 = peg$c38;\n                              peg$currPos++;\n                            } else {\n                              s14 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                            }\n                            if (s14 !== peg$FAILED) {\n                              peg$savedPos = s9;\n                              s10 = peg$c40(s1, s2, s3, s4, s6, s8, s12);\n                              s9 = s10;\n                            } else {\n                              peg$currPos = s9;\n                              s9 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = peg$currPos;\n                      s10 = peg$parsesem();\n                      if (s10 !== peg$FAILED) {\n                        peg$savedPos = s9;\n                        s10 = peg$c41(s1, s2, s3, s4, s6, s8);\n                      }\n                      s9 = s10;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c42(s1, s2, s3, s4, s6, s8, s9);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefschema() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19;\n\n    var key    = peg$currPos * 42 + 10,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsedocumentation();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse__();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseannotation();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse__();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c43(s1, s4);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseannotation();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse__();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c43(s1, s4);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 5) === peg$c44) {\n          s3 = peg$c44;\n          peg$currPos += 5;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        if (s3 === peg$FAILED) {\n          if (input.substr(peg$currPos, 7) === peg$c46) {\n            s3 = peg$c46;\n            peg$currPos += 7;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\n          }\n          if (s3 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c48) {\n              s3 = peg$c48;\n              peg$currPos += 6;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n            }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse__();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseident();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s8 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$currPos;\n                    s11 = peg$parsedefschemaparam();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parse_();\n                      if (s12 !== peg$FAILED) {\n                        s13 = [];\n                        s14 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s15 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s15 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s15 !== peg$FAILED) {\n                          s16 = peg$parse_();\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parsedefschemaparam();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parse_();\n                              if (s18 !== peg$FAILED) {\n                                peg$savedPos = s14;\n                                s15 = peg$c50(s1, s2, s3, s5, s11, s17);\n                                s14 = s15;\n                              } else {\n                                peg$currPos = s14;\n                                s14 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s14;\n                              s14 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s14;\n                            s14 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s14;\n                          s14 = peg$FAILED;\n                        }\n                        while (s14 !== peg$FAILED) {\n                          s13.push(s14);\n                          s14 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s15 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s15 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s15 !== peg$FAILED) {\n                            s16 = peg$parse_();\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parsedefschemaparam();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parse_();\n                                if (s18 !== peg$FAILED) {\n                                  peg$savedPos = s14;\n                                  s15 = peg$c50(s1, s2, s3, s5, s11, s17);\n                                  s14 = s15;\n                                } else {\n                                  peg$currPos = s14;\n                                  s14 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s14;\n                                s14 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s14;\n                              s14 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s14;\n                            s14 = peg$FAILED;\n                          }\n                        }\n                        if (s13 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c51(s1, s2, s3, s5, s11, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                    if (s10 === peg$FAILED) {\n                      s10 = null;\n                    }\n                    if (s10 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s11 = peg$c33;\n                        peg$currPos++;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse_();\n                        if (s12 !== peg$FAILED) {\n                          peg$savedPos = s7;\n                          s8 = peg$c52(s1, s2, s3, s5, s10);\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  if (input.substr(peg$currPos, 5) === peg$c53) {\n                    s9 = peg$c53;\n                    peg$currPos += 5;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse__();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$currPos;\n                      s12 = peg$parseident();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parse_();\n                        if (s13 !== peg$FAILED) {\n                          s14 = [];\n                          s15 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s16 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s16 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s16 !== peg$FAILED) {\n                            s17 = peg$parse_();\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parseident();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$parse_();\n                                if (s19 !== peg$FAILED) {\n                                  peg$savedPos = s15;\n                                  s16 = peg$c55(s1, s2, s3, s5, s7, s12, s18);\n                                  s15 = s16;\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s15;\n                            s15 = peg$FAILED;\n                          }\n                          while (s15 !== peg$FAILED) {\n                            s14.push(s15);\n                            s15 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s16 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s16 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s16 !== peg$FAILED) {\n                              s17 = peg$parse_();\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parseident();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$parse_();\n                                  if (s19 !== peg$FAILED) {\n                                    peg$savedPos = s15;\n                                    s16 = peg$c55(s1, s2, s3, s5, s7, s12, s18);\n                                    s15 = s16;\n                                  } else {\n                                    peg$currPos = s15;\n                                    s15 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s15;\n                                  s15 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s15;\n                                s15 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s15;\n                              s15 = peg$FAILED;\n                            }\n                          }\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s11;\n                            s12 = peg$c56(s1, s2, s3, s5, s7, s12, s14);\n                            s11 = s12;\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s11;\n                          s11 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s11;\n                        s11 = peg$FAILED;\n                      }\n                      if (s11 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c57(s1, s2, s3, s5, s7, s11);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                      s9 = peg$c36;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = [];\n                        s12 = peg$currPos;\n                        s13 = peg$parsedefdollar();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parse_();\n                          if (s14 !== peg$FAILED) {\n                            peg$savedPos = s12;\n                            s13 = peg$c58(s1, s2, s3, s5, s7, s8, s13);\n                            s12 = s13;\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                        while (s12 !== peg$FAILED) {\n                          s11.push(s12);\n                          s12 = peg$currPos;\n                          s13 = peg$parsedefdollar();\n                          if (s13 !== peg$FAILED) {\n                            s14 = peg$parse_();\n                            if (s14 !== peg$FAILED) {\n                              peg$savedPos = s12;\n                              s13 = peg$c58(s1, s2, s3, s5, s7, s8, s13);\n                              s12 = s13;\n                            } else {\n                              peg$currPos = s12;\n                              s12 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseexpr_internal_3();\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                  s15 = peg$c38;\n                                  peg$currPos++;\n                                } else {\n                                  s15 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c59(s1, s2, s3, s5, s7, s8, s11, s13);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsereduction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20;\n\n    var key    = peg$currPos * 42 + 11,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseexpr_internal_2();\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s1;\n      s2 = peg$c60(s2);\n    }\n    s1 = s2;\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s2 = peg$c61;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_3();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = [];\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 59) {\n                s9 = peg$c63;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c64); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parseexpr_internal_3();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c65(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              while (s8 !== peg$FAILED) {\n                s7.push(s8);\n                s8 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 59) {\n                  s9 = peg$c63;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                }\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parseexpr_internal_3();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parse_();\n                      if (s12 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c65(s5, s11);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c66(s5, s7);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c67;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c68); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c69(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s5 = peg$c70;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c71); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseschemacall();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parsevar();\n              if (s7 === peg$FAILED) {\n                s7 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s8 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parseexpr_internal_3();\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 41) {\n                          s12 = peg$c33;\n                          peg$currPos++;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                        }\n                        if (s12 !== peg$FAILED) {\n                          peg$savedPos = s7;\n                          s8 = peg$c72(s1, s10);\n                          s7 = s8;\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$currPos;\n              s9 = peg$parse_();\n              if (s9 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s10 = peg$c27;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parse_();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$currPos;\n                    s13 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 63) {\n                      s14 = peg$c73;\n                      peg$currPos++;\n                    } else {\n                      s14 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                    }\n                    if (s14 !== peg$FAILED) {\n                      peg$savedPos = s13;\n                      s14 = peg$c75(s1, s7);\n                    }\n                    s13 = s14;\n                    if (s13 === peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                    }\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        s15 = [];\n                        s16 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                          s17 = peg$c29;\n                          peg$currPos++;\n                        } else {\n                          s17 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                        }\n                        if (s17 !== peg$FAILED) {\n                          s18 = peg$parse_();\n                          if (s18 !== peg$FAILED) {\n                            s19 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 63) {\n                              s20 = peg$c73;\n                              peg$currPos++;\n                            } else {\n                              s20 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                            }\n                            if (s20 !== peg$FAILED) {\n                              peg$savedPos = s19;\n                              s20 = peg$c76(s1, s7, s13);\n                            }\n                            s19 = s20;\n                            if (s19 === peg$FAILED) {\n                              s19 = peg$parseobjectexpr();\n                            }\n                            if (s19 !== peg$FAILED) {\n                              s20 = peg$parse_();\n                              if (s20 !== peg$FAILED) {\n                                peg$savedPos = s16;\n                                s17 = peg$c77(s1, s7, s13, s19);\n                                s16 = s17;\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s16;\n                            s16 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s16;\n                          s16 = peg$FAILED;\n                        }\n                        while (s16 !== peg$FAILED) {\n                          s15.push(s16);\n                          s16 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 44) {\n                            s17 = peg$c29;\n                            peg$currPos++;\n                          } else {\n                            s17 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                          }\n                          if (s17 !== peg$FAILED) {\n                            s18 = peg$parse_();\n                            if (s18 !== peg$FAILED) {\n                              s19 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 63) {\n                                s20 = peg$c73;\n                                peg$currPos++;\n                              } else {\n                                s20 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                              }\n                              if (s20 !== peg$FAILED) {\n                                peg$savedPos = s19;\n                                s20 = peg$c76(s1, s7, s13);\n                              }\n                              s19 = s20;\n                              if (s19 === peg$FAILED) {\n                                s19 = peg$parseobjectexpr();\n                              }\n                              if (s19 !== peg$FAILED) {\n                                s20 = peg$parse_();\n                                if (s20 !== peg$FAILED) {\n                                  peg$savedPos = s16;\n                                  s17 = peg$c77(s1, s7, s13, s19);\n                                  s16 = s17;\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s16;\n                            s16 = peg$FAILED;\n                          }\n                        }\n                        if (s15 !== peg$FAILED) {\n                          peg$savedPos = s12;\n                          s13 = peg$c78(s1, s7, s13, s15);\n                          s12 = s13;\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s12;\n                        s12 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s12;\n                      s12 = peg$FAILED;\n                    }\n                    if (s12 === peg$FAILED) {\n                      s12 = null;\n                    }\n                    if (s12 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s13 = peg$c33;\n                        peg$currPos++;\n                      } else {\n                        s13 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                      }\n                      if (s13 !== peg$FAILED) {\n                        peg$savedPos = s8;\n                        s9 = peg$c79(s1, s7, s12);\n                        s8 = s9;\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              if (s8 === peg$FAILED) {\n                s8 = null;\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$currPos;\n                s10 = peg$parse__();\n                if (s10 !== peg$FAILED) {\n                  if (input.substr(peg$currPos, 2) === peg$c80) {\n                    s11 = peg$c80;\n                    peg$currPos += 2;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c81); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse__();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseexpr_internal_2();\n                      if (s13 !== peg$FAILED) {\n                        peg$savedPos = s9;\n                        s10 = peg$c82(s1, s7, s8, s13);\n                        s9 = s10;\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s9;\n                    s9 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s9;\n                  s9 = peg$FAILED;\n                }\n                if (s9 === peg$FAILED) {\n                  s9 = null;\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c83(s1, s7, s8, s9);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 62) {\n              s5 = peg$c70;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c71); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseschemacall();\n                if (s7 === peg$FAILED) {\n                  s7 = peg$parsevar();\n                  if (s7 === peg$FAILED) {\n                    s7 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s8 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parse_();\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parseexpr_internal_3();\n                        if (s10 !== peg$FAILED) {\n                          s11 = peg$parse_();\n                          if (s11 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 41) {\n                              s12 = peg$c33;\n                              peg$currPos++;\n                            } else {\n                              s12 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                            }\n                            if (s12 !== peg$FAILED) {\n                              peg$savedPos = s7;\n                              s8 = peg$c72(s1, s10);\n                              s7 = s8;\n                            } else {\n                              peg$currPos = s7;\n                              s7 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s7;\n                            s7 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s7;\n                          s7 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s7;\n                        s7 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s7;\n                      s7 = peg$FAILED;\n                    }\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$currPos;\n                  s9 = peg$parse_();\n                  if (s9 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 40) {\n                      s10 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$currPos;\n                        s13 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 63) {\n                          s14 = peg$c73;\n                          peg$currPos++;\n                        } else {\n                          s14 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                        }\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s13;\n                          s14 = peg$c75(s1, s7);\n                        }\n                        s13 = s14;\n                        if (s13 === peg$FAILED) {\n                          s13 = peg$parseobjectexpr();\n                        }\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parse_();\n                          if (s14 !== peg$FAILED) {\n                            s15 = [];\n                            s16 = peg$currPos;\n                            if (input.charCodeAt(peg$currPos) === 44) {\n                              s17 = peg$c29;\n                              peg$currPos++;\n                            } else {\n                              s17 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                            }\n                            if (s17 !== peg$FAILED) {\n                              s18 = peg$parse_();\n                              if (s18 !== peg$FAILED) {\n                                s19 = peg$currPos;\n                                if (input.charCodeAt(peg$currPos) === 63) {\n                                  s20 = peg$c73;\n                                  peg$currPos++;\n                                } else {\n                                  s20 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                }\n                                if (s20 !== peg$FAILED) {\n                                  peg$savedPos = s19;\n                                  s20 = peg$c76(s1, s7, s13);\n                                }\n                                s19 = s20;\n                                if (s19 === peg$FAILED) {\n                                  s19 = peg$parseobjectexpr();\n                                }\n                                if (s19 !== peg$FAILED) {\n                                  s20 = peg$parse_();\n                                  if (s20 !== peg$FAILED) {\n                                    peg$savedPos = s16;\n                                    s17 = peg$c77(s1, s7, s13, s19);\n                                    s16 = s17;\n                                  } else {\n                                    peg$currPos = s16;\n                                    s16 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s16;\n                              s16 = peg$FAILED;\n                            }\n                            while (s16 !== peg$FAILED) {\n                              s15.push(s16);\n                              s16 = peg$currPos;\n                              if (input.charCodeAt(peg$currPos) === 44) {\n                                s17 = peg$c29;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                s18 = peg$parse_();\n                                if (s18 !== peg$FAILED) {\n                                  s19 = peg$currPos;\n                                  if (input.charCodeAt(peg$currPos) === 63) {\n                                    s20 = peg$c73;\n                                    peg$currPos++;\n                                  } else {\n                                    s20 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                  }\n                                  if (s20 !== peg$FAILED) {\n                                    peg$savedPos = s19;\n                                    s20 = peg$c76(s1, s7, s13);\n                                  }\n                                  s19 = s20;\n                                  if (s19 === peg$FAILED) {\n                                    s19 = peg$parseobjectexpr();\n                                  }\n                                  if (s19 !== peg$FAILED) {\n                                    s20 = peg$parse_();\n                                    if (s20 !== peg$FAILED) {\n                                      peg$savedPos = s16;\n                                      s17 = peg$c77(s1, s7, s13, s19);\n                                      s16 = s17;\n                                    } else {\n                                      peg$currPos = s16;\n                                      s16 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s16;\n                                    s16 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s16;\n                                  s16 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s16;\n                                s16 = peg$FAILED;\n                              }\n                            }\n                            if (s15 !== peg$FAILED) {\n                              peg$savedPos = s12;\n                              s13 = peg$c78(s1, s7, s13, s15);\n                              s12 = s13;\n                            } else {\n                              peg$currPos = s12;\n                              s12 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s12;\n                            s12 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s12;\n                          s12 = peg$FAILED;\n                        }\n                        if (s12 === peg$FAILED) {\n                          s12 = null;\n                        }\n                        if (s12 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s13 = peg$c33;\n                            peg$currPos++;\n                          } else {\n                            s13 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                          }\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s8;\n                            s9 = peg$c79(s1, s7, s12);\n                            s8 = s9;\n                          } else {\n                            peg$currPos = s8;\n                            s8 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s8;\n                          s8 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s8;\n                        s8 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    s10 = peg$parse__();\n                    if (s10 !== peg$FAILED) {\n                      if (input.substr(peg$currPos, 2) === peg$c80) {\n                        s11 = peg$c80;\n                        peg$currPos += 2;\n                      } else {\n                        s11 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n                      }\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parse__();\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parseexpr_internal_2();\n                          if (s13 !== peg$FAILED) {\n                            peg$savedPos = s9;\n                            s10 = peg$c82(s1, s7, s8, s13);\n                            s9 = s10;\n                          } else {\n                            peg$currPos = s9;\n                            s9 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s3;\n                      s4 = peg$c83(s1, s7, s8, s9);\n                      s3 = s4;\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c84(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseschemacall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    var key    = peg$currPos * 42 + 12,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsevar();\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseexpr_internal_3();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c33;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c3(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s4 = peg$c27;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            s7 = peg$parseobjectexpr();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = [];\n                s10 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s11 = peg$c29;\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    s13 = peg$parseobjectexpr();\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        peg$savedPos = s10;\n                        s11 = peg$c85(s1, s7, s13);\n                        s10 = s11;\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s11 = peg$c29;\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                      if (s13 !== peg$FAILED) {\n                        s14 = peg$parse_();\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c85(s1, s7, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c86(s1, s7, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s7 = peg$c33;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c87(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c88(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsefuncall() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    var key    = peg$currPos * 42 + 13,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsevar();\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c27;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseobjectexpr();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c33;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s1;\n                s2 = peg$c3(s4);\n                s1 = s2;\n              } else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s4 = peg$c27;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            s7 = peg$parseobjectexpr();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = [];\n                s10 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s11 = peg$c29;\n                  peg$currPos++;\n                } else {\n                  s11 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                }\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    s13 = peg$parseobjectexpr();\n                    if (s13 !== peg$FAILED) {\n                      s14 = peg$parse_();\n                      if (s14 !== peg$FAILED) {\n                        peg$savedPos = s10;\n                        s11 = peg$c85(s1, s7, s13);\n                        s10 = s11;\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s10;\n                  s10 = peg$FAILED;\n                }\n                while (s10 !== peg$FAILED) {\n                  s9.push(s10);\n                  s10 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s11 = peg$c29;\n                    peg$currPos++;\n                  } else {\n                    s11 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c30); }\n                  }\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      s13 = peg$parseobjectexpr();\n                      if (s13 !== peg$FAILED) {\n                        s14 = peg$parse_();\n                        if (s14 !== peg$FAILED) {\n                          peg$savedPos = s10;\n                          s11 = peg$c85(s1, s7, s13);\n                          s10 = s11;\n                        } else {\n                          peg$currPos = s10;\n                          s10 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s10;\n                        s10 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s10;\n                      s10 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s10;\n                    s10 = peg$FAILED;\n                  }\n                }\n                if (s9 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c86(s1, s7, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 === peg$FAILED) {\n              s6 = null;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s7 = peg$c33;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c87(s1, s6);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c89(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsefunexpr() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 14,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c27;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parsedefparam();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = [];\n            s8 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c29;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                s11 = peg$parsedefparam();\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c90(s5, s11);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s9 = peg$c29;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parsedefparam();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c90(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c66(s5, s7);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c91(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c92) {\n        s2 = peg$c92;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseobjectexpr();\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseobjectexpr();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s9 = peg$c38;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s4;\n                      s5 = peg$c94(s1, s7);\n                      s4 = s5;\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c95(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseschemaexpr() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    var key    = peg$currPos * 42 + 15,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s2 = peg$c27;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        s5 = peg$parsedefparam();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = [];\n            s8 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s9 = peg$c29;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                s11 = peg$parsedefparam();\n                if (s11 !== peg$FAILED) {\n                  s12 = peg$parse_();\n                  if (s12 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c90(s5, s11);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              s8 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s9 = peg$c29;\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  s11 = peg$parsedefparam();\n                  if (s11 !== peg$FAILED) {\n                    s12 = peg$parse_();\n                    if (s12 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c90(s5, s11);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c66(s5, s7);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s1;\n              s2 = peg$c91(s4);\n              s1 = s2;\n            } else {\n              peg$currPos = s1;\n              s1 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c92) {\n        s2 = peg$c92;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_1();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c96(s1, s5);\n          }\n          s4 = s5;\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$parsedefdollar();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c97(s1, s9);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$parsedefdollar();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c97(s1, s9);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseexpr_internal_3();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c38;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s4;\n                          s5 = peg$c98(s1, s7, s9);\n                          s4 = s5;\n                        } else {\n                          peg$currPos = s4;\n                          s4 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c99(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetee() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    var key    = peg$currPos * 42 + 16,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = peg$parseexpr_internal_1();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        s6 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s7 = peg$c29;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s7 !== peg$FAILED) {\n          s8 = peg$parse_();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parseexpr_internal_1();\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              if (s10 !== peg$FAILED) {\n                peg$savedPos = s6;\n                s7 = peg$c65(s3, s9);\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c29;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c30); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseexpr_internal_1();\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parse_();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c65(s3, s9);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c66(s3, s5);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s1;\n      s2 = peg$c100(s2);\n    }\n    s1 = s2;\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c101) {\n        s2 = peg$c101;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = peg$parseexpr_internal_2();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c103(s1, s5);\n          }\n          s4 = s5;\n          if (s4 === peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c36;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = [];\n                s8 = peg$currPos;\n                s9 = peg$parsedefdollar();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parse_();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s8;\n                    s9 = peg$c104(s1, s9);\n                    s8 = s9;\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$currPos;\n                  s9 = peg$parsedefdollar();\n                  if (s9 !== peg$FAILED) {\n                    s10 = peg$parse_();\n                    if (s10 !== peg$FAILED) {\n                      peg$savedPos = s8;\n                      s9 = peg$c104(s1, s9);\n                      s8 = s9;\n                    } else {\n                      peg$currPos = s8;\n                      s8 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s8;\n                    s8 = peg$FAILED;\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseexpr_internal_3();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c38;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s4;\n                          s5 = peg$c105(s1, s7, s9);\n                          s4 = s5;\n                        } else {\n                          peg$currPos = s4;\n                          s4 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s4;\n                        s4 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s4;\n                      s4 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s4;\n                    s4 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c106(s1, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsewith() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s20, s21, s22;\n\n    var key    = peg$currPos * 42 + 17,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c107) {\n      s1 = peg$c107;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c108); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c27;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = peg$parsetex();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parse__();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetype();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse__();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseident();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parse_();\n                    if (s9 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 61) {\n                        s10 = peg$c9;\n                        peg$currPos++;\n                      } else {\n                        s10 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                      }\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parse_();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parseobjectexpr();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parse_();\n                            if (s13 !== peg$FAILED) {\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s14 = peg$c33;\n                                peg$currPos++;\n                              } else {\n                                s14 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                              }\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parse_();\n                                if (s15 !== peg$FAILED) {\n                                  if (input.charCodeAt(peg$currPos) === 123) {\n                                    s16 = peg$c36;\n                                    peg$currPos++;\n                                  } else {\n                                    s16 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c37); }\n                                  }\n                                  if (s16 !== peg$FAILED) {\n                                    s17 = peg$parse_();\n                                    if (s17 !== peg$FAILED) {\n                                      s18 = [];\n                                      s19 = peg$currPos;\n                                      s20 = peg$parsedefdollar();\n                                      if (s20 !== peg$FAILED) {\n                                        s21 = peg$parse_();\n                                        if (s21 !== peg$FAILED) {\n                                          peg$savedPos = s19;\n                                          s20 = peg$c109(s5, s6, s8, s12, s20);\n                                          s19 = s20;\n                                        } else {\n                                          peg$currPos = s19;\n                                          s19 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s19;\n                                        s19 = peg$FAILED;\n                                      }\n                                      while (s19 !== peg$FAILED) {\n                                        s18.push(s19);\n                                        s19 = peg$currPos;\n                                        s20 = peg$parsedefdollar();\n                                        if (s20 !== peg$FAILED) {\n                                          s21 = peg$parse_();\n                                          if (s21 !== peg$FAILED) {\n                                            peg$savedPos = s19;\n                                            s20 = peg$c109(s5, s6, s8, s12, s20);\n                                            s19 = s20;\n                                          } else {\n                                            peg$currPos = s19;\n                                            s19 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s19;\n                                          s19 = peg$FAILED;\n                                        }\n                                      }\n                                      if (s18 !== peg$FAILED) {\n                                        s19 = peg$parse_();\n                                        if (s19 !== peg$FAILED) {\n                                          s20 = peg$parseexpr_internal_3();\n                                          if (s20 !== peg$FAILED) {\n                                            s21 = peg$parse_();\n                                            if (s21 !== peg$FAILED) {\n                                              if (input.charCodeAt(peg$currPos) === 125) {\n                                                s22 = peg$c38;\n                                                peg$currPos++;\n                                              } else {\n                                                s22 = peg$FAILED;\n                                                if (peg$silentFails === 0) { peg$fail(peg$c39); }\n                                              }\n                                              if (s22 !== peg$FAILED) {\n                                                peg$savedPos = s0;\n                                                s1 = peg$c110(s5, s6, s8, s12, s18, s20);\n                                                s0 = s1;\n                                              } else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                              }\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_3() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 18,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsereduction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseexpr_internal_2();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_2() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 19,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsetee();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseexpr_internal_1();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseexpr_internal_1() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 20,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseschemacall();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsevar();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseschemaexpr();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsewith();\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s1 = peg$c27;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseexpr_internal_3();\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parse_();\n                  if (s4 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s5 = peg$c33;\n                      peg$currPos++;\n                    } else {\n                      s5 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                    }\n                    if (s5 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c3(s3);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseobjectexpr() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 21,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsefuncall();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefunexpr();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsevar();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s1 = peg$c27;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseobjectexpr();\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s5 = peg$c33;\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c34); }\n                  }\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c3(s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedefdollar() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var key    = peg$currPos * 42 + 22,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsedollar_ident();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseexpr_internal_3();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesem();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c111(s1, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetype() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 23,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parsestype();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseftype();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsestype() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 24,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c112(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseftype() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    var key    = peg$currPos * 42 + 25,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c61;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parsetype();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$currPos;\n          s7 = peg$parse_();\n          if (s7 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s8 = peg$c29;\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parse_();\n              if (s9 !== peg$FAILED) {\n                s10 = peg$parsetype();\n                if (s10 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c113(s4, s10);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$currPos;\n            s7 = peg$parse_();\n            if (s7 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s8 = peg$c29;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c30); }\n              }\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parse_();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsetype();\n                  if (s10 !== peg$FAILED) {\n                    peg$savedPos = s6;\n                    s7 = peg$c113(s4, s10);\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c66(s4, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c114) {\n              s5 = peg$c114;\n              peg$currPos += 2;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c115); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsetype();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 93) {\n                      s9 = peg$c67;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c116(s3, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsevar() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 26,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseat_var();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedollar_var();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseplain_var();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseat_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 27,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseat_ident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c117(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedollar_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 28,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsedollar_ident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c118(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseplain_var() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 29,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseident();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c119(s1);\n    }\n    s0 = s1;\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsekeyword() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 30,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 2) === peg$c80) {\n      s0 = peg$c80;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c44) {\n        s0 = peg$c44;\n        peg$currPos += 5;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c4) {\n          s0 = peg$c4;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c5); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c48) {\n            s0 = peg$c48;\n            peg$currPos += 6;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c13) {\n              s0 = peg$c13;\n              peg$currPos += 6;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 7) === peg$c46) {\n                s0 = peg$c46;\n                peg$currPos += 7;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c47); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c7) {\n                  s0 = peg$c7;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 5) === peg$c53) {\n                    s0 = peg$c53;\n                    peg$currPos += 5;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c54); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 4) === peg$c107) {\n                      s0 = peg$c107;\n                      peg$currPos += 4;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c108); }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseannotation() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 31,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 12) === peg$c120) {\n      s0 = peg$c120;\n      peg$currPos += 12;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c121); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 11) === peg$c122) {\n        s0 = peg$c122;\n        peg$currPos += 11;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c123); }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseident() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 32,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    peg$silentFails++;\n    s3 = peg$currPos;\n    s4 = peg$parsekeyword();\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s6 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s4 = [s4, s5];\n        s3 = s4;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s3 === peg$FAILED) {\n      s2 = void 0;\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseat_ident() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 33,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s2 = peg$c21;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedollar_ident() {\n    var s0, s1, s2, s3, s4;\n\n    var key    = peg$currPos * 42 + 34,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s2 = peg$c126;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsedocumentation() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 35,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c128;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c129); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$currPos;\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s6 = peg$c128;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c129); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$c131(s6);\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s6 = peg$c128;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c129); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c131(s6);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c128;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c129); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c132(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsetex() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var key    = peg$currPos * 42 + 36,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c126;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c127); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$currPos;\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s6 = peg$c126;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c127); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s4;\n          s5 = peg$c131(s6);\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        s5 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s6 = peg$c126;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        peg$silentFails--;\n        if (s6 === peg$FAILED) {\n          s5 = void 0;\n        } else {\n          peg$currPos = s5;\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s4;\n            s5 = peg$c131(s6);\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s3 = peg$c126;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c132(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key    = peg$currPos * 42 + 37,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c133) {\n      s1 = peg$c133;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$currPos;\n      peg$silentFails++;\n      s5 = peg$parsenewline();\n      peg$silentFails--;\n      if (s5 === peg$FAILED) {\n        s4 = void 0;\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c130); }\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parsenewline();\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c135) {\n        s1 = peg$c135;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c136); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c137) {\n          s5 = peg$c137;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c138); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c130); }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c137) {\n            s5 = peg$c137;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c138); }\n          }\n          peg$silentFails--;\n          if (s5 === peg$FAILED) {\n            s4 = void 0;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c130); }\n            }\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c137) {\n            s3 = peg$c137;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c138); }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsenewline() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 38,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.substr(peg$currPos, 2) === peg$c139) {\n      s0 = peg$c139;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c140); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 13) {\n        s0 = peg$c141;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c142); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s0 = peg$c143;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c144); }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 39,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c145.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c146); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsecomment();\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c145.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c146); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$parsecomment();\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse__() {\n    var s0, s1;\n\n    var key    = peg$currPos * 42 + 40,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = [];\n    if (peg$c145.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c146); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsecomment();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c145.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c146); }\n        }\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsecomment();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsesem() {\n    var s0;\n\n    var key    = peg$currPos * 42 + 41,\n        cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s0 = peg$c63;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}