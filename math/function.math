import propositional;
import predicate;
import set;
import relation;

"어떤 [$\langle f, A, B\rangle]가 함수이다.

[$f\subseteq A\times B]이고 임의의 [$x\in A]에 대해 [$.(x, y)\in f]를 만족하는 유일한 [$y]가 존재한다는 뜻이다."
$<<\mathop\mathrm{function}>>\left(#1: #2 \to #3\right)$
st is_fun(cls f, $A$ cls a, $B$ cls b) {
	A(subseteq(f, cartesian(a, b)), Uin(a, (cls x) => A(Xin(b, (cls y) => in(pair(x, y), f)), Q((cls y) => in(pair(x, y), f)))))
}

"함수공간(function space)."
$\left\{#1<<\to>>#2\right\}$
cls fun_space($A$ cls a, $B$ cls b) {
	setbuilder((cls f) => is_fun(f, a, b))
}

theorem fun_space_in_i(cls f: @31, $A$ cls a: @11, $B$ cls b: @21) {
	is_set(a), is_set(b), is_fun(f, a, b) |- {
		[
			[
				[@h1; @h2] > cartesian_is_set;
				@h3 > Ae1
			] > subset_is_set;
			@h3
		] > setbuilder_i as in(f, fun_space(a, b))
	}
}

theorem fun_space_subseteq_cartesian($A$ cls a, $B$ cls b) {
	(cls f) => {
		in(f, fun_space(a, b)) |- {
			[
				@h1 > is_set_i;
				@h1 > setbuilder_e > Ae1
			] > setbuilder_i as in(f, power(cartesian(a, b)))
		} > cp
	} > Ui as subseteq(fun_space(a, b), power(cartesian(a, b)))
}

theorem fun_subseteq_cartesian(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		@h1 > Ae1
	}
}

theorem fun_in_e1(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @211, cls y: @212) {
	is_fun(f, a, b), in(pair(x, y), f) |- {
		[
			@h2;
			@h1 > fun_subseteq_cartesian
		] > in_subseteq > cartesian_in_e1
	}
}

theorem fun_in_e2(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @211, cls y: @212) {
	is_fun(f, a, b), in(pair(x, y), f) |- {
		[
			@h2;
			@h1 > fun_subseteq_cartesian
		] > in_subseteq > cartesian_in_e2
	}
}

theorem fun_im_Xq(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		@h1 > Ae2
	}
}

theorem fun_im_Xq_m(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) {
	is_fun(f, a, b), in(x, a) |- {
		[
			@h2;
			@h1 > fun_im_Xq > Ue(?, x)
		] > mp
	}
}

theorem fun_im_X(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		(cls x) => {
			in(x, a) |- {
				[
					@h2;
					@h1 > fun_im_Xq > Ue(?, x)
				] > mp > Ae1
			} > cp
		} > Ui as Uin(a, (cls x) => Xin(b, (cls y) => in(pair(x, y), f)))
	}
}

theorem fun_im_X_m(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) {
	is_fun(f, a, b), in(x, a) |- {
		[
			@h2;
			@h1 > fun_im_X > Ue(?, x)
		] > mp
	}
}

theorem fun_im_Q(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		(cls x) => {
			in(x, a) |- {
				[
					@h2;
					@h1 > fun_im_Xq > Ue(?, x)
				] > mp > Ae2
			} > cp
		} > Ui as Uin(a, (cls x) => Q((cls y) => in(pair(x, y), f)))
	}
}

theorem fun_im_Q_alt(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		(cls x) => {
			$O = lxm(in(x, a));

			$c1 = @h1 > fun_im_Q > Ue(?, x);

			$c2 = Nin(x, a) |- {
				(cls y) => {
					in(pair(x, y), f) |- {
						[
							[
								@h3;
								@h1 > fun_subseteq_cartesian
							] > in_subseteq > cartesian_in_e1;
							@h2
						] > Fi
					} > Nim
				} > Ui > UN_to_NX((cls y) => in(pair(x, y), f)) > NX_to_Q
			} > cp;

			[$O; $c1; $c2] > Oe
		} > Ui
	}
}

theorem fun_im_Q_m(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21, cls y1: @312, cls y2: @412) {
	is_fun(f, a, b), in(x, a), in(pair(x, y1), f), in(pair(x, y2), f) |- {
		[
			[@h3; @h4] > Ai;
			[
				@h2;
				@h1 > fun_im_Q > Ue(?, x)
			] > mp > U2e(?, y1, y2)
		] > mp
	}
}

theorem fun_is_rel(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		[
			@h1 > fun_subseteq_cartesian(f, a, b);
			cartesian_is_rel(a, b)
		] > rel_subset_is_rel
	}
}

theorem fun_dom(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		$E = (cls x) => {
			$c1 = in(x, rel_dom(f)) |- {
				[
					@h2 > setbuilder_e;
					(cls y) => {
						in(pair(x, y), f) |- {
							[@h1; @h3] > fun_in_e1
						} > cp
					} > Ui
				] > mpX_alt(?, in(x, a))
			} > cp;

			$c2 = in(x, a) |- {
				[
					@h2 > is_set_i;
					[@h1; @h2] > fun_im_X_m > Xin_to_X
				] > setbuilder_i as in(x, rel_dom(f))
			} > cp;

			[$c1; $c2] > Ei
		} > Ui;

		$E > eq_i(rel_dom(f), a)
	}
}

"함수 호출. [$f]가 함수이고 [$x]가 [$f]의 정의역에 있을 경우 함숫값이 된다. 그러하지 아니할 때의 동작은 중요하지 않다."
$#1{\left(#2\right)}{}^{<<\scriptscriptstyle\dag>>}$
sealed cls funcall(cls f, cls x) {
	instantiate((cls y) => in(pair(x, y), f))
}

theorem funcall_Xq(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) {
	is_fun(f, a, b), in(x, a) |- {
		$foo = [@h1; @h2] > fun_im_Xq_m;

		[
			$foo > Ae1 > Xin_to_X;
			$foo > Ae2
		] > Ai as Xq((cls y) => in(pair(x, y), f))
	}
}

theorem funcall_def(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) using funcall {
	is_fun(f, a, b), in(x, a) |- {
		[@h1; @h2] > funcall_Xq > instantiate_def as in(pair(x, funcall(f, x)), f)
	}
}

theorem funcall_i(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @211, cls y: @212) {
	is_fun(f, a, b), in(pair(x, y), f) |- {
		$x_in_a = [
			@h2;
			@h1 > fun_subseteq_cartesian
		] > in_subseteq > cartesian_in_e1;

		[
			@h1; $x_in_a; @h2;
			[@h1; $x_in_a] > funcall_def
		] > fun_im_Q_m
	}
}

theorem funcall_e(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21, cls y: @31) {
	is_fun(f, a, b), in(x, a), eq(y, funcall(f, x)) |- {
		[
			[eq_reflexive(x); @h3] > pair_eq_i;
			[@h1; @h2] > funcall_def
		] > eq_in
	}
}

theorem fun_eq_i(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13) {
	$bar = (cls f, cls g, $A$ cls a, $B$ cls b) => {
		is_fun(f, a, b), is_fun(g, a, b),
		Uin(a, (cls x) => eq(funcall(f, x), funcall(g, x))) |- {
			$foo = (cls x, cls y) => {
				in(pair(x, y), f) |- {
					$x_in_a = [@h1; @h4] > fun_in_e1;

					[
						@h2; $x_in_a;
						[
							[@h1; @h4] > funcall_i;
							[
								$x_in_a;
								@h3 > Ue(?, x)
							] > mp
						] > eq_transitive
					] > funcall_e
				} > cp
			} > U2i;

			[
				@h1 > fun_is_rel;
				$foo
			] > rel_U(is_in(g), ?) as subseteq(f, g)
		}
	};

	is_fun(f, a, b), is_fun(g, a, b),
	Uin(a, (cls x) => eq(funcall(f, x), funcall(g, x))) |- {
		[
			[@h1; @h2; @h3] > $bar(f, g, a, b);
			[
				@h2; @h1;
				(cls x) => {
					in(x, a) |- {
						[
							@h4;
							@h3 > Ue(?, x)
						] > mp > eq_symmetric
					} > cp
				} > Ui
			] > $bar(g, f, a, b)
		] > subseteq_to_eq
	}
}

theorem funcall_eq_i(cls f, cls x1: @11, cls x2: @12) {
	eq(x1, x2) |- {
		@h1 > call_eq_i((cls x) => funcall(f, x), ?, ?)
	}
}

theorem funcall_in_codomain(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) {
	is_fun(f, a, b), in(x, a) |- {
		[
			[@h1; @h2] > fun_im_X_m;
			(cls y) => {
				A(in(y, b), in(pair(x, y), f)) |- {
					[
						[
							@h1; @h2;
							@h3 > Ae2;
							[@h1; @h2] > funcall_def(f, a, b, x)
						] > fun_im_Q_m;
						@h3 > Ae1
					] > eq_in_flip
				} > cp
			} > Ui
		] > mpX_alt(?, in(funcall(f, x), b))
	}
}

theorem fun_im_subseteq_codomain(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		(cls y) => {
			in(y, rel_im(f)) |- {
				$Xx_xy_in_f = @h2 > setbuilder_e;

				[
					$Xx_xy_in_f;
					(cls x) => {
						in(pair(x, y), f) |- {
							[
								@h3;
								@h1 > Ae1
							] > in_subseteq > cartesian_in_e2
						} > cp
					} > Ui
				] > mpX_alt(?, in(y, b))
			} > cp
		} > Ui as subseteq(rel_im(f), b)
	}
}

theorem fun_im_in_i(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x: @21) {
	is_fun(f, a, b), in(x, a) |- {
		$fx_is_set = [@h1; @h2] > funcall_in_codomain > is_set_i;
		
		$X = [@h1; @h2] > funcall_def
		> Xi((cls z) => {
			in(pair(z, funcall(f, x)), f)
		}, x);
		
		[$fx_is_set; $X] > setbuilder_i as in(funcall(f, x), rel_im(f))
	}
}

theorem fun_im_set_in_i(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @32, cls x: @21) {
	is_fun(f, a, b), in(x, a), in(x, c) |- {
		[@h3; [@h1; @h2] > funcall_def] > rel_im_set_in_i
	}
}

theorem fun_im_set_subseteq_im(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c) {
	is_fun(f, a, b) |- {
		(cls y) => {
			in(y, rel_im_set(f, c)) |- {
				[
					@h2 > is_set_i;
					@h2 > setbuilder_e > Xin_to_X
				] > setbuilder_i as in(y, rel_im(f))
			} > cp
		} > Ui as subseteq(rel_im_set(f, c), rel_im(f))
	}
}

theorem fun_im_set_subseteq_codomain(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c) {
	is_fun(f, a, b) |- {
		[
			@h1 > fun_im_set_subseteq_im(f, a, b, c);
			@h1 > fun_im_subseteq_codomain
		] > subseteq_subseteq
	}
}

"매개변수가 하나인 메타함수로 함수를 만든다. 함수를 [$x\mapsto x^2]처럼 표현하는 것과 비슷한 방식이다."
$\left[#1\right]_{<<\in>>#2}$
cls map(fun f, $A$ cls a) {
	setbuilder2((cls z) => pair(z, f(z)), (cls z) => in(z, a))
}

theorem map_in_i(fun f: @r21, $A$ cls a: @32, cls z: @11) {
	is_set(z), is_set(f(z)), in(z, a) |- {
		[
			[@h1; @h2] > pair_set_i;
			@h3
		] > setbuilder2_i(?, ?, z) as in(pair(z, f(z)), map(f, a))
	}
}

theorem map_is_fun(fun f: @r11, $A$ cls a: @r2, $B$ cls b: @r3) {
	Uin(a, (cls x) => in(f(x), b)) |- {
		$c1 = (cls w) => {
			in(w, map(f, a)) |- {
				[
					@h2 > setbuilder_e;
					(cls z) => {
						eq(w, pair(z, f(z))), in(z, a) |- {
							[
								@h3;
								[
									@h4;
									[
										@h4;
										@h1 > Ue(?, z)
									] > mp
								] > cartesian_in_i
							] > eq_in
						} > cp2
					} > Ui
				] > mpX_alt(?, in(w, cartesian(a, b)))
			} > cp
		} > Ui as subseteq(map(f, a), cartesian(a, b));

		$c23 = (cls x) => {
			in(x, a) |- {
				$fx_in_b = [
					@h2;
					@h1 > Ue(?, x)
				] > mp;

				$c2 = [
					$fx_in_b;
					[
						[
							@h2 > is_set_i;
							$fx_in_b > is_set_i
						] > pair_set_i;
						@h2
					] > setbuilder2_i(?, ?, x) as in(pair(x, f(x)), map(f, a))
				] > Ai > Xi((cls y) => A(in(y, b), in(pair(x, y), map(f, a))), f(x));

				$c3 = (cls y) => {
					in(pair(x, y), map(f, a)) |- {
						[
							@h3 > setbuilder_e;
							(cls z) => {
								A(eq(pair(x, y), pair(z, f(z))), in(z, a)) |- {
									$pair_eq = @h4 > Ae1;

									[
										[
											@h3 > is_set_i;
											$pair_eq
										] > pair_eq_e1_v1;
										[
											@h3 > is_set_i;
											$pair_eq
										] > pair_eq_e2_v1
									] > ax_indiscernible_m2((cls z) => eq(y, f(z)), ?, ?)
								} > cp
							} > Ui
						] > mpX_alt(?, eq(y, f(x)))
					} > cp
				} > Ui > Qim((cls y) => in(pair(x, y), map(f, a)), f(x));

				[$c2; $c3] > Ai
			} > cp
		} > Ui;

		[$c1; $c23] > Ai as is_fun(map(f, a), a, b)
	}
}

theorem map_funcall(fun f: @r111, $A$ cls a: @22, $B$ cls b, cls x: @21) {
	Uin(a, (cls x) => in(f(x), b)), in(x, a) |- {
		[
			@h1 > map_is_fun(f, a, b);
			[
				[
					@h2 > is_set_i;
					[
						@h2;
						@h1 > Ue(?, x)
					] > mp > is_set_i
				] > pair_set_i;
				@h2
			] > setbuilder2_i(?, ?, x) as in(pair(x, f(x)), map(f, a))
		] > funcall_i > eq_symmetric
	}
}

"매개변수가 두 개인 메타함수로 함수를 만든다. 함수를 [$.(x, y)\mapsto x^2 + y^2]처럼 표현하는 것과 비슷한 방식이다."
$\left[#1\right]_{<<\in>>#2 \times #3}$
cls map2(fun2 f, $A$ cls a, $B$ cls b) {
	setbuilder2_pair((cls x, cls y) => pair(pair(x, y), f(x, y)), (cls x, cls y) => A(in(x, a), in(y, b)))
}

"집합 [$A] 상에서의 항등함수(identity function)."
$<<\operatorname{id}>>_{#1}$
cls fun_id($A$ cls a) {
	map((cls x) => x, a)
}

theorem fun_id_is_fun($A$ cls a) {
	(cls x) => Ipp(in(x, a)) > Ui > map_is_fun((cls x) => x, a, a) as is_fun(fun_id(a), a, a)
}

theorem fun_id_funcall($A$ cls a: @12, cls x: @11) {
	in(x, a) |- {
		[
			(cls x) => Ipp(in(x, a)) > Ui;
			@h1
		] > map_funcall((cls x) => x, a, a, x) as eq(funcall(fun_id(a), x), x)
	}
}

theorem fun_id_im_set($A$ cls a: @12, $B$ cls b: @11) {
	subseteq(b, a) |- {
		with (cls f = fun_id(a)) {
			$E = (cls y) => {
				$c1 = in(y, rel_im_set(f, b)) |- {
					[
						@h2 > setbuilder_e;
						(cls x) => {
							in(x, b) |- {
								in(pair(x, y), fun_id(a)) |- {
									[
										@h4 > setbuilder_e;
										(cls z) => {
											eq(pair(x, y), pair(z, z)), in(z, a) |- {
												$x_is_z = [
													@h4 > is_set_i;
													@h5
												] > pair_eq_e1_v1;

												$y_is_z = [
													@h4 > is_set_i;
													@h5
												] > pair_eq_e2_v1;

												[
													[
														$x_is_z;
														$y_is_z > eq_symmetric
													] > eq_transitive;
													@h3
												] > eq_in_flip
											} > cp2
										} > Ui
									] > mpX_alt(?, in(y, b))
								} > cp
							} > cp
						} > Ui
					] > mpXin_alt(?, ?, in(y, b))
				} > cp;

				$c2 = in(y, b) |- {
					$y_in_a = [@h2; @h1] > in_subseteq;

					$set_y = @h2 > is_set_i;

					$yy_in_id = [$set_y; $set_y; $y_in_a] > map_in_i((cls x) => x, a, y) as in(pair(y, y), f);

					[
						$set_y;
						[@h2; $yy_in_id] > Ai > Xi((cls x) => A(in(x, b), in(pair(x, y), f)), y)
					] > setbuilder_i as in(y, rel_im_set(f, b))
				} > cp;

				[$c1; $c2] > Ei
			} > Ui;

			$E > eq_i(rel_im_set(f, b), b)
		}
	}
}

theorem fun_composite_is_fun_1(cls f, cls g, $A$ cls a, $B$ cls b, $C$ cls c) {
	Uin(a, (cls x) => Xin(b, (cls y) => in(pair(x, y), f))),
	Uin(b, (cls y) => Xin(c, (cls z) => in(pair(y, z), g))) |- {
		with (cls h = rel_composite(g, f)) {
			(cls x) => {
				in(x, a) |- {
					$fX = [
						@h3;
						@h1 > Ue(?, x)
					] > mp;

					[
						$fX;
						(cls y) => {
							in(y, b), in(pair(x, y), f) |- {
								$gX = [
									@h4;
									@h2 > Ue(?, y)
								] > mp;

								[
									$gX;
									(cls z) => {
										in(z, c) |- {
											in(pair(y, z), g) |- {
												[@h5; @h7] > rel_composite_in_i
											} > cp
										} > cp
									} > Ui
								] > mpXin(?, ?, (cls z) => in(pair(x, z), rel_composite(g, f)))
							} > cp2
						} > Ui
					] > mpX_alt(?, Xin(c, (cls z) => in(pair(x, z), rel_composite(g, f))))
				} > cp
			} > Ui as Uin(a, (cls x) => Xin(c, (cls z) => in(pair(x, z), h)))
		}
	}
}

"[$\forall_{\in A}]의 [${\in}A]는 일부러 뗀 것이다."
theorem fun_composite_is_fun_2(cls f, cls g) {
	U((cls x) => Q((cls y) => in(pair(x, y), f))),
	U((cls y) => Q((cls z) => in(pair(y, z), g))) |- {
		with (cls h = rel_composite(g, f)) {
			(cls x) => {
				$fQ = @h1 > Ue(?, x);

				(cls z1, cls z2) => {
					in(pair(x, z1), h), in(pair(x, z2), h) |- {
						$y1X = @h3 > setbuilder_pair_e as X((cls y1) => A(in(pair(x, y1), f), in(pair(y1, z1), g)));

						$y1U = (cls y1) => {
							in(pair(x, y1), f), in(pair(y1, z1), g) |- {
								$y2X = @h4 > setbuilder_pair_e as X((cls y2) => A(in(pair(x, y2), f), in(pair(y2, z2), g)));

								$y2U = (cls y2) => {
									in(pair(x, y2), f), in(pair(y2, z2), g) |- {
										[
											[
												@h6;
												[
													[
														[
															[@h5; @h7] > Ai;
															$fQ > U2e(?, y1, y2)
														] > mp;
														eq_reflexive(z2)
													] > pair_eq_i;
													@h8
												] > eq_in
											] > Ai;
											@h2 > Ue(?, y1) > U2e(?, z1, z2)
										] > mp
									} > cp2
								} > Ui;

								[$y2X; $y2U] > mpX_alt(?, eq(z1, z2))
							} > cp2
						} > Ui;

						[$y1X; $y1U] > mpX_alt(?, eq(z1, z2))
					} > cp2
				} > U2i as Q((cls z) => in(pair(x, z), h))
			} > Ui
		}
	}
}

theorem fun_composite_is_fun_3(cls f, cls g, $A$ cls a, $B$ cls b, $C$ cls c) {
	Uin(b, (cls y) => Xin(a, (cls x) => in(pair(x, y), f))),
	Uin(c, (cls z) => Xin(b, (cls y) => in(pair(y, z), g))) |- {
		with (cls h = rel_composite(g, f)) {
			(cls z) => {
				in(z, c) /* @h3 */ |- {
					$X = [@h3; @h2 > Ue(?, z)] > mp;

					$U = (cls y) => {
						in(y, b) /* @h4 */, in(pair(y, z), g) |- {
							$X = [@h4; @h1 > Ue(?, y)] > mp;

							$U = (cls x) => {
								in(x, a), in(pair(x, y), f) |- {
									[@h7; @h5] > rel_composite_in_i
								} > cp2 > curry
							} > Ui;

							[$X; $U] > mpXin(?, ?, (cls x) => in(pair(x, z), h))
						} > cp2
					} > Ui;

					[$X; $U] > mpX_alt as Xin(a, (cls x) => in(pair(x, z), h))
				} > cp
			} > Ui as Uin(c, (cls z) => Xin(a, (cls x) => in(pair(x, z), h)))
		}
	}
}

theorem fun_composite_is_fun_4(cls f, cls g) {
	U((cls y) => Q((cls x) => in(pair(x, y), f))),
	U((cls z) => Q((cls y) => in(pair(y, z), g))) |- {
		with (cls h = rel_composite(g, f)) {
			(cls z) => {
				$Q = @h2 > Ue(?, z);
				
				(cls x1, cls x2) => {
					in(pair(x1, z), h) /* @h3 */, in(pair(x2, z), h) |- {
						$X1 = @h3 > setbuilder_pair_e as X((cls y1) => A(in(pair(x1, y1), f), in(pair(y1, z), g)));
						$X2 = @h4 > setbuilder_pair_e as X((cls y2) => A(in(pair(x2, y2), f), in(pair(y2, z), g)));

						$U1 = (cls y1) => {
							in(pair(x1, y1), f) /* @h5 */, in(pair(y1, z), g) |- {
								$U2 = (cls y2) => {
									in(pair(x2, y2), f) /* @h7 */, in(pair(y2, z), g) |- {
										$y1_is_y2 = [[@h6; @h8] > Ai; $Q > U2e(?, y1, y2)] > mp;

										$A = [
											@h5;
											[
												[eq_reflexive(x2); $y1_is_y2] > pair_eq_i;
												@h7
											] > eq_in
										] > Ai;

										[
											$A;
											@h1 > Ue(?, y1) > U2e(?, x1, x2)
										] > mp
									} > cp2
								} > Ui;

								[$X2; $U2] > mpX_alt(?, eq(x1, x2))
							} > cp2
						} > Ui;

						[$X1; $U1] > mpX_alt(?, eq(x1, x2))
					} > cp2
				} > U2i as Q((cls x) => in(pair(x, z), h))
			} > Ui
		}
	}
}

theorem fun_composite_is_fun(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @23) {
	is_fun(f, a, b), is_fun(g, b, c) |- {
		with (cls h = rel_composite(g, f)) {
			$h_is_rel = [] > setbuilder_pair_is_rel as is_rel(h);

			$c1 = [
				$h_is_rel;
				(cls x, cls z) => {
					in(pair(x, z), h) |- {
						$X = @h3 > setbuilder_pair_e as X((cls y) => A(in(pair(x, y), f), in(pair(y, z), g)));

						$U = (cls y) => {
							in(pair(x, y), f), in(pair(y, z), g) |- {
								$x_in_a = [
									@h4;
									@h1 > Ae1
								] > in_subseteq > cartesian_in_e1;

								$z_in_c = [
									@h5;
									@h2 > Ae1
								] > in_subseteq > cartesian_in_e2;

								[$x_in_a; $z_in_c] > cartesian_in_i
							} > cp2
						} > Ui;

						[$X; $U] > mpX_alt(?, in(pair(x, z), cartesian(a, c)))
					} > cp
				} > U2i
			] > rel_U(is_in(cartesian(a, c)), ?) as subseteq(rel_composite(g, f), cartesian(a, c));

			$c23 = (cls x) => {
				in(x, a) |- {
					$c2 = [
						@h3;
						[
							@h1 > fun_im_X;
							@h2 > fun_im_X
						] > fun_composite_is_fun_1(f, g, a, b, c) > Ue(?, x)
					] > mp;

					$c3 = [
						@h3;
						[
							@h1 > fun_im_Q_alt;
							@h2 > fun_im_Q_alt
						] > fun_composite_is_fun_2(f, g) > U_to_Uin(a, ?) > Ue(?, x)
					] > mp;

					[$c2; $c3] > Ai
				} > cp
			} > Ui;

			[$c1; $c23] > Ai as is_fun(h, a, c)
		}
	}
}

theorem fun_composite_funcall(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @23, cls x: @31) {
	is_fun(f, a, b), is_fun(g, b, c), in(x, a) |- {
		with (cls h = rel_composite(g, f)) {
			$in = [
				[@h1; @h3] > funcall_def;
				[@h2; [@h1; @h3] > funcall_in_codomain] > funcall_def
			] > rel_composite_in_i;
			$fun = [@h1; @h2] > fun_composite_is_fun;
			
			[$fun; $in] > funcall_i > eq_symmetric
		}
	}
}

"전사함수(surjective function). onto라고도 한다."
$<<\mathop\mathrm{surjection}>>\left(#1: #2 \to #3\right)$
st is_surjection(cls f, $A$ cls a, $B$ cls b) {
	A(is_fun(f, a, b), Uin(b, (cls y) => Xin(a, (cls x) => in(pair(x, y), f))))
}

theorem fun_to_surjection(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_fun(f, a, b) |- {
		with ($B'$ cls b2 = rel_im(f)) {
			$c1 = [
				@h1 > fun_is_rel;
				(cls x, cls y) => {
					in(pair(x, y), f) |- {
						$xy_in_ab = [
							@h2;
							@h1 > Ae1
						] > in_subseteq;

						$x_in_a = $xy_in_ab > cartesian_in_e1;

						$y_in_b = $xy_in_ab > cartesian_in_e2;

						$y_in_im = [
							$y_in_b > is_set_i;
							@h2 > Xi((cls x) => in(pair(x, y), f), x)
						] > setbuilder_i as in(y, rel_im(f));

						[$x_in_a; $y_in_im] > cartesian_in_i
					} > cp
				} > U2i
			] > rel_U(is_in(cartesian(a, rel_im(f))), ?) as subseteq(f, cartesian(a, rel_im(f)));

			$c23 = (cls x) => {
				in(x, a) |- {
					$c2 = [
						[
							@h2;
							@h1 > Ae2 > Ue(?, x)
						] > mp > Ae1;
						(cls y) => {
							in(y, b), in(pair(x, y), f) |- {
								[
									[@h4; $c1] > in_subseteq > cartesian_in_e2;
									@h4
								] > Ai
							} > cp2
						} > Ui
					] > mpX(?, (cls y) => A(in(y, rel_im(f)), in(pair(x, y), f))) as Xin(rel_im(f), (cls y) => in(pair(x, y), f));

					$c3 = [
						@h2;
						@h1 > Ae2 > Ue(?, x)
					] > mp > Ae2;

					[$c2; $c3] > Ai
				} > cp
			} > Ui;

			$is_fun = [$c1; $c23] > Ai as is_fun(f, a, rel_im(f));

			$surjective = (cls y) => {
				in(y, rel_im(f)) |- {
					[
						@h2 > setbuilder_e;
						(cls x) => {
							in(pair(x, y), f) |- {
								[
									[
										@h3;
										@h1 > Ae1
									] > in_subseteq > cartesian_in_e1;
									@h3
								] > Ai
							} > cp
						} > Ui
					] > mpX(?, (cls x) => A(in(x, a), in(pair(x, y), f))) as Xin(a, (cls x) => in(pair(x, y), f))
				} > cp
			} > Ui;

			[$is_fun; $surjective] > Ai as is_surjection(f, a, rel_im(f))
		}
	}
}

"단사함수(injective function). 일대일함수(one-to-one function)라고도 한다."
$<<\mathop\mathrm{injection}>>\left(#1: #2 \to #3\right)$
st is_injection(cls f, $A$ cls a, $B$ cls b) {
	A(is_fun(f, a, b), Uin(b, (cls y) => Q((cls x) => in(pair(x, y), f))))
}

theorem injection_dom_Q_alt(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_injection(f, a, b) |- {
		(cls y) => {
			$f_fun = @h1 > Ae1;
			$O = lxm(in(y, b));

			$c1 = in(y, b) |- {
				[@h2; @h1 > Ae2 > Ue(?, y)] > mp
			} > cp;

			$c2 = Nin(y, b) /* @h2 */ |- {
				(cls x) => {
					in(pair(x, y), f) |- {
						[[$f_fun; @h3] > fun_in_e2; @h2] > Fi
					} > Nim
				} > Ui > UN_to_NX((cls x) => in(pair(x, y), f))
				> NX_to_Q
			} > cp;

			[$O; $c1; $c2] > Oe
		} > Ui
	}
}

theorem injection_dom_Q_m(cls f: @11, $A$ cls a: @12, $B$ cls b: @13, cls x1: @311, cls x2: @411, cls y: @21) {
	is_injection(f, a, b), in(y, b), in(pair(x1, y), f), in(pair(x2, y), f) |- {
		[
			[@h3; @h4] > Ai;
			[
				@h2;
				@h1 > Ae2 > Ue(?, y)
			] > mp > U2e(?, x1, x2)
		] > mp
	}
}

"전단사함수(bijective function). [~(href=#def-is_fun)is_fun]의 정의와의 유사성에 주목하라."
$<<\mathop\mathrm{bijection}>>\left(#1: #2 \to #3\right)$
st is_bijection(cls f, $A$ cls a, $B$ cls b) {
	A(is_fun(f, a, b), Uin(b, (cls y) => A(Xin(a, (cls x) => in(pair(x, y), f)), Q((cls x) => in(pair(x, y), f)))))
}

theorem bijection_i(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_surjection(f, a, b), is_injection(f, a, b) |- {
		$is_fun = @h1 > Ae1;

		[
			$is_fun;
			(cls y) => {
				in(y, b) |- {
					[
						[
							@h3;
							@h1 > Ae2 > Ue(?, y)
						] > mp;
						[
							@h3;
							@h2 > Ae2 > Ue(?, y)
						] > mp
					] > Ai
				} > cp
			} > Ui
		] > Ai as is_bijection(f, a, b)
	}
}

theorem bijection_is_surjection(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_bijection(f, a, b) |- {
		$is_fun = @h1 > Ae1;

		[
			$is_fun;
			(cls y) => {
				in(y, b) |- {
					[
						@h2;
						@h1 > Ae2 > Ue(?, y)
					] > mp > Ae1
				} > cp
			} > Ui
		] > Ai as is_surjection(f, a, b)
	}
}

theorem bijection_is_injection(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_bijection(f, a, b) |- {
		$is_fun = @h1 > Ae1;

		[
			$is_fun;
			(cls y) => {
				in(y, b) |- {
					[
						@h2;
						@h1 > Ae2 > Ue(?, y)
					] > mp > Ae2
				} > cp
			} > Ui
		] > Ai as is_injection(f, a, b)
	}
}

theorem injection_to_bijection(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_injection(f, a, b) |- {
		$f_is_fun = @h1 > Ae1;

		$surjection = $f_is_fun > fun_to_surjection;

		$fun = $surjection > Ae1;

		$f_is_inj = @h1 > Ae2;

		$inj = [
			$f_is_fun > fun_im_subseteq_codomain;
			$f_is_inj
		] > Uin_subset;

		$injection = [$fun; $inj] > Ai as is_injection(f, a, rel_im(f));

		[$surjection; $injection] > bijection_i
	}
}

$<<\mathop\mathrm{invertible\ fun.}>>\left(#1: #2 \to #3\right)$
st is_invertible_fun(cls f, $A$ cls a, $B$ cls b) {
	A(is_fun(f, a, b), is_fun(rel_inverse(f), b, a))
}

theorem bijection_inverse_is_bijection(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_bijection(f, a, b) |- {
		$f_is_fun = @h1 > Ae1;

		$f_is_rel = $f_is_fun > fun_is_rel;

		$f_in_ab = $f_is_fun > Ae1;

		$fXq1 = $f_is_fun > Ae2;

		$fXq2 = @h1 > Ae2;

		$f_inv_in_ba = [
			[$f_is_rel; $f_in_ab] > rel_inverse_subseteq;
			cartesian_inverse(a, b)
		] > subseteq_eq;

		$f_inv_Xq1 = (cls y) => {
			in(y, b) |- {
				$Xq = [
					@h2;
					$fXq2 > Ue(?, y)
				] > mp;

				$X = $Xq > Ae1;

				$Q = $Xq > Ae2;

				$X_inv = [
					$X;
					(cls x) => {
						in(x, a) |- {
							in(pair(x, y), f) |- {
								@h4 > rel_inverse_in_i
							} > cp
						} > cp
					} > Ui
				] > mpXin(?, ?, (cls x) => in(pair(y, x), rel_inverse(f)));

				$Q_inv = [
					$Q;
					(cls x) => {
						in(pair(y, x), rel_inverse(f)) |- {
							@h3 > rel_inverse_in_e
						} > cp
					} > Ui
				] > QU as Q((cls x) => in(pair(y, x), rel_inverse(f)));

				[$X_inv; $Q_inv] > Ai
			} > cp
		} > Ui;

		$f_inv_is_fun = [$f_inv_in_ba; $f_inv_Xq1] > Ai as is_fun(rel_inverse(f), b, a);

		$f_inv_Xq2 = (cls x) => {
			in(x, a) |- {
				$Xq = [
					@h2;
					$fXq1 > Ue(?, x)
				] > mp;

				$X = $Xq > Ae1;

				$Q = $Xq > Ae2;

				$X_inv = [
					$X;
					(cls y) => {
						in(y, b) |- {
							in(pair(x, y), f) |- {
								@h4 > rel_inverse_in_i
							} > cp
						} > cp
					} > Ui
				] > mpXin(?, ?, (cls y) => in(pair(y, x), rel_inverse(f)));

				$Q_inv = [
					$Q;
					(cls y) => {
						in(pair(y, x), rel_inverse(f)) |- {
							@h3 > rel_inverse_in_e
						} > cp
					} > Ui
				] > QU as Q((cls y) => in(pair(y, x), rel_inverse(f)));

				[$X_inv; $Q_inv] > Ai
			} > cp
		} > Ui;

		[$f_inv_is_fun; $f_inv_Xq2] > Ai as is_bijection(rel_inverse(f), b, a)
	}
}

theorem bijection_is_invertible(cls f: @11, $A$ cls a: @12, $B$ cls b: @13) {
	is_bijection(f, a, b) |- {
		[
			@h1 > Ae1;
			@h1 > bijection_inverse_is_bijection > Ae1
		] > Ai as is_invertible_fun(f, a, b)
	}
}

theorem injection_composite_is_injection(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @23) {
	is_injection(f, a, b), is_injection(g, b, c) |- {
		$f_is_fun = @h1 > Ae1;
		$g_is_fun = @h2 > Ae1;
		$gf_is_fun = [$f_is_fun; $g_is_fun] > fun_composite_is_fun;
		$f_inj = @h1 > injection_dom_Q_alt;
		$g_inj = @h2 > injection_dom_Q_alt;
		
		$gf_inj = [$f_inj; $g_inj] > fun_composite_is_fun_4(f, g)
		> U_to_Uin(c, ?);
		
		[$gf_is_fun; $gf_inj] > Ai as is_injection(rel_composite(g, f), a, c)
	}
}

theorem surjection_composite_is_surjection(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @23) {
	is_surjection(f, a, b), is_surjection(g, b, c) |- {
		$f_is_fun = @h1 > Ae1;
		$g_is_fun = @h2 > Ae1;
		$gf_is_fun = [$f_is_fun; $g_is_fun] > fun_composite_is_fun;
		$f_surj = @h1 > Ae2;
		$g_surj = @h2 > Ae2;
		
		$gf_surj = [$f_surj; $g_surj] > fun_composite_is_fun_3(f, g, a, b, c);
		
		[$gf_is_fun; $gf_surj] > Ai as is_surjection(rel_composite(g, f), a, c)
	}
}

theorem bijection_composite_is_bijection(cls f: @11, cls g: @21, $A$ cls a: @12, $B$ cls b: @13, $C$ cls c: @23) {
	is_bijection(f, a, b), is_bijection(g, b, c) |- {
		$f_inj = @h1 > bijection_is_injection;
		$f_surj = @h1 > bijection_is_surjection;
		$g_inj = @h2 > bijection_is_injection;
		$g_surj = @h2 > bijection_is_surjection;
		
		$gf_inj = [$f_inj; $g_inj] > injection_composite_is_injection;
		$gf_surj = [$f_surj; $g_surj] > surjection_composite_is_surjection;
		
		[$gf_surj; $gf_inj] > bijection_i
	}
}

"칸토어의 정리(Cantor's theorem). [~(href=https://www.cs.ru.nl/~freek/100/)[*Formalizing 100 Theorems]]의 정리 #63이다."
theorem cantor($A$ cls a: @11, cls f: @r11) {
	is_set(a) |- {
		is_surjection(f, a, power(a)) |- {
			with ($B$ cls b = subsetbuilder(a, (cls x) => Nin(x, funcall(f, x)))) {
				$f_is_fun = @h2 > Ae1;

				$b_subseteq_a = subsetbuilder_is_subset(a, (cls x) => Nin(x, funcall(f, x))) > id(subseteq(b, a));

				$b_in_power_a = [@h1; $b_subseteq_a] > power_in_i;

				$X = [
					$b_in_power_a;
					@h2 > Ae2 > Ue(?, b)
				] > mp;

				$U = ($\xi$ cls xi) => {
					in(xi, a), in(pair(xi, b), f) |- {
						$b_is_f_xi = [$f_is_fun; @h4] > funcall_i;

						$xi_Nin_f_xi = in(xi, funcall(f, xi)) |- {
							[
								@h5;
								[@h5; $b_is_f_xi] > in_eq_flip > subsetbuilder_e
							] > Fi
						} > Nim as Nin(xi, funcall(f, xi));

						$xi_in_b = [@h3; $xi_Nin_f_xi] > subsetbuilder_i as in(xi, b);

						$xi_in_f_xi = [$xi_in_b; $b_is_f_xi] > in_eq;

						[$xi_in_f_xi; $xi_Nin_f_xi] > Fi
					} > cp2
				} > Ui;

				[$X; $U] > mpX_alt(?, F)
			}
		} > Nim
	}
}