import propositional;
import predicate;
import set;

###########################
######## RELATIONS ########
###########################

"순서쌍(ordered pair). Kuratowski의 정의이다."
$\left(#1<<,>>#2\right)$
sealed cls pair(cls x, cls y) {
	doubleton(singleton(x), doubleton(x, y))
}

theorem pair_set_i(cls x: @11, cls y: @21) using pair {
	set(x), set(y) |-
		doubleton_set_i[
			singleton_set_i[@h1];
			doubleton_set_i[@h1; @h2]
		]
		[as set(pair(x, y))]
}

theorem pair_set_e1(cls x: @111, cls y: @112) using pair {
	set(pair(x, y)) |-
		singleton_set_e[doubleton_set_e1[@h1]]
}

theorem pair_set_e2(cls x: @111, cls y: @112) using pair {
	set(pair(x, y)) |-
		doubleton_set_e2[doubleton_set_e2[@h1]]
}

theorem pair_set_flip(cls x: @111, cls y: @112) {
	set(pair(x, y)) |-
		pair_set_i[pair_set_e2[@h1]; pair_set_e1[@h1]]
}

theorem pair_eq_i(cls x: @11, cls y: @21, cls u: @12, cls v: @22) using pair {
	eq(x, u), eq(y, v) |-
		doubleton_eq_i[
			singleton_eq_i[@h1];
			doubleton_eq_i[@h1; @h2]
		]
		[as eq(pair(x, y), pair(u, v))]
}

"`[Pinter]` 정리 1.30."
theorem pair_eq_e(cls x: @11, cls y: @21, cls u: @31, cls v: @41) using pair {
	set(x), set(y), set(u), set(v), eq(pair(x, y), pair(u, v)) |-
		Oe[
			doubleton_eq_e[
				singleton_set_i[@h1];
				doubleton_set_i[@h1; @h2];
				singleton_set_i[@h3];
				doubleton_set_i[@h3; @h4];
				@h5
			];
			cp[
				A(eq(singleton(x), singleton(u)), eq(doubleton(x, y), doubleton(u, v))) |-
				Oe[
					doubleton_eq_e[
						@h1; @h2; @h3; @h4;
						Ae2[@h6]
					];
					cp[id(A(eq(x, u), eq(y, v)))];
					cp[
						A(eq(x, v), eq(y, u)) |-
							Ai[
								singleton_eq_e[
									@h1; @h3;
									Ae1[@h6]
								];
								eq_transitive[
									eq_symmetric[eq_transitive[
										singleton_eq_e[
											@h1; @h3;
											Ae1[@h6]
										];
										eq_symmetric[Ae2[@h7]]
									]];
									Ae1[@h7]
								]
							]
					]
				]
			];
			cp[
				A(eq(singleton(x), doubleton(u, v)), eq(doubleton(x, y), singleton(u))) |-
					Ai[
						eq_symmetric[singleton_e[@h1; in_eq_right_2[
							doubleton_in_1(u, v)[@h3; @h4];
							Ae1[@h6]
						]]];
						eq_symmetric[eq_transitive[
							eq_symmetric[eq_transitive[
								singleton_e[@h1; in_eq_right_2[
									doubleton_in_1(u, v)[@h3; @h4];
									Ae1[@h6]
								]];
								eq_symmetric[singleton_e[@h1; in_eq_right_2[
									doubleton_in_2(u, v)[@h3; @h4];
									Ae1[@h6]
								]]]
							]];
							eq_symmetric[singleton_e[@h3; in_eq_right_1[
								doubleton_in_2(x, y)[@h1; @h2];
								Ae2[@h6]
							]]]
						]]
					]
			]
		]
}

theorem pair_eq_e1(cls x: @11, cls y: @21, cls u: @31, cls v: @41) {
	set(x), set(y), set(u), set(v), eq(pair(x, y), pair(u, v)) |-
		Ae1[pair_eq_e[@h1; @h2; @h3; @h4; @h5]]
}

theorem pair_eq_e1_v1(cls x: @211, cls y: @212, cls u: @221, cls v: @222) {
	set(pair(x, y)), eq(pair(x, y), pair(u, v)) |-
		$set_uv = set_is_set_1[@h1; @h2];
		$set_x = pair_set_e1[@h1];
		$set_y = pair_set_e2[@h1];
		$set_u = pair_set_e1[$set_uv];
		$set_v = pair_set_e2[$set_uv];
		
		pair_eq_e1[$set_x; $set_y; $set_u; $set_v; @h2]
}

theorem pair_eq_e1_v2(cls x: @211, cls y: @212, cls u: @221, cls v: @222) {
	set(pair(u, v)), eq(pair(x, y), pair(u, v)) |-
		$set_xy = set_is_set_2[@h1; @h2];
		$set_x = pair_set_e1[$set_xy];
		$set_y = pair_set_e2[$set_xy];
		$set_u = pair_set_e1[@h1];
		$set_v = pair_set_e2[@h1];
		
		pair_eq_e1[$set_x; $set_y; $set_u; $set_v; @h2]
}

theorem pair_eq_e2(cls x: @11, cls y: @21, cls u: @31, cls v: @41) {
	set(x), set(y), set(u), set(v), eq(pair(x, y), pair(u, v)) |-
		Ae2[pair_eq_e[@h1; @h2; @h3; @h4; @h5]]
}

theorem pair_eq_e2_v1(cls x: @211, cls y: @212, cls u: @221, cls v: @222) {
	set(pair(x, y)), eq(pair(x, y), pair(u, v)) |-
		$set_uv = set_is_set_1[@h1; @h2];
		$set_x = pair_set_e1[@h1];
		$set_y = pair_set_e2[@h1];
		$set_u = pair_set_e1[$set_uv];
		$set_v = pair_set_e2[$set_uv];
		
		pair_eq_e2[$set_x; $set_y; $set_u; $set_v; @h2]
}

theorem pair_eq_e2_v2(cls x: @211, cls y: @212, cls u: @221, cls v: @222) {
	set(pair(u, v)), eq(pair(x, y), pair(u, v)) |-
		$set_xy = set_is_set_2[@h1; @h2];
		$set_x = pair_set_e1[$set_xy];
		$set_y = pair_set_e2[$set_xy];
		$set_u = pair_set_e1[@h1];
		$set_v = pair_set_e2[@h1];
		
		pair_eq_e2[$set_x; $set_y; $set_u; $set_v; @h2]
}

"순서쌍을 위한 setbuilder. 즉 [$\{(a, b): f(a, b)\}]이다."
$\left\{<<:>>#1\right\}$
cls setbuilder_pair(pr2 f) {
	setbuilder((cls z) => {
		X2((cls a, cls b) => {
			A(
				eq(z, pair(a, b)),
				f(a, b)
			)
		})
	})
}

theorem setbuilder_pair_i(pr2 f: @r21, cls a: @111, cls b: @112) {
	set(pair(a, b)), f(a, b) |-
		setbuilder_i[
			@h1;
			Xi2((cls c, cls d) => {
				A(
					eq(pair(a, b), pair(c, d)),
					f(c, d)
				)
			}, a, b)[Ai[eq_reflexive(pair(a, b)); @h2]]
		][as in(pair(a, b), setbuilder_pair(f))]
}

theorem setbuilder_pair_e(pr2 f: @121, cls a: @111, cls b: @112) {
	in(pair(a, b), setbuilder_pair(f)) |-
		$set_a_b = set_i[@h1];
		mpX2_X2e_p(?, f(a, b))[
			setbuilder_e[@h1]
			[as X2((cls c, cls d) => {
				A(
					eq(pair(a, b), pair(c, d)),
					f(c, d)
				)
			})];
			Ui2[(cls c, cls d) => cp2[eq(pair(a, b), pair(c, d)), f(c, d) |-
				ax_indiscernible2_m2(f, ?, ?, ?, ?)[
					pair_eq_e1_v1[$set_a_b; @h2];
					pair_eq_e2_v1[$set_a_b; @h2];
					@h3
				]
			]]
		]
}

"순서쌍을 위한 setbuilder2. 즉 [$\{f(a, b): g(a, b)\}]이다."
$\left\{#1<<:>>#2\right\}$
cls setbuilder2_pair([(cls, cls) -> cls] f, pr2 g) {
	setbuilder((cls z) => {
		X2((cls a, cls b) => {
			A(
				eq(z, f(a, b)),
				g(a, b)
			)
		})
	})
}

"곱집합(cartesian product)."
$!<prec=300>#1<<\times>>#2$
cls cartesian($A$ cls a, $B$ cls b) {
	setbuilder_pair((cls x, cls y) => {
		A(in(x, a), in(y, b))
	})
}

theorem cartesian_in_i($A$ cls a: @12, $B$ cls b: @22, cls x: @11, cls y: @21) {
	in(x, a), in(y, b) |-
		setbuilder_i[
			pair_set_i[set_i[@h1]; set_i[@h2]];
			Xi2((cls u, cls v) => {
				A(eq(pair(x, y), pair(u, v)), A(in(u, a), in(v, b)))
			}, x, y)[
				Ai[
					eq_reflexive(pair(x, y));
					Ai[@h1; @h2]
				]
			]
		][as in(pair(x, y), cartesian(a, b))]
}

theorem cartesian_in_e($A$ cls a: @121, $B$ cls b: @122, cls x: @111, cls y: @112) {
	in(pair(x, y), cartesian(a, b)) |-
		$set_pair_xy = set_i[@h1];
		$set_x = pair_set_e1[$set_pair_xy];
		$set_y = pair_set_e2[$set_pair_xy];
		
		mpX2_X2e_p(?, A(in(x, a), in(y, b)))[
			setbuilder_e((cls z) => {
				X2((cls u, cls v) => {
					A(eq(z, pair(u, v)), A(in(u, a), in(v, b)))
				})
			}, ?)[@h1];
			Ui2[(cls u, cls v) => cp[A(eq(pair(x, y), pair(u, v)), A(in(u, a), in(v, b))) |-
				$foo = Ae2[@h2];
				$u_in_a = Ae1[$foo];
				$v_in_b = Ae2[$foo];
				$u_is_set = set_i[$u_in_a];
				$v_is_set = set_i[$v_in_b];
				$Ae1h4 = Ae1[@h2];

				Ai[
					in_eq_left_2[$u_in_a; pair_eq_e1[$set_x; $set_y; $u_is_set; $v_is_set; $Ae1h4]];
					in_eq_left_2[$v_in_b; pair_eq_e2[$set_x; $set_y; $u_is_set; $v_is_set; $Ae1h4]]
				]
			]]
		]
}

theorem cartesian_in_e1($A$ cls a: @121, $B$ cls b: @122, cls x: @111, cls y: @112) {
	in(pair(x, y), cartesian(a, b)) |- Ae1[cartesian_in_e[@h1]]
}

theorem cartesian_in_e2($A$ cls a: @121, $B$ cls b: @122, cls x: @111, cls y: @112) {
	in(pair(x, y), cartesian(a, b)) |- Ae2[cartesian_in_e[@h1]]
}

"[$A] 및 [$B] 상에서의 이항관계. [$A\times B]의 부분집합이다. heterogeneous relation이라고도 한다."
$\left(<<\operatorname{relation}>>#1\text{ over }#2\text{ and } #3\right)$
st is_rel_over_sets($R$ cls r, $A$ cls a, $B$ cls b) {
	subseteq(r, cartesian(a, b))
}

"[$A] 상에서의 이항관계. [$A\times A]의 부분집합이다. homogeneous relation 또는 endorelation이라고도 한다."
$\left(<<\operatorname{relation}>>#1\text{ over }#2\right)$
st is_rel_over_set($R$ cls r, $A$ cls a) {
	is_rel_over_sets(r, a, a)
}

"정의역과 치역에 관한 조건이 없는 이항관계. [$V\times V]의 부분집합이다. `[Pinter]`에서 graph라 부르는 것이다."
$\left(<<\operatorname{relation}>> #1\right)$
st is_rel($R$ cls r) {
	is_rel_over_set(r, universe)
}

"이항관계의 정의역(domain)."
$!<prec=200><<\operatorname{dom}>>#1$
cls rel_dom($R$ cls r) {
	setbuilder((cls x) => {
		X((cls y) => {
			in(pair(x, y), r)
		})
	})
}

theorem rel_dom_in_i($R$ cls r: @12, cls x: @111, cls y: @112) {
	in(pair(x, y), r) |-
		$set_x = pair_set_e1[set_i[@h1]];
		
		setbuilder_i[
			$set_x;
			Xi((cls y) => {in(pair(x, y), r)}, y)[@h1]
		][as in(x, rel_dom(r))]
}

"이항관계의 치역(image)."
$!<prec=200><<\operatorname{im}>>#1$
cls rel_im($R$ cls r) {
	setbuilder((cls y) => {
		X((cls x) => {
			in(pair(x, y), r)
		})
	})
}

"어떤 집합에 의한 상(image)."
$#1\mathord{\left[#2\right]}{}^{<<\scriptscriptstyle\dag>>}$
cls rel_im_set($R$ cls r, $A$ cls a) {
	setbuilder((cls y) => {
		Xin(a, (cls x) => {
			in(pair(x, y), r)
		})
	})
}

theorem rel_im_set_eq_i($R$ cls r, $A$ cls a: @11, $B$ cls b: @12) {
	eq(a, b) |-
		setbuilder_eq_i(
			(cls y) => {
				Xin(a, (cls x) => {
					in(pair(x, y), r)
				})
			},
			(cls y) => {
				Xin(b, (cls x) => {
					in(pair(x, y), r)
				})
			}
		)[Ui[(cls y) => {
			Xin_eq(?, ?, (cls x) => {
				in(pair(x, y), r)
			})[@h1]
		}]][as eq(rel_im_set(r, a), rel_im_set(r, b))]
}

"이항관계의 역(inverse)."
$!<prec=190>{#1}^{<<-1>>}$
sealed cls rel_inverse(cls x) {
	setbuilder_pair((cls a, cls b) => {
		in(pair(b, a), x)
	})
}

theorem rel_inverse_in_i(cls x: @12, cls a: @111, cls b: @112) using rel_inverse {
	in(pair(a, b), x) |-
		setbuilder_pair_i[
			pair_set_flip[set_i[@h1]];
			@h1
		][as in(pair(b, a), rel_inverse(x))]
}

theorem rel_inverse_in_e(cls x: @121, cls a: @111, cls b: @112) using rel_inverse {
	in(pair(a, b), rel_inverse(x)) |-
		setbuilder_pair_e[@h1]
}

theorem rel_inverse_in(cls x, cls a, cls b) {
	Ei[
		cp[rel_inverse_in_i(x, a, b)];
		cp[rel_inverse_in_e(x, b, a)]
	]
}

theorem rel_inverse_is_rel($R$ cls r: @11, $A$ cls a: @12, $B$ cls b: @13) using rel_inverse {
	is_rel_over_sets(r, a, b) |-
		Ui[(cls z) => cp[in(z, rel_inverse(r)) |-
			mpX2_X2e_p(?, in(z, cartesian(b, a)))[
				setbuilder_e[@h2];
				Ui2[(cls x, cls y) => cp2[eq(z, pair(x, y)), in(pair(y, x), r) |-
					$foo = cartesian_in_e[in_subseteq[@h4; @h1]];
					in_eq_left_2[cartesian_in_i[Ae2[$foo]; Ae1[$foo]]; @h3]
				]]
			]
		]][as is_rel_over_sets(rel_inverse(r), b, a)]
}

"이항관계의 합성(composition)."
$!<prec=300>#1 <<\circ>> #2$
cls rel_composite(cls x, cls y) {
	setbuilder_pair((cls a, cls c) => {
		X((cls b) => {
			A(
				in(pair(a, b), y),
				in(pair(b, c), x)
			)
		})
	})
}

theorem rel_composite_in_i(cls f: @12, cls g: @22, cls x: @111, cls y: @112, cls z: @212) {
	in(pair(x, y), f), in(pair(y, z), g) |-
		setbuilder_pair_i[
			pair_set_i[pair_set_e1[set_i[@h1]]; pair_set_e2[set_i[@h2]]];
			Xi((cls y) => A(in(pair(x, y), f), in(pair(y, z), g)), y)[Ai[@h1; @h2]]
		][as in(pair(x, z), rel_composite(g, f))]
}

"이항관계의 제한(restriction)."
$\left(#1{<<\upharpoonright>>}_{#2}\right)$
cls rel_restrict($R$ cls r, $A$ cls a) {
	setbuilder_pair((cls x, cls y) => {
		A(
			in(pair(x, y), r),
			in(x, a)
		)
	})
}

"이항관계의 반사성(reflexivity)."
st rel_reflexive($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => in(pair(x, x), r))
}

"이항관계의 비반사성(irreflexivity)."
st rel_irreflexive($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => Nin(pair(x, x), r))
}

"이항관계의 대칭성(symmetry)."
st rel_symmetric($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => {
		Uin(a, (cls y) => {
			I(
				in(pair(x, y), r),
				in(pair(y, x), r)
			)
		})
	})
}

"이항관계의 반대칭성(antisymmetry)."
st rel_antisymmetric($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => {
		Uin(a, (cls y) => {
			I(
				A(
					in(pair(x, y), r),
					in(pair(y, x), r)
				),
				eq(x, y)
			)
		})
	})
}

"이항관계의 비대칭성(asymmetry)."
st rel_asymmetric($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => {
		Uin(a, (cls y) => {
			I(
				in(pair(x, y), r),
				Nin(pair(y, x), r)
			)
		})
	})
}

"이항관계의 추이성(transitivity)."
st rel_transitive($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => {
		Uin(a, (cls y) => {
			Uin(a, (cls z) => {
				I(
					A(
						in(pair(x, y), r),
						in(pair(y, z), r)
					),
					in(pair(x, z), r)
				)
			})
		})
	})
}

"이항관계의 반추이성(antitransitivity)."
st rel_antitransitive($R$ cls r, $A$ cls a) {
	Uin(a, (cls x) => {
		Uin(a, (cls y) => {
			Uin(a, (cls z) => {
				I(
					A(
						in(pair(x, y), r),
						in(pair(y, z), r)
					),
					Nin(pair(x, z), r)
				)
			})
		})
	})
}

"원순서(preorder). 즉 반사적이고 추이적인 이항관계이다."
$\left(<<\operatorname{preorder}>> #1\text{ over }#2\right)$
st is_preorder($R$ cls r, $A$ cls a) {
	A(
		is_rel_over_set(r, a),
		A(
			rel_reflexive(r, a),
			rel_transitive(r, a)
		)
	)
}

"동치관계(equivalence relation). 즉 대칭적인 원순서이다."
$\left(<<\operatorname{equiv.\ rel.}>> #1\text{ over }#2\right)$
st is_equiv_rel($R$ cls r, $A$ cls a) {
	A(
		is_preorder(r, a),
		rel_symmetric(r, a)
	)
}

"부분 순서(partial order). strict partial order와 구분하여 non-strict partial order라고도 한다. 즉 반대칭적인 원순서이다. 보통 [$\leq] 등으로 표기한다."
$\left(<<\operatorname{partial\ ord.}>> #1\text{ over }#2\right)$
st is_partial_order($R$ cls r, $A$ cls a) {
	A(
		is_preorder(r, a),
		rel_antisymmetric(r, a)
	)
}

"비반사적 부분 순서(strict partial order). 보통 [$<] 등으로 표기하는 이항관계이다. 이때 비대칭성이 비반사성을 함의함에 주목하라."
$\left(<<\operatorname{strict\ partial\ ord.}>> #1\text{ over }#2\right)$
st is_strict_order($R$ cls r, $A$ cls a) {
	A(
		is_rel_over_set(r, a),
		A(
			rel_asymmetric(r, a),
			rel_transitive(r, a)
		)
	)
}

theorem setbuilder_pair_is_rel(pr2 f: @r11) {
	with ($A$ cls aa = setbuilder_pair(f)) {
		|- Ui[(cls z) => cp[in(z, aa) |-
			mpX2_X2e_p(?, in(z, cartesian(universe, universe)))[
				setbuilder_e[@h1];
				Ui2[(cls a, cls b) => cp2[eq(z, pair(a, b)), f(a, b) |-
					$set_ab = set_i[in_eq_left_1[@h1; @h2]];
					$a_in_V = universe_in_i[pair_set_e1[$set_ab]];
					$b_in_V = universe_in_i[pair_set_e2[$set_ab]];

					in_eq_left_2[
						cartesian_in_i[$a_in_V; $b_in_V];
						@h2
					]
				]]
			]
		]][as is_rel(aa)]
	}
}

"이항관계를 위한 U.

[$R]이 이항관계일 때 임의의 [$.(a, b)\in R]에 대해 [$f(a, b)]이면, 임의의 [$x\in R]에 대해 [$fx]이다."
theorem rel_U(pr f: @r2, $R$ cls r: @11) {
	is_rel(r), U2((cls x, cls y) => {
		I(
			in(pair(x, y), r),
			f(pair(x, y))
		)
	}) |-
		Ui[(cls z) => cp[in(z, r) |-
			mpX2_X2e_p(?, f(z))[
				X2Ae1(
					(cls x, cls y) => eq(z, pair(x, y)),
					(cls x, cls y) => A(in(x, universe), in(y, universe))
				)[setbuilder_e[in_subseteq[@h3; @h1]]];
				Ui2[(cls x, cls y) => {
					cp[eq(z, pair(x, y)) |-
						ax_indiscernible_m2(f, ?, ?)[@h4; mp[in_eq_left_1[@h3; @h4]; Ue2(?, x, y)[@h2]]]]
				}]
			]
		]][as Uin(r, f)]
}

theorem rel_eq_i($R_1$ cls r1: @11, $R_2$ cls r2: @21) {
	is_rel(r1), is_rel(r2), U2((cls x, cls y) => {
		E(in(pair(x, y), r1), in(pair(x, y), r2))
	}) |-
		$Ee1 = Ee1U2(
			(cls x, cls y) => in(pair(x, y), r1),
			(cls x, cls y) => in(pair(x, y), r2)
		)[@h3][as U2((cls x, cls y) => {
			I(in(pair(x, y), r1), in(pair(x, y), r2))
		})];
		
		$Ee2 = Ee2U2(
			(cls x, cls y) => in(pair(x, y), r1),
			(cls x, cls y) => in(pair(x, y), r2)
		)[@h3][as U2((cls x, cls y) => {
			I(in(pair(x, y), r2), in(pair(x, y), r1))
		})];
		
		subseteq_to_eq[
			rel_U(is_in(r2), ?)[@h1; $Ee1][as subseteq(r1, r2)];
			rel_U(is_in(r1), ?)[@h2; $Ee2][as subseteq(r2, r1)]
		]
}

"곱집합은 이항관계이다."
theorem cartesian_is_rel(cls x, cls y) {
	Ui[(cls z) => cp[in(z, cartesian(x, y)) |-
		setbuilder_i[
			set_i[@h1];
			mpX2(?, (cls a, cls b) => {
				A(eq(z, pair(a, b)), A(in(a, universe), in(b, universe)))
			})[
				setbuilder_e[@h1];
				Ui2[(cls a, cls b) => cp2[eq(z, pair(a, b)), A(in(a, x), in(b, y)) |-
					Ai[
						@h2;
						Ai[
							universe_in_i[set_i[Ae1[@h3]]];
							universe_in_i[set_i[Ae2[@h3]]]
						]
					]
				]]
			]
		][as in(z, cartesian(universe, universe))]
	]]
	[as is_rel(cartesian(x, y))]
}

theorem cartesian_inverse($A$ cls a, $B$ cls b) {
	$foo = ($A$ cls a, $B$ cls b, cls x, cls y) => {
		cp[in(pair(x, y), cartesian(a, b)) |-
			cartesian_in_i[
				Ae2[cartesian_in_e[@h1]];
				Ae1[cartesian_in_e[@h1]]
			]]
	};
	
	eq_symmetric[rel_eq_i[
		cartesian_is_rel(b, a);
		rel_inverse_is_rel[cartesian_is_rel(a, b)][as is_rel(rel_inverse(cartesian(a, b)))];
		Ui2[(cls x, cls y) => syllE[
			Ei[$foo(b, a, x, y); $foo(a, b, y, x)];
			rel_inverse_in(cartesian(a, b), y, x)
		]]
	]]
}

theorem rel_subset_is_rel(cls x: @11, cls y: @12) {
	subseteq(x, y), is_rel(y) |-
		subseteq_subseteq[@h1; @h2][as is_rel(x)]
}

"`[Pinter]` 정리 1.51. 곱집합은 집합이다."
theorem cartesian_is_set($A$ cls a: @11, $B$ cls b: @21) using pair {
	set(a), set(b) |-
		$power_power_cup_is_set = power_is_set[power_is_set[cup_is_set[@h1; @h2]]];
		$cartesian_subseteq_power_power_cup = rel_U(is_in(power(power(cup(a, b)))), cartesian(a, b))[
			cartesian_is_rel(a, b);
			Ui2[(cls x, cls y) => {
				cp[in(pair(x, y), cartesian(a, b)) |-
					$set_pair_xy = set_i[@h3];
					$set_x = pair_set_e1[$set_pair_xy];
					$set_y = pair_set_e2[$set_pair_xy];
					
					$x_in_cup_ab = cup_i1(?, b, ?)[cartesian_in_e1[@h3]];
					$y_in_cup_ab = cup_i2(a, ?, ?)[cartesian_in_e2[@h3]];
					
					$1 = setbuilder_i[
						singleton_set_i(x)[$set_x];
						Ui[(cls z) => cp[in(z, singleton(x)) |-
							in_eq_left_2[$x_in_cup_ab; singleton_e[$set_x; @h4]]]
						][as subseteq(singleton(x), cup(a, b))]
					][as in(singleton(x), power(cup(a, b)))];
					
					$2 = setbuilder_i[
						doubleton_set_i[$set_x; $set_y];
						Ui[(cls z) => cp[in(z, doubleton(x, y)) |-
							Oeu[
								doubleton_e[$set_x; $set_y; @h4];
								eq(z, x) |- in_eq_left_2[$x_in_cup_ab; @h5];
								eq(z, y) |- in_eq_left_2[$y_in_cup_ab; @h5]
							]
						]][as subseteq(doubleton(x, y), cup(a, b))]
					][as in(doubleton(x, y), power(cup(a, b)))];
					
					setbuilder_i[
						pair_set_i[$set_x; $set_y];
						Ui[(cls z) => cp[in(z, doubleton(singleton(x), doubleton(x, y))) |-
							Oeu[
								doubleton_e[singleton_set_i[$set_x]; doubleton_set_i[$set_x; $set_y]; @h4];
								eq(z, singleton(x)) |- in_eq_left_2[$1; @h5];
								eq(z, doubleton(x, y)) |- in_eq_left_2[$2; @h5]
							]
						]][as subseteq(pair(x, y), power(cup(a, b)))]
					][as in(pair(x, y), power(power(cup(a, b))))]
				]
			}]
		]
		[as subseteq(cartesian(a, b), power(power(cup(a, b))))];

		subset_is_set[
			$power_power_cup_is_set;
			$cartesian_subseteq_power_power_cup
		]
}

schema rel_composite_associative(cls x, cls y, cls z) {
	is_rel(x), is_rel(y), is_rel(z) |- eq(
		rel_composite(rel_composite(x, y), z),
		rel_composite(x, rel_composite(y, z))
	)
}

theorem rel_inverse_subseteq($A$ cls a: @21, $B$ cls b: @22) {
	is_rel(a), subseteq(a, b) |-
		rel_U(is_in(rel_inverse(b)), ?)[
			rel_inverse_is_rel[@h1]
			[as is_rel(rel_inverse(a))];
			Ui2[(cls x, cls y) => cp[in(pair(x, y), rel_inverse(a)) |-
				rel_inverse_in_i[in_subseteq[rel_inverse_in_e[@h3]; @h2]]
			]]
		][as subseteq(rel_inverse(a), rel_inverse(b))]
}